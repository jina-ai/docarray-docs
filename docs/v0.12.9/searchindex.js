Search.setIndex({"docnames": ["advanced/document-store/annlite", "advanced/document-store/benchmark", "advanced/document-store/elasticsearch", "advanced/document-store/extend", "advanced/document-store/index", "advanced/document-store/qdrant", "advanced/document-store/sqlite", "advanced/document-store/weaviate", "advanced/graphql-support/index", "advanced/torch-support/index", "api/docarray", "api/docarray.array", "api/docarray.array.annlite", "api/docarray.array.base", "api/docarray.array.chunk", "api/docarray.array.document", "api/docarray.array.elastic", "api/docarray.array.match", "api/docarray.array.memory", "api/docarray.array.mixins", "api/docarray.array.mixins.content", "api/docarray.array.mixins.dataloader", "api/docarray.array.mixins.dataloader.helper", "api/docarray.array.mixins.delitem", "api/docarray.array.mixins.embed", "api/docarray.array.mixins.empty", "api/docarray.array.mixins.evaluation", "api/docarray.array.mixins.find", "api/docarray.array.mixins.getattr", "api/docarray.array.mixins.getitem", "api/docarray.array.mixins.group", "api/docarray.array.mixins.io", "api/docarray.array.mixins.io.binary", "api/docarray.array.mixins.io.common", "api/docarray.array.mixins.io.csv", "api/docarray.array.mixins.io.dataframe", "api/docarray.array.mixins.io.from_gen", "api/docarray.array.mixins.io.json", "api/docarray.array.mixins.io.pbar", "api/docarray.array.mixins.io.pushpull", "api/docarray.array.mixins.match", "api/docarray.array.mixins.parallel", "api/docarray.array.mixins.plot", "api/docarray.array.mixins.post", "api/docarray.array.mixins.pydantic", "api/docarray.array.mixins.reduce", "api/docarray.array.mixins.sample", "api/docarray.array.mixins.setitem", "api/docarray.array.mixins.strawberry", "api/docarray.array.mixins.text", "api/docarray.array.mixins.traverse", "api/docarray.array.qdrant", "api/docarray.array.queryset", "api/docarray.array.queryset.lookup", "api/docarray.array.queryset.parser", "api/docarray.array.sqlite", "api/docarray.array.storage", "api/docarray.array.storage.annlite", "api/docarray.array.storage.annlite.backend", "api/docarray.array.storage.annlite.find", "api/docarray.array.storage.annlite.getsetdel", "api/docarray.array.storage.annlite.helper", "api/docarray.array.storage.annlite.seqlike", "api/docarray.array.storage.base", "api/docarray.array.storage.base.backend", "api/docarray.array.storage.base.getsetdel", "api/docarray.array.storage.base.helper", "api/docarray.array.storage.base.seqlike", "api/docarray.array.storage.elastic", "api/docarray.array.storage.elastic.backend", "api/docarray.array.storage.elastic.find", "api/docarray.array.storage.elastic.getsetdel", "api/docarray.array.storage.elastic.seqlike", "api/docarray.array.storage.memory", "api/docarray.array.storage.memory.backend", "api/docarray.array.storage.memory.find", "api/docarray.array.storage.memory.getsetdel", "api/docarray.array.storage.memory.seqlike", "api/docarray.array.storage.qdrant", "api/docarray.array.storage.qdrant.backend", "api/docarray.array.storage.qdrant.find", "api/docarray.array.storage.qdrant.getsetdel", "api/docarray.array.storage.qdrant.helper", "api/docarray.array.storage.qdrant.seqlike", "api/docarray.array.storage.registry", "api/docarray.array.storage.sqlite", "api/docarray.array.storage.sqlite.backend", "api/docarray.array.storage.sqlite.getsetdel", "api/docarray.array.storage.sqlite.helper", "api/docarray.array.storage.sqlite.seqlike", "api/docarray.array.storage.weaviate", "api/docarray.array.storage.weaviate.backend", "api/docarray.array.storage.weaviate.find", "api/docarray.array.storage.weaviate.getsetdel", "api/docarray.array.storage.weaviate.seqlike", "api/docarray.array.weaviate", "api/docarray.base", "api/docarray.dataclasses", "api/docarray.dataclasses.getter", "api/docarray.dataclasses.setter", "api/docarray.dataclasses.types", "api/docarray.document", "api/docarray.document.data", "api/docarray.document.generators", "api/docarray.document.mixins", "api/docarray.document.mixins.attribute", "api/docarray.document.mixins.audio", "api/docarray.document.mixins.blob", "api/docarray.document.mixins.content", "api/docarray.document.mixins.convert", "api/docarray.document.mixins.dump", "api/docarray.document.mixins.featurehash", "api/docarray.document.mixins.helper", "api/docarray.document.mixins.image", "api/docarray.document.mixins.mesh", "api/docarray.document.mixins.multimodal", "api/docarray.document.mixins.plot", "api/docarray.document.mixins.porting", "api/docarray.document.mixins.property", "api/docarray.document.mixins.protobuf", "api/docarray.document.mixins.pydantic", "api/docarray.document.mixins.rich_embedding", "api/docarray.document.mixins.strawberry", "api/docarray.document.mixins.sugar", "api/docarray.document.mixins.text", "api/docarray.document.mixins.video", "api/docarray.document.pydantic_model", "api/docarray.document.strawberry_type", "api/docarray.helper", "api/docarray.math", "api/docarray.math.distance", "api/docarray.math.distance.numpy", "api/docarray.math.distance.paddle", "api/docarray.math.distance.tensorflow", "api/docarray.math.distance.torch", "api/docarray.math.evaluation", "api/docarray.math.helper", "api/docarray.math.ndarray", "api/docarray.proto", "api/docarray.proto.docarray_pb2", "api/docarray.proto.io", "api/docarray.proto.io.ndarray", "api/docarray.score", "api/docarray.score.data", "api/docarray.score.mixins", "api/docarray.score.mixins.property", "api/docarray.score.mixins.representer", "api/docarray.typing", "api/modules", "changelog/index", "datatypes/audio/index", "datatypes/image/index", "datatypes/index", "datatypes/mesh/index", "datatypes/tabular/index", "datatypes/text/index", "datatypes/video/index", "fundamentals/dataclass/access", "fundamentals/dataclass/construct", "fundamentals/dataclass/example", "fundamentals/dataclass/index", "fundamentals/dataclass/new-type", "fundamentals/document/attribute", "fundamentals/document/construct", "fundamentals/document/embedding", "fundamentals/document/fluent-interface", "fundamentals/document/index", "fundamentals/document/nested", "fundamentals/document/serialization", "fundamentals/document/visualization", "fundamentals/documentarray/access-attributes", "fundamentals/documentarray/access-elements", "fundamentals/documentarray/construct", "fundamentals/documentarray/embedding", "fundamentals/documentarray/evaluation", "fundamentals/documentarray/find", "fundamentals/documentarray/index", "fundamentals/documentarray/matching", "fundamentals/documentarray/parallelization", "fundamentals/documentarray/post-external", "fundamentals/documentarray/serialization", "fundamentals/documentarray/visualization", "fundamentals/fastapi-support/index", "fundamentals/jina-support/index", "fundamentals/notebook-support/index", "get-started/what-is", "index", "proto/docs", "proto/index"], "filenames": ["advanced/document-store/annlite.md", "advanced/document-store/benchmark.md", "advanced/document-store/elasticsearch.md", "advanced/document-store/extend.md", "advanced/document-store/index.md", "advanced/document-store/qdrant.md", "advanced/document-store/sqlite.md", "advanced/document-store/weaviate.md", "advanced/graphql-support/index.md", "advanced/torch-support/index.md", "api/docarray.rst", "api/docarray.array.rst", "api/docarray.array.annlite.rst", "api/docarray.array.base.rst", "api/docarray.array.chunk.rst", "api/docarray.array.document.rst", "api/docarray.array.elastic.rst", "api/docarray.array.match.rst", "api/docarray.array.memory.rst", "api/docarray.array.mixins.rst", "api/docarray.array.mixins.content.rst", "api/docarray.array.mixins.dataloader.rst", "api/docarray.array.mixins.dataloader.helper.rst", "api/docarray.array.mixins.delitem.rst", "api/docarray.array.mixins.embed.rst", "api/docarray.array.mixins.empty.rst", "api/docarray.array.mixins.evaluation.rst", "api/docarray.array.mixins.find.rst", "api/docarray.array.mixins.getattr.rst", "api/docarray.array.mixins.getitem.rst", "api/docarray.array.mixins.group.rst", "api/docarray.array.mixins.io.rst", "api/docarray.array.mixins.io.binary.rst", "api/docarray.array.mixins.io.common.rst", "api/docarray.array.mixins.io.csv.rst", "api/docarray.array.mixins.io.dataframe.rst", "api/docarray.array.mixins.io.from_gen.rst", "api/docarray.array.mixins.io.json.rst", "api/docarray.array.mixins.io.pbar.rst", "api/docarray.array.mixins.io.pushpull.rst", "api/docarray.array.mixins.match.rst", "api/docarray.array.mixins.parallel.rst", "api/docarray.array.mixins.plot.rst", "api/docarray.array.mixins.post.rst", "api/docarray.array.mixins.pydantic.rst", "api/docarray.array.mixins.reduce.rst", "api/docarray.array.mixins.sample.rst", "api/docarray.array.mixins.setitem.rst", "api/docarray.array.mixins.strawberry.rst", "api/docarray.array.mixins.text.rst", "api/docarray.array.mixins.traverse.rst", "api/docarray.array.qdrant.rst", "api/docarray.array.queryset.rst", "api/docarray.array.queryset.lookup.rst", "api/docarray.array.queryset.parser.rst", "api/docarray.array.sqlite.rst", "api/docarray.array.storage.rst", "api/docarray.array.storage.annlite.rst", "api/docarray.array.storage.annlite.backend.rst", "api/docarray.array.storage.annlite.find.rst", "api/docarray.array.storage.annlite.getsetdel.rst", "api/docarray.array.storage.annlite.helper.rst", "api/docarray.array.storage.annlite.seqlike.rst", "api/docarray.array.storage.base.rst", "api/docarray.array.storage.base.backend.rst", "api/docarray.array.storage.base.getsetdel.rst", "api/docarray.array.storage.base.helper.rst", "api/docarray.array.storage.base.seqlike.rst", "api/docarray.array.storage.elastic.rst", "api/docarray.array.storage.elastic.backend.rst", "api/docarray.array.storage.elastic.find.rst", "api/docarray.array.storage.elastic.getsetdel.rst", "api/docarray.array.storage.elastic.seqlike.rst", "api/docarray.array.storage.memory.rst", "api/docarray.array.storage.memory.backend.rst", "api/docarray.array.storage.memory.find.rst", "api/docarray.array.storage.memory.getsetdel.rst", "api/docarray.array.storage.memory.seqlike.rst", "api/docarray.array.storage.qdrant.rst", "api/docarray.array.storage.qdrant.backend.rst", "api/docarray.array.storage.qdrant.find.rst", "api/docarray.array.storage.qdrant.getsetdel.rst", "api/docarray.array.storage.qdrant.helper.rst", "api/docarray.array.storage.qdrant.seqlike.rst", "api/docarray.array.storage.registry.rst", "api/docarray.array.storage.sqlite.rst", "api/docarray.array.storage.sqlite.backend.rst", "api/docarray.array.storage.sqlite.getsetdel.rst", "api/docarray.array.storage.sqlite.helper.rst", "api/docarray.array.storage.sqlite.seqlike.rst", "api/docarray.array.storage.weaviate.rst", "api/docarray.array.storage.weaviate.backend.rst", "api/docarray.array.storage.weaviate.find.rst", "api/docarray.array.storage.weaviate.getsetdel.rst", "api/docarray.array.storage.weaviate.seqlike.rst", "api/docarray.array.weaviate.rst", "api/docarray.base.rst", "api/docarray.dataclasses.rst", "api/docarray.dataclasses.getter.rst", "api/docarray.dataclasses.setter.rst", "api/docarray.dataclasses.types.rst", "api/docarray.document.rst", "api/docarray.document.data.rst", "api/docarray.document.generators.rst", "api/docarray.document.mixins.rst", "api/docarray.document.mixins.attribute.rst", "api/docarray.document.mixins.audio.rst", "api/docarray.document.mixins.blob.rst", "api/docarray.document.mixins.content.rst", "api/docarray.document.mixins.convert.rst", "api/docarray.document.mixins.dump.rst", "api/docarray.document.mixins.featurehash.rst", "api/docarray.document.mixins.helper.rst", "api/docarray.document.mixins.image.rst", "api/docarray.document.mixins.mesh.rst", "api/docarray.document.mixins.multimodal.rst", "api/docarray.document.mixins.plot.rst", "api/docarray.document.mixins.porting.rst", "api/docarray.document.mixins.property.rst", "api/docarray.document.mixins.protobuf.rst", "api/docarray.document.mixins.pydantic.rst", "api/docarray.document.mixins.rich_embedding.rst", "api/docarray.document.mixins.strawberry.rst", "api/docarray.document.mixins.sugar.rst", "api/docarray.document.mixins.text.rst", "api/docarray.document.mixins.video.rst", "api/docarray.document.pydantic_model.rst", "api/docarray.document.strawberry_type.rst", "api/docarray.helper.rst", "api/docarray.math.rst", "api/docarray.math.distance.rst", "api/docarray.math.distance.numpy.rst", "api/docarray.math.distance.paddle.rst", "api/docarray.math.distance.tensorflow.rst", "api/docarray.math.distance.torch.rst", "api/docarray.math.evaluation.rst", "api/docarray.math.helper.rst", "api/docarray.math.ndarray.rst", "api/docarray.proto.rst", "api/docarray.proto.docarray_pb2.rst", "api/docarray.proto.io.rst", "api/docarray.proto.io.ndarray.rst", "api/docarray.score.rst", "api/docarray.score.data.rst", "api/docarray.score.mixins.rst", "api/docarray.score.mixins.property.rst", "api/docarray.score.mixins.representer.rst", "api/docarray.typing.rst", "api/modules.rst", "changelog/index.md", "datatypes/audio/index.md", "datatypes/image/index.md", "datatypes/index.md", "datatypes/mesh/index.md", "datatypes/tabular/index.md", "datatypes/text/index.md", "datatypes/video/index.md", "fundamentals/dataclass/access.md", "fundamentals/dataclass/construct.md", "fundamentals/dataclass/example.md", "fundamentals/dataclass/index.md", "fundamentals/dataclass/new-type.md", "fundamentals/document/attribute.md", "fundamentals/document/construct.md", "fundamentals/document/embedding.md", "fundamentals/document/fluent-interface.md", "fundamentals/document/index.md", "fundamentals/document/nested.md", "fundamentals/document/serialization.md", "fundamentals/document/visualization.md", "fundamentals/documentarray/access-attributes.md", "fundamentals/documentarray/access-elements.md", "fundamentals/documentarray/construct.md", "fundamentals/documentarray/embedding.md", "fundamentals/documentarray/evaluation.md", "fundamentals/documentarray/find.md", "fundamentals/documentarray/index.md", "fundamentals/documentarray/matching.md", "fundamentals/documentarray/parallelization.md", "fundamentals/documentarray/post-external.md", "fundamentals/documentarray/serialization.md", "fundamentals/documentarray/visualization.md", "fundamentals/fastapi-support/index.md", "fundamentals/jina-support/index.md", "fundamentals/notebook-support/index.md", "get-started/what-is.md", "index.md", "proto/docs.md", "proto/index.md"], "titles": ["Annlite", "One Million Scale Benchmark", "Elasticsearch", "Add New Document Store", "Document Store", "Qdrant", "SQLite", "Weaviate", "GraphQL", "PyTorch/Deep Learning Frameworks", "docarray package", "docarray.array package", "docarray.array.annlite module", "docarray.array.base module", "docarray.array.chunk module", "docarray.array.document module", "docarray.array.elastic module", "docarray.array.match module", "docarray.array.memory module", "docarray.array.mixins package", "docarray.array.mixins.content module", "docarray.array.mixins.dataloader package", "docarray.array.mixins.dataloader.helper module", "docarray.array.mixins.delitem module", "docarray.array.mixins.embed module", "docarray.array.mixins.empty module", "docarray.array.mixins.evaluation module", "docarray.array.mixins.find module", "docarray.array.mixins.getattr module", "docarray.array.mixins.getitem module", "docarray.array.mixins.group module", "docarray.array.mixins.io package", "docarray.array.mixins.io.binary module", "docarray.array.mixins.io.common module", "docarray.array.mixins.io.csv module", "docarray.array.mixins.io.dataframe module", "docarray.array.mixins.io.from_gen module", "docarray.array.mixins.io.json module", "docarray.array.mixins.io.pbar module", "docarray.array.mixins.io.pushpull module", "docarray.array.mixins.match module", "docarray.array.mixins.parallel module", "docarray.array.mixins.plot module", "docarray.array.mixins.post module", "docarray.array.mixins.pydantic module", "docarray.array.mixins.reduce module", "docarray.array.mixins.sample module", "docarray.array.mixins.setitem module", "docarray.array.mixins.strawberry module", "docarray.array.mixins.text module", "docarray.array.mixins.traverse module", "docarray.array.qdrant module", "docarray.array.queryset package", "docarray.array.queryset.lookup module", "docarray.array.queryset.parser module", "docarray.array.sqlite module", "docarray.array.storage package", "docarray.array.storage.annlite package", "docarray.array.storage.annlite.backend module", "docarray.array.storage.annlite.find module", "docarray.array.storage.annlite.getsetdel module", "docarray.array.storage.annlite.helper module", "docarray.array.storage.annlite.seqlike module", "docarray.array.storage.base package", "docarray.array.storage.base.backend module", "docarray.array.storage.base.getsetdel module", "docarray.array.storage.base.helper module", "docarray.array.storage.base.seqlike module", "docarray.array.storage.elastic package", "docarray.array.storage.elastic.backend module", "docarray.array.storage.elastic.find module", "docarray.array.storage.elastic.getsetdel module", "docarray.array.storage.elastic.seqlike module", "docarray.array.storage.memory package", "docarray.array.storage.memory.backend module", "docarray.array.storage.memory.find module", "docarray.array.storage.memory.getsetdel module", "docarray.array.storage.memory.seqlike module", "docarray.array.storage.qdrant package", "docarray.array.storage.qdrant.backend module", "docarray.array.storage.qdrant.find module", "docarray.array.storage.qdrant.getsetdel module", "docarray.array.storage.qdrant.helper module", "docarray.array.storage.qdrant.seqlike module", "docarray.array.storage.registry module", "docarray.array.storage.sqlite package", "docarray.array.storage.sqlite.backend module", "docarray.array.storage.sqlite.getsetdel module", "docarray.array.storage.sqlite.helper module", "docarray.array.storage.sqlite.seqlike module", "docarray.array.storage.weaviate package", "docarray.array.storage.weaviate.backend module", "docarray.array.storage.weaviate.find module", "docarray.array.storage.weaviate.getsetdel module", "docarray.array.storage.weaviate.seqlike module", "docarray.array.weaviate module", "docarray.base module", "docarray.dataclasses package", "docarray.dataclasses.getter module", "docarray.dataclasses.setter module", "docarray.dataclasses.types module", "docarray.document package", "docarray.document.data module", "docarray.document.generators module", "docarray.document.mixins package", "docarray.document.mixins.attribute module", "docarray.document.mixins.audio module", "docarray.document.mixins.blob module", "docarray.document.mixins.content module", "docarray.document.mixins.convert module", "docarray.document.mixins.dump module", "docarray.document.mixins.featurehash module", "docarray.document.mixins.helper module", "docarray.document.mixins.image module", "docarray.document.mixins.mesh module", "docarray.document.mixins.multimodal module", "docarray.document.mixins.plot module", "docarray.document.mixins.porting module", "docarray.document.mixins.property module", "docarray.document.mixins.protobuf module", "docarray.document.mixins.pydantic module", "docarray.document.mixins.rich_embedding module", "docarray.document.mixins.strawberry module", "docarray.document.mixins.sugar module", "docarray.document.mixins.text module", "docarray.document.mixins.video module", "docarray.document.pydantic_model module", "docarray.document.strawberry_type module", "docarray.helper module", "docarray.math package", "docarray.math.distance package", "docarray.math.distance.numpy module", "docarray.math.distance.paddle module", "docarray.math.distance.tensorflow module", "docarray.math.distance.torch module", "docarray.math.evaluation module", "docarray.math.helper module", "docarray.math.ndarray module", "docarray.proto package", "docarray.proto.docarray_pb2 module", "docarray.proto.io package", "docarray.proto.io.ndarray module", "docarray.score package", "docarray.score.data module", "docarray.score.mixins package", "docarray.score.mixins.property module", "docarray.score.mixins.representer module", "docarray.typing package", "docarray", "Changelog", "<svg version=\"1.1\" width=\"1.0em\" height=\"1.0em\" class=\"sd-octicon sd-octicon-unmute\" viewBox=\"0 0 16 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.563 2.069A.75.75 0 018 2.75v10.5a.75.75 0 01-1.238.57L3.472 11H1.75A1.75 1.75 0 010 9.25v-2.5C0 5.784.784 5 1.75 5h1.723l3.289-2.82a.75.75 0 01.801-.111zM6.5 4.38L4.238 6.319a.75.75 0 01-.488.181h-2a.25.25 0 00-.25.25v2.5c0 .138.112.25.25.25h2a.75.75 0 01.488.18L6.5 11.62V4.38zm6.096-2.038a.75.75 0 011.06 0 8 8 0 010 11.314.75.75 0 01-1.06-1.06 6.5 6.5 0 000-9.193.75.75 0 010-1.06v-.001zm-1.06 2.121a.75.75 0 10-1.061 1.061 3.5 3.5 0 010 4.95.75.75 0 101.06 1.06 5 5 0 000-7.07l.001-.001z\"></path></svg> Audio", "<svg version=\"1.1\" width=\"1.0em\" height=\"1.0em\" class=\"sd-octicon sd-octicon-image\" viewBox=\"0 0 16 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M1.75 2.5a.25.25 0 00-.25.25v10.5c0 .138.112.25.25.25h.94a.76.76 0 01.03-.03l6.077-6.078a1.75 1.75 0 012.412-.06L14.5 10.31V2.75a.25.25 0 00-.25-.25H1.75zm12.5 11H4.81l5.048-5.047a.25.25 0 01.344-.009l4.298 3.889v.917a.25.25 0 01-.25.25zm1.75-.25V2.75A1.75 1.75 0 0014.25 1H1.75A1.75 1.75 0 000 2.75v10.5C0 14.216.784 15 1.75 15h12.5A1.75 1.75 0 0016 13.25zM5.5 6a.5.5 0 11-1 0 .5.5 0 011 0zM7 6a2 2 0 11-4 0 2 2 0 014 0z\"></path></svg> Image", "Examples", "<svg version=\"1.1\" width=\"1.0em\" height=\"1.0em\" class=\"sd-octicon sd-octicon-package\" viewBox=\"0 0 16 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M8.878.392a1.75 1.75 0 00-1.756 0l-5.25 3.045A1.75 1.75 0 001 4.951v6.098c0 .624.332 1.2.872 1.514l5.25 3.045a1.75 1.75 0 001.756 0l5.25-3.045c.54-.313.872-.89.872-1.514V4.951c0-.624-.332-1.2-.872-1.514L8.878.392zM7.875 1.69a.25.25 0 01.25 0l4.63 2.685L8 7.133 3.245 4.375l4.63-2.685zM2.5 5.677v5.372c0 .09.047.171.125.216l4.625 2.683V8.432L2.5 5.677zm6.25 8.271l4.625-2.683a.25.25 0 00.125-.216V5.677L8.75 8.432v5.516z\"></path></svg> 3D Mesh", "<svg version=\"1.1\" width=\"1.0em\" height=\"1.0em\" class=\"sd-octicon sd-octicon-table\" viewBox=\"0 0 16 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M0 1.75C0 .784.784 0 1.75 0h12.5C15.216 0 16 .784 16 1.75v3.585a.746.746 0 010 .83v8.085A1.75 1.75 0 0114.25 16H6.309a.748.748 0 01-1.118 0H1.75A1.75 1.75 0 010 14.25V6.165a.746.746 0 010-.83V1.75zM1.5 6.5v7.75c0 .138.112.25.25.25H5v-8H1.5zM5 5H1.5V1.75a.25.25 0 01.25-.25H5V5zm1.5 1.5v8h7.75a.25.25 0 00.25-.25V6.5h-8zm8-1.5h-8V1.5h7.75a.25.25 0 01.25.25V5z\"></path></svg> Table", "<svg version=\"1.1\" width=\"1.0em\" height=\"1.0em\" class=\"sd-octicon sd-octicon-typography\" viewBox=\"0 0 16 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M6.21 8.5L4.574 3.594 2.857 8.5H6.21zm.5 1.5l.829 2.487a.75.75 0 001.423-.474L5.735 2.332a1.216 1.216 0 00-2.302-.018l-3.39 9.688a.75.75 0 001.415.496L2.332 10H6.71zm3.13-4.358C10.53 4.374 11.87 4 13 4c1.5 0 3 .939 3 2.601v5.649a.75.75 0 01-1.448.275C13.995 12.82 13.3 13 12.5 13c-.77 0-1.514-.231-2.078-.709-.577-.488-.922-1.199-.922-2.041 0-.694.265-1.411.887-1.944C11 7.78 11.88 7.5 13 7.5h1.5v-.899c0-.54-.5-1.101-1.5-1.101-.869 0-1.528.282-1.84.858a.75.75 0 11-1.32-.716zM14.5 9H13c-.881 0-1.375.22-1.637.444-.253.217-.363.5-.363.806 0 .408.155.697.39.896.249.21.63.354 1.11.354.732 0 1.26-.209 1.588-.449.35-.257.412-.495.412-.551V9z\"></path></svg> Text", "<svg version=\"1.1\" width=\"1.0em\" height=\"1.0em\" class=\"sd-octicon sd-octicon-device-camera-video\" viewBox=\"0 0 16 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M16 3.75a.75.75 0 00-1.136-.643L11 5.425V4.75A1.75 1.75 0 009.25 3h-7.5A1.75 1.75 0 000 4.75v6.5C0 12.216.784 13 1.75 13h7.5A1.75 1.75 0 0011 11.25v-.675l3.864 2.318A.75.75 0 0016 12.25v-8.5zm-5 5.075l3.5 2.1v-5.85l-3.5 2.1v1.65zM9.5 6.75v-2a.25.25 0 00-.25-.25h-7.5a.25.25 0 00-.25.25v6.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-4.5z\"></path></svg> Video", "Access Modality", "Construct", "Process Modality", "Dataclass", "Support New Modality", "Access Attributes", "Construct", "Embedding", "Fluent Interface", "Document", "Nested Structure", "Serialization", "Visualization", "Access Attributes", "Access Documents", "Construct", "Embed via Neural Network", "Evaluate Matches", "Query by Conditions", "DocumentArray", "Match Nearest Neighbours", "Parallelization", "Process via External Flow or Executor", "Serialization", "Visualization", "FastAPI/Pydantic", "Jina", "Jupyter Notebook/Colab", "What is DocArray?", "Welcome to DocArray!", "Protocol Documentation", "Protocol Documentation"], "terms": {"One": [0, 2, 3, 4, 5, 6, 7, 149, 151, 154, 155, 156, 158, 160, 162, 163, 166, 168, 170, 171, 172, 174, 175, 177, 178, 179, 180, 182, 183, 185], "can": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 19, 21, 24, 27, 30, 32, 33, 34, 37, 39, 40, 41, 42, 43, 65, 103, 104, 113, 115, 119, 124, 125, 128, 130, 133, 134, 135, 136, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188], "us": [0, 1, 2, 3, 4, 5, 6, 7, 8, 16, 19, 20, 21, 24, 26, 27, 32, 33, 34, 37, 39, 40, 41, 42, 45, 49, 50, 51, 53, 65, 95, 103, 104, 107, 109, 111, 113, 117, 124, 128, 135, 149, 150, 151, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188], "document": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 13, 14, 17, 20, 24, 25, 26, 27, 30, 32, 34, 40, 41, 42, 43, 45, 46, 49, 50, 53, 67, 77, 81, 89, 94, 96, 99, 128, 135, 137, 140, 148, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 165, 167, 168, 169, 170, 175, 176, 177, 178, 179, 180, 181, 183, 185, 186], "store": [0, 2, 5, 6, 7, 9, 21, 24, 26, 30, 32, 34, 39, 40, 42, 90, 91, 95, 109, 113, 114, 116, 128, 149, 154, 155, 156, 157, 160, 161, 162, 165, 171, 174, 176, 177, 180, 185, 186], "documentarrai": [0, 1, 4, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 30, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 51, 55, 65, 67, 72, 75, 94, 95, 102, 115, 123, 124, 137, 151, 152, 154, 155, 157, 159, 160, 163, 165, 166, 167, 168, 170, 171, 173, 174, 175, 177, 178, 179, 180, 181, 183, 185, 186], "It": [0, 2, 3, 5, 6, 7, 8, 9, 14, 17, 24, 26, 34, 42, 53, 149, 151, 153, 157, 158, 159, 160, 163, 164, 168, 171, 174, 176, 178, 179, 180, 183, 185, 186], "i": [0, 1, 2, 3, 5, 6, 7, 8, 9, 14, 16, 21, 24, 26, 27, 30, 32, 33, 34, 37, 39, 40, 41, 42, 45, 46, 49, 50, 51, 53, 65, 95, 100, 103, 106, 107, 109, 110, 113, 116, 124, 128, 130, 135, 136, 137, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188], "when": [0, 1, 2, 4, 5, 6, 7, 8, 9, 21, 26, 27, 32, 34, 40, 41, 42, 45, 50, 103, 113, 114, 136, 149, 151, 155, 157, 161, 162, 163, 167, 168, 169, 170, 171, 173, 174, 176, 177, 179, 180, 182, 183, 185, 186, 187, 188], "one": [0, 1, 2, 3, 4, 5, 6, 7, 8, 21, 30, 41, 43, 45, 50, 61, 103, 114, 151, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 168, 170, 171, 172, 173, 174, 175, 177, 178, 180, 181, 183, 184, 185], "want": [0, 2, 3, 4, 5, 6, 7, 8, 39, 42, 45, 65, 113, 128, 149, 151, 154, 155, 160, 161, 162, 163, 164, 166, 168, 170, 171, 173, 174, 178, 179, 180, 182, 183], "have": [0, 1, 2, 3, 4, 5, 7, 8, 9, 20, 50, 53, 113, 135, 155, 156, 157, 158, 159, 160, 163, 164, 167, 168, 169, 170, 171, 173, 174, 175, 177, 178, 182, 183, 185, 186, 187, 188], "faster": [0, 2, 4, 5, 7, 20, 32, 33, 164, 168, 178, 186], "retriev": [0, 1, 2, 3, 4, 5, 7, 39, 135, 136, 174], "embed": [0, 1, 2, 5, 7, 8, 9, 19, 20, 24, 34, 40, 42, 101, 102, 111, 126, 159, 166, 168, 169, 173, 174, 175, 177, 180, 182, 185, 186, 187, 188], "e": [0, 1, 2, 3, 4, 5, 7, 8, 14, 103, 151, 160, 162, 163, 167, 168, 170, 171, 173, 174, 178, 179, 180, 185], "match": [0, 1, 2, 5, 7, 8, 10, 11, 19, 26, 27, 45, 50, 53, 101, 102, 103, 104, 113, 116, 118, 123, 126, 152, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 180, 182, 185, 186, 187, 188], "find": [0, 1, 2, 5, 7, 11, 19, 53, 56, 57, 68, 73, 78, 90, 136, 168, 172, 173, 175, 178, 184], "thi": [0, 1, 2, 3, 4, 5, 7, 8, 9, 14, 16, 17, 20, 21, 24, 25, 26, 27, 32, 34, 39, 40, 41, 42, 45, 50, 51, 53, 58, 69, 74, 86, 90, 91, 95, 96, 100, 103, 108, 109, 111, 113, 115, 116, 124, 128, 149, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188], "featur": [0, 1, 2, 3, 4, 5, 7, 8, 111, 149, 150, 152, 153, 156, 157, 158, 160, 164, 165, 168, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186], "requir": [0, 2, 3, 4, 5, 7, 8, 26, 35, 53, 60, 76, 87, 111, 151, 153, 156, 158, 166, 167, 168, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188], "you": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 20, 21, 26, 27, 35, 39, 40, 41, 42, 45, 65, 103, 113, 124, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186], "instal": [0, 2, 5, 7, 8, 35, 151, 153, 156, 168, 179, 180, 181, 182, 183, 184], "via": [0, 1, 2, 3, 4, 5, 7, 8, 9, 21, 37, 39, 41, 50, 151, 152, 153, 154, 156, 157, 158, 160, 167, 168, 169, 170, 171, 174, 177, 180, 182, 183, 184, 185, 186], "pip": [0, 2, 5, 7, 8, 151, 153, 156, 168, 179, 180, 181, 182, 183, 184, 186], "docarrai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 183, 184], "full": [0, 1, 2, 3, 5, 7, 8, 39, 149, 151, 153, 156, 158, 162, 168, 180, 181, 182, 185, 186], "instanti": [0, 2, 5, 7, 16, 51, 95], "storag": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 27, 39, 51, 55, 95, 185], "like": [0, 3, 4, 5, 8, 32, 36, 39, 42, 62, 67, 72, 77, 89, 94, 106, 111, 113, 114, 119, 125, 131, 151, 153, 156, 158, 162, 164, 166, 168, 170, 173, 175, 176, 177, 178, 179, 180, 182, 183, 185, 187, 188], "so": [0, 1, 3, 4, 5, 39, 53, 124, 151, 157, 159, 160, 161, 168, 170, 171, 174, 177, 178, 182, 183, 185], "from": [0, 1, 2, 4, 5, 6, 7, 8, 9, 14, 17, 24, 30, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 45, 46, 49, 53, 62, 67, 72, 77, 83, 96, 100, 103, 107, 109, 113, 114, 116, 117, 120, 122, 123, 124, 126, 128, 135, 136, 137, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 164, 165, 166, 169, 170, 171, 173, 174, 175, 177, 178, 179, 181, 182, 183, 185, 186, 187, 188], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 24, 35, 100, 137, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 185, 186], "da": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 34, 40, 49, 149, 151, 154, 155, 157, 159, 164, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 185], "n_dim": [0, 2, 4, 5, 11, 12, 16, 51, 56, 57, 58, 68, 69, 78, 79, 81, 90, 91, 95, 111], "10": [0, 1, 3, 4, 5, 9, 116, 155, 156, 164, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 20, 21, 26, 30, 33, 39, 41, 45, 46, 49, 53, 65, 67, 77, 89, 100, 103, 113, 116, 125, 128, 149, 151, 153, 155, 156, 158, 159, 160, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 180, 182, 183, 185, 186, 187, 188], "would": [0, 1, 2, 3, 4, 5, 7, 20, 155, 157, 160, 162, 166, 170, 172, 174, 185], "same": [0, 1, 2, 3, 5, 6, 7, 20, 21, 27, 30, 39, 40, 41, 42, 45, 113, 137, 155, 156, 158, 160, 163, 166, 167, 168, 170, 171, 174, 176, 180, 182, 183, 184, 186, 187, 188], "ordinari": [0, 2, 5, 7], "To": [0, 2, 3, 4, 5, 6, 7, 9, 32, 40, 41, 124, 149, 150, 155, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 175, 177, 178, 180, 183, 186, 188], "access": [0, 1, 2, 5, 6, 7, 50, 108, 160, 163, 165, 167, 175, 176, 183, 185], "formerli": [0, 2, 5, 6, 7], "persist": [0, 2, 3, 4, 5, 6, 7, 39], "specifi": [0, 1, 2, 4, 5, 6, 7, 27, 30, 32, 42, 103, 128, 151, 158, 161, 163, 168, 171, 173, 174, 175, 177, 180, 183, 187, 188], "data_path": [0, 4, 11, 12, 56, 57, 58, 61], "data": [0, 1, 2, 3, 4, 8, 9, 10, 21, 32, 33, 34, 37, 44, 45, 66, 67, 101, 103, 106, 107, 109, 110, 113, 114, 116, 117, 120, 122, 124, 125, 126, 128, 136, 142, 152, 154, 155, 157, 158, 160, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188], "summari": [0, 2, 4, 5, 6, 7, 8, 19, 42, 104, 116, 154, 155, 157, 158, 160, 161, 163, 164, 167, 169, 170, 171, 172, 174, 175, 179, 180], "note": [0, 1, 3, 5, 7, 30, 33, 40, 111, 128, 149, 151, 165, 167, 168, 171, 172, 173, 174, 177, 183, 184, 187, 188], "mandatori": [0, 5], "befor": [0, 1, 5, 8, 30, 41, 53, 149, 151, 155, 157, 158, 159, 160, 178, 182, 183], "backend": [0, 1, 8, 21, 27, 40, 41, 56, 57, 63, 65, 68, 73, 78, 85, 90, 168], "other": [0, 1, 2, 3, 4, 5, 6, 7, 26, 27, 40, 45, 53, 65, 96, 151, 152, 158, 162, 164, 166, 168, 178, 180, 183, 185, 186, 187, 188], "function": [0, 1, 2, 3, 4, 5, 6, 7, 9, 21, 23, 24, 25, 26, 27, 29, 32, 33, 34, 35, 36, 40, 41, 42, 43, 46, 47, 49, 50, 53, 58, 60, 69, 74, 75, 76, 86, 87, 91, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 120, 122, 124, 125, 128, 149, 151, 155, 158, 161, 162, 165, 166, 173, 174, 175, 177, 178, 183, 185, 187, 188], "behav": [0, 2, 5, 6, 7, 170], "memori": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 21, 32, 41, 51, 55, 56, 95, 163, 172, 173, 176, 177, 180, 185, 186], "follow": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 43, 53, 65, 113, 116, 149, 151, 153, 157, 158, 159, 160, 163, 164, 165, 166, 168, 171, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 186], "set": [0, 2, 3, 5, 6, 7, 14, 17, 21, 26, 27, 30, 32, 34, 39, 40, 41, 42, 45, 46, 103, 105, 107, 109, 111, 113, 116, 119, 124, 137, 149, 158, 160, 161, 162, 163, 164, 166, 168, 170, 171, 172, 173, 177, 178, 180, 185], "name": [0, 1, 2, 5, 6, 7, 9, 11, 24, 26, 30, 34, 39, 42, 53, 56, 61, 90, 91, 95, 96, 103, 106, 125, 128, 154, 160, 162, 170, 173, 175, 179, 187, 188], "descript": [0, 2, 5, 6, 7, 38, 100, 142, 143, 144, 145, 157, 158, 160, 166, 167, 175, 180, 187, 188], "default": [0, 1, 2, 3, 5, 6, 7, 24, 27, 30, 33, 34, 37, 40, 41, 46, 96, 100, 103, 109, 113, 128, 158, 161, 168, 173, 174, 177, 178, 180, 183], "number": [0, 1, 4, 5, 6, 7, 21, 24, 25, 27, 40, 41, 43, 46, 96, 103, 109, 111, 114, 116, 128, 135, 136, 137, 151, 157, 162, 174, 175, 185, 187, 188], "dimens": [0, 1, 2, 5, 20, 103, 111, 136, 156, 187, 188], "alwai": [0, 5, 21, 41, 42, 137, 152, 154, 157, 158, 159, 165, 166, 168, 171, 173, 177, 187, 188], "folder": [0, 39, 42, 183], "where": [0, 2, 21, 30, 32, 39, 40, 42, 49, 124, 137, 155, 156, 157, 161, 170, 171, 178, 180, 183, 185, 186], "locat": [0, 101, 102, 126, 166, 168, 180, 187, 188], "A": [0, 26, 27, 40, 45, 46, 50, 53, 54, 75, 128, 151, 153, 157, 158, 160, 162, 166, 171, 175, 177, 184, 187, 188], "random": [0, 5, 6, 8, 9, 42, 46, 128, 163, 164, 170, 173, 174, 177, 181, 182, 185], "temp": [0, 6], "metric": [0, 1, 2, 5, 11, 12, 26, 27, 40, 56, 57, 58, 123, 130, 155, 166, 174, 177, 187, 188], "distanc": [0, 2, 5, 10, 11, 16, 27, 40, 51, 56, 68, 69, 78, 79, 80, 129, 136, 177], "dure": [0, 1, 3, 5, 7, 39, 50, 155, 163, 185], "search": [0, 3, 5, 7, 8, 16, 27, 46, 51, 95, 151, 155, 159, 160, 164, 166, 186, 187, 188], "cosin": [0, 2, 5, 12, 16, 27, 40, 51, 57, 58, 68, 69, 78, 79, 123, 129, 130, 131, 133, 134, 170, 177], "dot": [0, 5, 42, 166], "euclidean": [0, 5, 40, 129, 130, 131, 133, 134, 177], "ef_construct": [0, 1, 2, 5, 7, 11, 12, 16, 51, 56, 57, 58, 68, 69, 78, 79, 90, 91, 95], "size": [0, 1, 2, 5, 7, 21, 25, 30, 33, 36, 37, 41, 42, 57, 61, 103, 113, 116, 151, 153, 156, 157, 175, 180], "dynam": [0, 1, 2, 7, 166, 185, 187, 188], "list": [0, 1, 2, 3, 7, 8, 16, 20, 26, 27, 30, 32, 36, 37, 44, 45, 46, 48, 50, 51, 61, 68, 69, 95, 101, 102, 103, 119, 126, 128, 135, 137, 158, 162, 164, 166, 167, 168, 170, 171, 176, 177, 179, 182, 185, 186, 187, 188], "nearest": [0, 2, 3, 4, 7, 27, 40, 174, 175, 186], "neighbor": [0, 1, 2, 3, 7, 27, 113], "construct": [0, 1, 3, 7, 159, 160, 166, 171, 176], "none": [0, 1, 2, 3, 5, 6, 7, 12, 15, 16, 20, 21, 22, 24, 26, 27, 30, 32, 33, 34, 36, 37, 38, 40, 41, 42, 43, 46, 50, 51, 55, 57, 58, 61, 62, 66, 67, 68, 69, 77, 78, 79, 85, 86, 88, 89, 90, 91, 94, 95, 96, 100, 101, 102, 103, 109, 113, 116, 117, 119, 123, 124, 126, 128, 135, 136, 137, 140, 141, 142, 143, 159, 162, 168, 172, 174, 180, 182], "valu": [0, 1, 2, 3, 4, 5, 7, 8, 20, 21, 27, 30, 37, 40, 41, 42, 45, 49, 53, 62, 67, 77, 89, 94, 96, 99, 117, 124, 128, 135, 136, 137, 141, 142, 143, 144, 145, 149, 154, 155, 157, 158, 160, 161, 162, 163, 166, 168, 170, 171, 172, 174, 175, 177, 178, 179, 180, 181, 182, 185], "packag": [0, 1, 148, 150, 158, 164, 185, 186], "ef_search": [0, 11, 12, 56, 57, 58], "max_connect": [0, 1, 7, 11, 12, 56, 57, 58, 90, 91, 95], "bi": [0, 1], "direct": [0, 1, 61], "link": [0, 1], "creat": [0, 1, 4, 8, 20, 24, 25, 30, 32, 53, 61, 103, 126, 128, 153, 155, 157, 158, 159, 174, 185], "everi": [0, 1, 4, 41, 45, 149, 163, 174, 178, 186], "new": [0, 1, 41, 43, 61, 100, 113, 126, 128, 149, 160, 171, 172, 183, 185, 186], "element": [0, 1, 7, 20, 21, 32, 33, 34, 37, 40, 41, 46, 53, 62, 67, 72, 77, 83, 135, 137, 151, 166, 168, 170, 171, 176, 177, 178, 180, 185, 187, 188], "check": [0, 3, 4, 9, 30, 53, 137, 162, 168, 171, 174, 180, 182, 183, 186], "sourc": [0, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 130, 131, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 150, 153, 179, 183, 186], "code": [0, 1, 4, 8, 32, 108, 139, 159, 160, 162, 172, 178, 179, 180, 185, 186], "we": [1, 3, 4, 7, 8, 9, 128, 151, 155, 156, 157, 158, 159, 160, 164, 168, 170, 171, 172, 174, 175, 176, 177, 178, 181, 182, 183, 184, 186], "randomli": [1, 46, 128], "gener": [1, 3, 5, 7, 10, 21, 30, 32, 36, 41, 42, 46, 65, 101, 113, 116, 124, 128, 139, 149, 154, 157, 162, 172, 185, 187, 188], "uniform": 1, "distribut": [1, 53, 128], "all": [1, 3, 4, 7, 8, 9, 14, 17, 19, 20, 27, 32, 34, 40, 42, 45, 49, 50, 53, 96, 104, 109, 113, 119, 124, 135, 137, 149, 151, 155, 158, 160, 161, 162, 164, 165, 170, 171, 172, 174, 175, 176, 178, 181, 182, 183, 184, 185, 186], "support": [1, 3, 4, 8, 27, 40, 65, 106, 109, 113, 114, 124, 125, 137, 158, 165, 168, 171, 173, 178, 179, 180, 182, 185], "includ": [1, 3, 53, 103, 113, 124, 149, 157, 168, 182, 183, 185, 186], "classic": [1, 186], "databas": [1, 3, 4, 6, 7, 128, 149, 186], "vector": [1, 2, 3, 16, 51, 95, 164, 173, 186], "under": [1, 3, 4, 53, 135, 149, 155, 157, 158, 160, 170, 180, 185, 186], "api": [1, 3, 7, 8, 151, 157, 159, 160, 168, 173, 176, 180, 182, 183, 185, 186], "usag": [1, 3, 32, 100, 128, 149, 163, 180, 182], "version": [1, 2, 3, 5, 7, 65, 128, 149, 180, 186], "an": [1, 2, 3, 4, 8, 21, 27, 30, 32, 41, 42, 50, 53, 91, 100, 103, 106, 111, 113, 116, 124, 149, 151, 155, 157, 158, 159, 160, 161, 162, 165, 166, 168, 169, 170, 171, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188], "0": [1, 2, 4, 5, 7, 8, 20, 25, 36, 40, 42, 43, 49, 86, 103, 109, 113, 124, 130, 135, 136, 137, 158, 159, 162, 164, 169, 170, 171, 172, 173, 174, 175, 177, 178, 180, 181, 183, 185, 186], "12": [1, 149, 171, 172, 179, 182], "8": [1, 2, 33, 34, 37, 103, 107, 109, 124, 137, 162, 174, 175, 187, 188], "sqlite": [1, 3, 4, 10, 11, 15, 56], "2": [1, 2, 4, 9, 44, 45, 49, 50, 53, 106, 120, 130, 131, 133, 134, 137, 157, 158, 162, 163, 164, 168, 170, 171, 172, 174, 175, 177, 178, 179, 180, 182, 185, 186, 187, 188], "6": [1, 135, 137, 155, 164, 171, 174, 177, 185], "weaviat": [1, 10, 11, 15, 56, 186], "1": [1, 2, 4, 7, 9, 40, 42, 49, 50, 61, 103, 109, 113, 116, 123, 124, 128, 135, 136, 137, 149, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188], "11": [1, 7, 175, 178], "qdrant": [1, 10, 11, 56, 186], "7": [1, 5, 137, 159, 172, 177, 186, 187, 188], "annlit": [1, 4, 10, 11, 15, 56, 186], "anlit": 1, "3": [1, 2, 5, 7, 8, 9, 113, 137, 157, 158, 160, 162, 163, 164, 168, 170, 171, 172, 174, 177, 178, 179, 181, 182, 183, 185, 186], "elasticsearch": [1, 15, 16], "focu": 1, "task": [1, 38, 180, 183, 185], "add": [1, 14, 17, 151, 157, 167, 168, 171, 172, 180, 183], "extend": [1, 2, 3, 7, 57, 62, 63, 66, 67, 68, 72, 73, 77, 78, 83, 90, 94, 155, 172, 174, 178], "read": [1, 2, 5, 7, 8, 34, 103, 107, 109, 149, 154, 158, 160, 162, 163, 165, 168, 172, 185, 186], "exist": [1, 3, 21, 30, 39, 41, 42, 45, 53, 157, 159, 160, 167, 175, 179], "id": [1, 2, 3, 4, 8, 26, 27, 30, 40, 42, 61, 66, 91, 101, 102, 113, 116, 126, 128, 151, 154, 155, 156, 157, 162, 163, 164, 166, 167, 168, 169, 170, 172, 174, 175, 177, 179, 180, 181, 182, 184, 186, 187, 188], "some_id": 1, "updat": [1, 2, 3, 4, 63, 65, 66, 136, 171, 183, 185], "delet": [1, 3, 4, 6, 55, 85, 86, 170, 171], "del": [1, 170, 171], "condit": [1, 53, 54], "tag": [1, 27, 30, 34, 53, 101, 102, 111, 126, 154, 157, 158, 160, 163, 166, 168, 170, 175, 180, 187, 188], "boolean": [1, 2, 175, 187, 188], "filter": [1, 8, 27, 30, 50, 103, 128, 168, 171, 180], "describ": [1, 130, 149, 157, 168, 175, 177, 179, 180, 183], "queri": [1, 3, 4, 7, 8, 27, 54, 116, 183, 186], "approxim": [1, 3, 27, 174], "abov": [1, 3, 4, 8, 53, 65, 157, 158, 160, 165, 177, 179, 180, 185], "ar": [1, 3, 4, 5, 7, 8, 9, 17, 20, 26, 30, 32, 33, 40, 45, 50, 53, 65, 96, 103, 111, 113, 124, 135, 137, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 162, 163, 168, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188], "often": [1, 3, 4, 151, 154, 155, 164, 165, 166, 168, 178, 180, 182, 183, 185, 187, 188], "atom": 1, "oper": [1, 3, 4, 20, 65, 187, 188], "high": [1, 3, 9, 150, 159, 160, 185], "level": [1, 3, 9, 45, 128, 150, 157, 160, 166, 170, 171, 178, 180, 185, 187, 188], "henc": [1, 151, 153, 154, 168, 178, 179, 185], "understand": [1, 163, 182, 184, 185], "perform": [1, 3, 27, 128, 166, 178, 185, 187, 188], "give": [1, 3, 4, 33, 42, 100, 151, 163, 168, 170, 178, 182, 183], "user": [1, 2, 3, 4, 8, 149, 151, 160, 164, 172, 175, 176, 177, 180, 182, 183, 186], "good": [1, 21, 41, 154, 185], "estim": [1, 180], "differ": [1, 3, 4, 40, 42, 50, 113, 114, 155, 161, 163, 168, 170, 174, 175, 178, 180, 185], "interest": [1, 151, 171, 182], "singl": [1, 2, 3, 9, 41, 42, 50, 65, 116, 151, 158, 168, 177, 179, 182, 183], "which": [1, 2, 3, 6, 9, 17, 21, 30, 32, 33, 34, 37, 39, 41, 53, 65, 103, 107, 110, 111, 113, 116, 125, 128, 149, 151, 155, 156, 157, 158, 159, 160, 162, 163, 164, 166, 168, 171, 175, 178, 180, 181, 185, 187, 188], "mean": [1, 8, 9, 40, 109, 113, 135, 150, 156, 157, 158, 161, 162, 164, 165, 170, 174, 177, 179, 182, 183], "4": [1, 5, 7, 8, 9, 137, 157, 164, 171, 172, 174, 177, 178], "5": [1, 135, 137, 159, 164, 171, 172, 174, 175, 177, 178, 180, 181, 183, 185], "evalu": [1, 10, 11, 19, 52, 53, 54, 101, 102, 126, 129, 166, 167, 168, 176, 180, 185, 186, 187, 188], "time": [1, 2, 4, 5, 9, 42, 128, 155, 156, 160, 168, 177, 180, 185], "repeatedli": 1, "report": 1, "averag": [1, 26, 135, 174, 185], "conduct": [1, 151, 174, 178, 180, 185], "end": [1, 50, 67, 77, 89, 124, 166, 187, 188], "call": [1, 3, 42, 157, 158, 161, 164, 168, 179, 182], "just": [1, 3, 4, 8, 128, 151, 158, 170, 171, 175, 184], "underli": 1, "therefor": [1, 3, 65, 185], "particular": [1, 34, 53, 103, 180], "influenc": 1, "posit": [1, 3, 66, 67, 77, 89, 135, 166, 187, 188], "neg": [1, 187, 188], "our": [1, 156, 160, 164, 171, 173, 174, 178, 186], "interfac": [1, 2, 3, 149, 150, 168, 172, 175, 176, 185], "If": [1, 2, 3, 7, 8, 21, 26, 27, 30, 32, 40, 41, 42, 45, 46, 53, 103, 113, 116, 135, 149, 154, 155, 157, 158, 163, 164, 168, 169, 170, 171, 172, 173, 174, 177, 178, 180, 181, 182, 183, 184, 185, 186], "spot": 1, "bottleneck": 1, "thrill": 1, "know": [1, 103, 160, 171, 176, 178, 180, 185, 186], "about": [1, 2, 4, 5, 7, 8, 149, 160, 161, 163, 168, 170, 171, 177, 183, 185, 186], "improv": [1, 4, 178, 183, 184, 185], "similar": [1, 2, 40, 168, 170, 177, 178, 180, 185], "algorithm": [1, 21, 32, 128, 151, 153, 160, 180], "implement": [1, 8, 9, 24, 26, 60, 62, 65, 67, 71, 72, 76, 77, 87, 89, 93, 94, 149, 171, 176, 178, 180, 182], "In": [1, 3, 8, 21, 32, 41, 124, 153, 154, 156, 157, 158, 159, 160, 162, 164, 166, 168, 170, 172, 176, 177, 180, 182, 183, 184, 185, 186, 187, 188], "onli": [1, 3, 5, 8, 9, 21, 27, 32, 33, 39, 40, 41, 42, 53, 103, 113, 125, 149, 156, 157, 158, 160, 161, 162, 163, 168, 171, 172, 173, 174, 177, 178, 180, 182, 185], "paramet": [1, 2, 5, 7, 14, 16, 17, 21, 24, 25, 26, 27, 30, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 67, 77, 89, 94, 95, 96, 100, 103, 106, 107, 109, 110, 111, 113, 114, 116, 117, 119, 120, 122, 124, 125, 128, 130, 131, 133, 134, 135, 136, 137, 158, 168, 180, 187, 188], "ef": [1, 7, 11, 56, 90, 91, 95], "hnsw": [1, 2, 5, 7], "might": [1, 2, 21, 30, 41, 45], "fix": [1, 111, 153, 180], "than": [1, 3, 4, 30, 124, 128, 155, 162, 164, 171, 175, 178, 180, 186, 187, 188], "big": [1, 8, 9, 40, 100, 155, 171, 176, 177, 182, 185, 186], "impact": 1, "even": [1, 3, 4, 128, 157, 182, 184], "configur": [1, 2, 5, 7, 184], "cannot": [1, 126], "easili": [1, 2, 3, 4, 9, 154, 155, 157, 159, 160, 162, 172, 174, 180, 182, 185], "compar": [1, 4, 8, 14, 26, 32, 37, 42, 100, 153, 158, 178], "research": 1, "showcas": [1, 159], "what": [1, 2, 8, 151, 156, 162, 178, 182, 183], "expect": [1, 3, 4, 21, 26, 41, 65, 149, 168, 170], "get": [1, 2, 3, 4, 8, 14, 17, 20, 32, 43, 49, 96, 105, 108, 124, 128, 137, 151, 155, 162, 163, 166, 167, 168, 170, 171, 173, 174, 175, 180, 182, 183, 184, 186], "without": [1, 3, 24, 40, 46, 53, 137, 158, 159, 160, 170, 171, 180, 183], "tune": 1, "hyper": 1, "practic": [1, 8, 21, 41, 160, 162, 171, 178, 180], "strongli": [1, 157, 182], "recommend": [1, 8, 113, 149, 157, 160, 163, 168, 180, 182, 185, 186], "them": [1, 3, 9, 21, 26, 40, 45, 149, 151, 152, 154, 155, 156, 157, 158, 159, 160, 164, 166, 168, 170, 171, 177, 182, 183, 184, 185], "achiev": [1, 182], "qualiti": [1, 183], "tabl": [1, 6, 61, 152, 158, 171, 180, 184], "summar": [1, 157, 171, 180, 183], "smaller": [1, 21, 30, 32, 33, 40, 41, 168, 171, 182, 186], "better": [1, 3, 4, 40, 151, 169, 171, 178, 180], "except": [1, 21, 30, 41, 53, 157, 177], "recal": [1, 135, 172], "best": [1, 4, 21, 41, 108, 136, 154, 168, 176, 180], "each": [1, 3, 6, 7, 21, 26, 27, 30, 40, 41, 42, 43, 50, 103, 111, 113, 114, 130, 131, 133, 134, 137, 151, 154, 156, 157, 158, 160, 161, 162, 164, 166, 168, 171, 172, 174, 177, 178, 180, 183, 187, 188], "highlight": [1, 38, 185], "bold": 1, "1m": 1, "": [1, 2, 3, 4, 7, 8, 9, 14, 17, 24, 27, 39, 45, 53, 62, 67, 72, 77, 83, 128, 150, 151, 155, 156, 157, 159, 162, 164, 169, 170, 173, 174, 175, 177, 178, 180, 182, 183, 184, 186], "m": [1, 2, 5, 11, 16, 50, 51, 56, 68, 69, 78, 79, 158, 170, 171, 174, 177], "01": [1, 159], "39": 1, "43": 1, "00": [1, 183], "366": 1, "35": [1, 177], "62": 1, "31": 1, "23": [1, 182], "59": 1, "72": 1, "57": 1, "30": [1, 125, 175], "42": 1, "19": 1, "286": 1, "50": [1, 171, 175], "14": [1, 175], "605": 1, "51": 1, "612": 1, "33": 1, "27": 1, "94": 1, "13": 1, "38": 1, "242": 1, "02": [1, 159], "307": 1, "40": 1, "85": [1, 175], "74": 1, "656": 1, "16": [1, 42, 170, 178], "446": 1, "77": 1, "24": [1, 183], "114": 1, "9": [1, 137], "36": 1, "20": [1, 27, 40, 123, 174], "09": 1, "227": 1, "608": 1, "44": 1, "22": [1, 175], "26": 1, "208": 1, "715": 1, "15": [1, 8, 171, 175], "58": 1, "650": 1, "83": 1, "consid": [1, 5, 27, 40, 49, 103, 111, 155, 160, 171, 172, 175, 176, 180, 183], "convert": [1, 8, 32, 37, 44, 48, 101, 104, 106, 107, 108, 111, 113, 114, 117, 119, 120, 122, 124, 125, 151, 152, 153, 154, 157, 158, 159, 160, 163, 180, 185], "per": [1, 5, 7, 50, 125, 135, 136, 158, 177], "second": [1, 45, 53, 125, 128, 136, 137, 160, 170, 178, 182, 183, 186], "qp": 1, "dp": 1, "higher": [1, 7], "610": 1, "305": 1, "345": 1, "71": 1, "428": 1, "570": 1, "190": [1, 174], "70": 1, "3125": 1, "816": 1, "381": 1, "032": 1, "04": 1, "380": 1, "000": [1, 185], "152": 1, "216": 1, "033": 1, "34": 1, "604": 1, "664": [1, 168, 185], "241": 1, "002": 1, "90": [1, 174], "001": 1, "55": 1, "76": 1, "409": 1, "618": [1, 151], "122": 1, "101": 1, "211": 1, "192": [1, 43, 179, 183], "224": [1, 113, 151], "125": 1, "824": 1, "769": 1, "759": 1, "106": 1, "49": 1, "448": 1, "615": 1, "48": [1, 174], "111": 1, "620": 1, "435": 1, "200": [1, 182], "398": 1, "481": 1, "64": [1, 2, 5, 9, 16, 51, 68, 69, 78, 79, 113, 151, 165, 185], "now": [1, 3, 4, 7, 8, 9, 149, 151, 159, 161, 170, 171, 172, 173, 174, 178, 180, 182, 183, 185], "elabor": 1, "first": [1, 7, 20, 45, 53, 107, 128, 135, 136, 137, 151, 154, 155, 156, 157, 158, 160, 166, 168, 170, 171, 173, 174, 175, 178, 183, 185, 186], "128": [1, 2, 5, 173], "choos": [1, 4, 177, 180], "two": [1, 4, 53, 113, 124, 137, 156, 157, 158, 160, 167, 170, 174, 175, 178, 184, 185], "reason": [1, 4, 168, 180, 182, 185], "most": [1, 3, 40, 45, 149, 153, 162, 163, 168, 171, 180, 186], "common": [1, 2, 4, 8, 9, 19, 31, 154, 157, 158, 162, 163, 166, 168, 170, 171, 172, 174, 175, 179, 180, 181, 185, 186], "sme": 1, "wise": [1, 178], "break": [1, 149, 170], "point": [1, 4, 5, 113, 114, 152, 158, 162, 165, 174, 181, 183], "product": [1, 8, 180, 183, 184, 185], "system": [1, 21, 34, 40, 41, 103, 183, 185, 187, 188], "structur": [1, 3, 26, 33, 42, 116, 153, 157, 158, 160, 161, 163, 166, 169, 174, 176, 184, 185, 186, 187, 188], "94ee6627ee7f582e5e28124e78c3d2f9": 1, "49841760378680844": 1, "703959752118305": 1, "6920759535687985": 1, "10248648858410625": 1, "k": [1, 46, 135, 136, 174, 177], "indic": [1, 2, 42, 113, 116, 136, 157, 163, 187, 188], "do": [1, 2, 3, 4, 9, 21, 30, 39, 41, 45, 53, 65, 113, 151, 154, 155, 156, 157, 160, 161, 164, 165, 166, 168, 170, 171, 173, 174, 177, 178, 180, 181, 182, 183, 186], "exhaust": [1, 27], "instead": [1, 4, 103, 128, 161, 162, 164, 168, 170, 178, 185, 187, 188], "thei": [1, 3, 4, 7, 8, 45, 65, 100, 149, 156, 160, 162, 163, 167, 168, 170, 171, 174, 180, 182, 183], "maximum": [1, 7, 27, 40, 103, 124, 135, 168, 180], "slowest": 1, "were": 1, "ghz": 1, "amd": 1, "ryzen": 1, "threadripp": 1, "3960x": 1, "core": [1, 9, 178, 182, 185], "processor": 1, "python": [1, 3, 32, 37, 103, 117, 150, 158, 160, 162, 164, 166, 168, 170, 171, 172, 175, 176, 178, 180, 185, 186, 187, 188], "besid": [1, 154, 175, 185], "client": [1, 2, 3, 5, 7, 8, 56, 78, 80, 81, 83, 159, 182, 186], "server": [1, 2, 5, 7, 8, 42, 90, 91, 95, 182, 186], "pattern": [1, 4, 9, 36, 103, 162, 172, 180, 182], "up": [1, 2, 4, 5, 7, 34, 178, 183, 186], "offici": [1, 2, 8], "docker": [1, 2, 5, 7, 43, 179, 183, 188], "imag": [1, 2, 5, 7, 9, 42, 100, 101, 104, 116, 128, 152, 156, 157, 158, 160, 161, 162, 165, 166, 168, 169, 170, 171, 172, 178, 183, 185, 186, 187, 188], "node": [1, 2, 5, 53], "gb": 1, "ram": 1, "alloc": 1, "That": [1, 151, 157, 158, 160, 162, 163, 165, 171, 176], "replica": [1, 183], "shard": 1, "did": 1, "opt": 1, "cluster": 1, "becaus": [1, 8, 21, 41, 149, 151, 159, 174, 178, 182, 183], "mainli": [1, 53, 65, 149, 182], "aim": [1, 3, 185], "assess": 1, "capabl": 1, "instanc": [1, 3, 7, 100], "overhead": [1, 180], "come": [1, 3, 8, 42, 155, 168, 171, 185, 187, 188], "side": [1, 2, 4, 26, 124, 166, 174, 182, 185], "appli": [1, 19, 27, 33, 34, 41, 45, 50, 53, 149, 155, 158, 160, 170, 178, 182, 183], "equal": [1, 20, 42, 175], "unless": [1, 158, 180, 183], "specif": [1, 2, 3, 4, 34, 103, 149, 157, 160, 161, 168], "provid": [1, 2, 4, 7, 8, 9, 20, 23, 26, 27, 28, 29, 36, 40, 41, 45, 46, 47, 53, 58, 65, 69, 71, 74, 75, 86, 91, 93, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 120, 122, 123, 124, 125, 151, 155, 158, 160, 165, 166, 168, 170, 171, 174, 178, 180, 185], "more": [1, 2, 3, 4, 5, 7, 8, 14, 32, 39, 45, 65, 103, 149, 150, 154, 155, 158, 162, 163, 164, 168, 170, 171, 173, 176, 178, 180, 181, 182, 183, 185, 186, 187, 188], "effici": [1, 4, 65, 107, 109, 124, 171, 176, 185, 186, 187, 188], "As": [1, 3, 4, 151, 155, 162, 168, 170, 172, 178, 183, 185], "own": [1, 113, 178, 185], "By": [1, 2, 3, 27, 33, 34, 37, 103, 150, 160, 168, 173, 174, 177, 178], "vendor": [1, 3], "For": [1, 2, 3, 4, 32, 151, 154, 155, 156, 157, 158, 160, 163, 164, 165, 167, 168, 171, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 186], "ann": [1, 3, 27], "100": [1, 5, 116, 171, 174, 175, 183], "control": [1, 7, 8, 149, 168, 172], "index": [1, 2, 3, 5, 7, 23, 27, 29, 47, 49, 63, 66, 67, 77, 89, 124, 128, 155, 166, 185, 186, 187, 188], "accuraci": 1, "bigger": 1, "lead": [1, 163], "longer": [1, 4, 39, 124, 155], "accur": [1, 5, 7, 157], "slower": [1, 7, 37], "max": [1, 40, 136, 180, 185], "connect": [1, 4, 6, 7, 11, 53, 55, 56, 85, 86, 90, 91, 95, 124, 179], "rang": [1, 2, 40, 113, 136, 172, 175, 179, 185], "work": [1, 3, 4, 21, 32, 41, 103, 128, 151, 152, 158, 160, 166, 168, 170, 173, 174, 176, 177, 178, 180, 182, 183, 184, 185, 186], "dataset": [1, 103, 113, 151], "intrins": 1, "dimension": [1, 2, 111, 113, 130, 164, 185], "while": [1, 7, 151, 163, 174, 185, 186], "low": [1, 149, 159], "final": [1, 3, 7, 8, 21, 45, 53, 150, 151, 160, 175, 176, 182, 183], "script": 1, "avail": [1, 65, 128, 149, 178, 183], "here": [1, 2, 5, 7, 8, 128, 149, 150, 152, 156, 157, 158, 160, 168, 170, 171, 172, 173, 175, 178, 179, 180, 182, 183, 185], "fair": 1, "across": [1, 168, 180], "favour": 1, "benefit": [1, 4, 160], "wa": [1, 155, 180, 185], "imposs": 1, "ha": [1, 2, 4, 8, 33, 42, 113, 116, 151, 154, 157, 158, 160, 164, 166, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182], "its": [1, 4, 108, 113, 116, 124, 149, 154, 163, 168, 172, 178, 180, 181, 182, 184, 185], "definit": [1, 151, 182], "vari": 1, "base": [1, 2, 3, 5, 7, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 136, 142, 143, 144, 145, 146, 148, 149, 151, 155, 156, 160, 162, 171, 174, 175, 177, 182, 186], "principl": [1, 162, 168], "cover": [1, 185], "some": [1, 3, 4, 7, 8, 9, 96, 149, 150, 151, 152, 155, 158, 160, 164, 167, 168, 170, 172, 174, 175, 177, 178, 179, 182, 183, 184, 185], "offer": [1, 158, 171], "try": [1, 8, 21, 41, 103, 154, 168], "crud": 1, "measur": [1, 135], "Not": [1, 175, 180], "speed": [1, 7, 33, 178, 185], "also": [1, 2, 3, 4, 7, 8, 42, 45, 149, 151, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 168, 170, 172, 175, 176, 177, 178, 179, 180, 182, 183, 185], "sinc": [1, 113, 128, 185], "make": [1, 2, 3, 4, 7, 14, 39, 40, 42, 65, 113, 156, 158, 162, 163, 168, 172, 174, 176, 178, 182, 183, 186], "sure": [1, 2, 3, 7, 14, 40, 42, 65, 158, 178, 186], "allow": [1, 3, 4, 8, 9, 47, 105, 108, 149, 155, 158, 160, 162, 165, 168, 171, 174, 176, 180, 183, 185, 186], "suit": [1, 153], "case": [1, 3, 7, 32, 65, 128, 157, 158, 162, 168, 177, 180, 183, 186], "built": [1, 8, 24, 158, 161, 163, 178, 186], "top": [1, 3, 116, 135, 136, 166, 170, 171, 174, 177, 187, 188], "furthermor": 1, "made": [1, 149, 153, 168, 185], "run": [1, 2, 4, 5, 7, 8, 42, 177, 178, 183, 184, 188], "contain": [1, 2, 3, 9, 25, 27, 30, 34, 40, 45, 50, 103, 113, 116, 128, 151, 154, 156, 158, 160, 162, 164, 168, 170, 171, 174, 176, 179, 181, 185, 187, 188], "local": [1, 39, 162, 166, 179, 180, 185, 186, 187, 188], "network": [1, 2, 9, 159, 168, 180, 183, 185, 186], "resourc": [1, 162, 178, 183], "those": [1, 2, 3, 4, 34, 65, 128, 155, 157, 160, 166, 168, 176], "much": [1, 33, 151, 155, 163, 164, 168, 171, 172, 182, 184], "possibl": [1, 163, 169], "grpc": [1, 43, 159, 179, 183], "http": [1, 2, 5, 7, 8, 16, 42, 43, 53, 68, 69, 90, 91, 95, 103, 135, 155, 157, 158, 162, 163, 166, 179, 183, 187, 188], "batch": [1, 2, 3, 5, 19, 21, 24, 30, 40, 41, 65, 178], "re": [1, 45, 149, 152, 166, 171], "okai": [1, 171, 178, 183], "long": [1, 152, 178, 182, 185, 187, 188], "jina": [1, 3, 39, 43, 103, 124, 128, 157, 158, 159, 160, 163, 175, 179, 180, 186, 187, 188], "open": [1, 3, 8, 42, 103, 106, 125, 150, 153, 159, 186], "constantli": 1, "accordingli": [1, 109, 113, 149], "believ": 1, "miss": [1, 100, 185, 186], "optim": [1, 4, 173, 184, 185, 186], "g": [1, 2, 3, 4, 8, 103, 160, 162, 167, 170, 171, 174, 179, 180, 185], "recent": 1, "upstream": [1, 180, 183], "avoid": [1, 9, 131, 133, 134, 136, 149, 180], "unnecessari": [1, 180], "step": [1, 9, 45, 65, 151, 168, 180, 181, 182, 183, 184], "feel": [1, 4, 158], "free": [1, 53, 150, 153], "rais": [1, 27, 53, 126, 163], "pr": [1, 135], "issu": [1, 128, 178], "your": [1, 3, 4, 8, 21, 34, 39, 41, 103, 113, 151, 154, 155, 158, 160, 162, 163, 168, 173, 174, 176, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188], "contribut": [1, 3], "yet": [1, 185], "variou": [1, 53], "milvu": 1, "current": [1, 14, 17, 45, 113, 137], "doe": [1, 4, 8, 40, 103, 113, 163, 168, 172, 173, 175, 182, 183], "integr": [1, 9, 149, 159, 168, 182, 185, 186], "repositori": [1, 159], "pinecon": 1, "soon": [1, 185], "ll": 1, "onc": [1, 45, 50, 164, 168, 171, 177], "faiss": 1, "annoi": [1, 182], "scann": 1, "librari": [1, 53, 103, 128, 152, 168, 185, 186], "actual": [1, 24, 53, 65, 162, 187, 188], "itself": [1, 4, 24, 32, 35, 43, 106, 107, 108, 109, 110, 113, 114, 116, 117, 124, 125, 149, 170, 172, 174, 177, 180, 182], "intern": [1, 34, 107], "hope": [1, 178], "help": [1, 23, 49, 103, 151, 160, 162, 163, 168, 182, 186], "select": [1, 8, 158, 159, 170, 171, 175], "depend": [1, 4, 27, 40, 45, 151, 156, 168, 173, 177, 178, 179, 180, 181, 182, 184, 186], "need": [1, 2, 3, 5, 6, 7, 8, 42, 67, 77, 89, 149, 151, 154, 155, 157, 158, 159, 160, 161, 162, 168, 171, 173, 175, 176, 178, 180, 182, 183, 184, 186], "mai": [1, 4, 8, 9, 21, 39, 41, 103, 107, 109, 124, 128, 151, 155, 158, 161, 166, 168, 170, 171, 172, 174, 180, 183, 184, 185, 187, 188], "prefer": [1, 168], "fewer": 1, "enjoi": [1, 3, 7, 160], "latenc": [1, 159, 180], "sai": [1, 9, 161, 162, 168, 174, 177, 178, 180, 182, 183, 186], "less": [1, 128, 149, 168, 175, 180], "fit": [1, 3, 4, 6, 9, 53, 168, 173, 176, 177, 185], "care": [1, 154], "figur": [1, 9, 21, 41, 159, 180, 185], "show": [1, 7, 21, 32, 34, 39, 41, 42, 43, 116, 151, 159, 163, 171, 172, 180, 183], "variat": 1, "w": [1, 43, 113, 175], "r": [1, 32, 36, 50, 103, 135, 157, 171, 175, 179, 183, 185], "t": [1, 2, 4, 8, 24, 25, 32, 33, 34, 35, 36, 37, 39, 41, 44, 45, 48, 65, 96, 100, 103, 106, 107, 108, 109, 110, 111, 113, 114, 117, 119, 120, 122, 123, 124, 125, 151, 155, 163, 164, 168, 171, 174, 182, 183, 185], "accord": [1, 27, 30, 108, 130, 171, 177], "red": [1, 100, 171], "dash": 1, "line": [1, 36, 103, 150, 151, 183], "repres": [1, 17, 34, 44, 46, 48, 50, 53, 103, 108, 115, 120, 122, 128, 136, 137, 149, 152, 154, 155, 156, 157, 158, 160, 162, 166, 170, 171, 185, 186, 187, 188], "threshold": 1, "300": 1, "omit": 1, "left": [1, 26, 38, 40, 45, 61, 116, 151, 160, 164, 166, 174, 177, 183, 187, 188], "plot": [1, 11, 19, 101, 104, 171, 183, 184], "right": [1, 26, 53, 124, 156, 160, 164, 174, 177, 178], "too": [1, 8, 151, 171, 172, 176, 177, 182], "slow": [1, 3, 4, 9, 42, 65], "fast": [1, 7, 8, 185, 186], "choic": 1, "append": [1, 3, 4, 11, 14, 17, 42, 62, 63, 66, 67, 72, 73, 77, 83, 85, 89, 156, 167, 169, 172, 174], "insert": [1, 3, 63, 66, 67, 73, 77, 85, 89], "matter": 1, "moreov": [1, 4, 180], "monolith": [1, 183, 185], "fastest": [1, 180], "trade": 1, "off": [1, 6, 55, 85, 86, 124], "between": [1, 4, 103, 109, 113, 130, 131, 133, 134, 154, 165, 168, 175, 180, 185, 187, 188], "term": [1, 155], "observ": [1, 130, 154, 156], "highest": 1, "compos": [2, 5, 7, 53], "yml": [2, 5, 7], "co": [2, 103], "environ": [2, 7, 128, 183, 184, 186], "xpack": 2, "enabl": [2, 23, 29, 58, 69, 74, 86, 91, 149, 182, 184, 186], "fals": [2, 4, 8, 15, 16, 21, 22, 24, 27, 30, 32, 36, 39, 40, 41, 42, 43, 53, 68, 69, 96, 100, 101, 103, 107, 109, 111, 113, 114, 116, 123, 124, 125, 128, 136, 142, 154, 157, 158, 163, 170, 171, 172, 174, 175, 179, 180, 181], "discoveri": 2, "type": [2, 4, 8, 9, 10, 14, 20, 21, 24, 25, 26, 27, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 53, 61, 62, 67, 74, 77, 78, 80, 81, 83, 88, 89, 94, 96, 97, 99, 103, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 128, 130, 131, 133, 134, 135, 136, 137, 140, 141, 145, 148, 154, 158, 159, 160, 162, 166, 168, 170, 171, 172, 174, 175, 176, 179, 180, 181, 182, 185, 186], "port": [2, 5, 7, 11, 42, 51, 56, 78, 79, 90, 91, 95, 101, 104, 128, 179, 183], "9200": [2, 16, 68, 69], "Then": [2, 5, 7, 173, 176, 180, 182], "assum": [2, 5, 7, 20, 32, 109, 113, 168, 177, 178], "address": [2, 5, 7, 128, 163, 179, 183], "localhost": [2, 5, 7, 16, 42, 51, 68, 69, 78, 79, 90, 91, 95, 179], "must": [2, 3, 65, 113, 168, 171, 178, 187, 188], "creation": [2, 180], "layer": [2, 7, 173], "disabl": [2, 38], "plain": [2, 163, 168, 177, 180], "pass": [2, 4, 6, 21, 26, 34, 35, 41, 53, 103, 117, 149, 161, 168, 180, 185], "host": [2, 5, 7, 11, 16, 42, 43, 51, 56, 68, 69, 78, 79, 90, 91, 95, 179, 183], "api_id": 2, "ca_cert": 2, "insid": [2, 3, 4, 7, 26, 113, 163, 168, 171, 172, 177, 178, 179, 182], "es_config": [2, 11, 16, 56, 68, 69], "constructor": [2, 3, 4, 14, 161, 163, 167, 168], "exampl": [2, 4, 6, 32, 50, 65, 100, 113, 128, 135, 137, 151, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 170, 171, 172, 173, 174, 175, 178, 179, 180, 182, 183, 184, 185], "prq7je_hj4i4auh": 2, "hq": 2, "hanxiao": [2, 151, 164], "http_ca": 2, "crt": 2, "certif": 2, "password": 2, "etc": [2, 3, 137, 149, 160, 176, 186], "index_nam": [2, 11, 16, 56, 68, 69], "build": [2, 5, 7, 8, 25, 117, 120, 122, 153, 157, 158, 164, 168, 170, 172, 180, 182, 185, 186], "previous": [2, 149], "old_stuff": 2, "_": [2, 172], "1000": [2, 151, 153, 171, 181], "da2": [2, 172, 174, 177], "length": [2, 3, 4, 5, 8, 26, 30, 124, 154, 155, 156, 157, 161, 170, 171, 172, 173, 174, 175, 179, 180, 181, 187, 188], "2000": 2, "homogen": [2, 4, 8, 154, 157, 170, 171, 172, 174, 175, 179, 180, 181], "true": [2, 4, 7, 8, 26, 32, 34, 36, 38, 40, 42, 53, 61, 100, 103, 113, 115, 116, 126, 128, 137, 157, 158, 163, 164, 168, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 183, 184], "attribut": [2, 4, 8, 9, 20, 27, 28, 30, 42, 45, 49, 50, 101, 104, 111, 115, 124, 154, 157, 158, 160, 161, 164, 166, 167, 168, 171, 172, 174, 175, 176, 179, 180, 181, 185, 187, 188], "uniqu": [2, 4, 8, 26, 108, 154, 157, 163, 166, 170, 171, 172, 174, 175, 179, 180, 181, 185, 187, 188], "empti": [2, 3, 4, 5, 8, 11, 19, 30, 42, 96, 116, 154, 157, 158, 162, 164, 168, 170, 171, 173, 174, 175, 177, 178, 179, 180, 181, 182, 184, 185], "ndarrai": [2, 3, 8, 9, 10, 24, 27, 32, 36, 103, 109, 111, 113, 119, 123, 125, 129, 130, 131, 133, 134, 136, 138, 140, 149, 152, 153, 157, 158, 160, 162, 164, 165, 166, 168, 173, 174, 175, 176, 177, 184, 185, 187, 188], "str": [2, 3, 4, 8, 12, 15, 16, 20, 21, 24, 26, 27, 30, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 49, 50, 51, 55, 57, 58, 61, 68, 69, 78, 79, 80, 81, 83, 85, 86, 90, 91, 95, 96, 101, 102, 103, 106, 107, 109, 110, 111, 113, 116, 117, 118, 119, 120, 123, 124, 125, 126, 128, 130, 133, 134, 137, 143, 145, 154, 157, 158, 161, 163, 170, 171, 172, 174, 175, 179, 180, 181, 182, 187, 188], "14890289": 2, "3168339": 2, "03050802": 2, "06785086": 2, "94719299": 2, "32490566": 2, "leverag": [2, 3, 4, 8, 65, 155, 158, 159, 160, 161, 163, 168, 177, 178, 179, 182], "flag": 2, "index_text": [2, 11, 16, 56, 68, 69], "sever": [2, 4], "pizza": 2, "person": [2, 53], "eat": 2, "restaur": 2, "pizza_doc": 2, "print": [2, 4, 5, 7, 9, 42, 116, 150, 151, 153, 155, 156, 157, 158, 159, 161, 162, 163, 168, 170, 171, 172, 173, 174, 175, 177, 178, 180, 181, 182, 184, 186], "part": [2, 8, 53, 162, 168, 171], "mostli": 2, "applic": [2, 151, 183, 185], "split": [2, 30, 53, 155], "group": [2, 11, 19, 34, 103, 166, 171], "item": [2, 3, 53, 109, 135, 151, 171, 182], "32": [2, 9, 30, 41, 159, 173, 178], "tag_indic": [2, 11, 16, 56, 68, 69], "food_typ": 2, "price": 2, "italian": 2, "spanish": 2, "food": 2, "cheap": 2, "french": 2, "expens": 2, "chines": 2, "noddl": 2, "quit": [2, 156, 178, 182, 185], "results_cheap": 2, "n": [2, 5, 130, 155, 185, 187, 188], "tags__pric": 2, "results_italian": 2, "tags__food_typ": 2, "don": [2, 8, 65, 103, 155, 163, 164, 171, 183], "method": [2, 3, 4, 14, 16, 26, 32, 45, 50, 51, 62, 65, 67, 72, 77, 89, 94, 95, 103, 117, 123, 128, 135, 150, 158, 160, 163, 167, 168, 174, 180, 183], "result": [2, 3, 7, 8, 26, 27, 40, 41, 45, 111, 157, 168, 170, 174, 177, 178, 180, 181, 183, 185], "hostnam": [2, 5, 7], "dict": [2, 3, 4, 12, 15, 16, 27, 30, 34, 36, 39, 43, 49, 51, 54, 55, 57, 58, 68, 69, 78, 79, 80, 81, 85, 86, 90, 91, 95, 100, 101, 102, 103, 117, 124, 126, 128, 154, 158, 163, 166, 171, 175, 180, 182, 185], "cloud_id": 2, "api_kei": 2, "class": [2, 3, 4, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 135, 142, 143, 144, 145, 146, 157, 159, 160, 161, 168, 170, 182, 183, 187, 188], "object": [2, 3, 4, 7, 12, 16, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 66, 68, 69, 75, 78, 79, 80, 85, 86, 90, 91, 92, 95, 96, 102, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 128, 137, 143, 145, 146, 149, 158, 159, 160, 161, 162, 163, 165, 166, 168, 170, 175, 176, 177, 180, 184, 185], "whether": [2, 27, 53, 103, 111, 152, 161, 166, 173], "batch_siz": [2, 9, 11, 16, 21, 24, 30, 40, 41, 43, 56, 68, 69, 123, 171, 173, 177, 178], "handl": [2, 3, 65, 107, 150, 153, 160, 165, 168, 182, 186], "refresh": 2, "plural": 2, "compli": 2, "seen": [3, 160], "previou": [3, 40, 135, 151, 166, 180, 187, 188], "chapter": [3, 149, 157, 158, 160, 163, 166, 168, 170, 171, 172, 174, 175, 182, 184, 185], "sql": 3, "nosql": 3, "motiv": [3, 152, 185], "board": 3, "advanc": [3, 8, 23, 29, 47, 105, 150, 167, 176, 185, 186], "languag": [3, 27, 155, 159, 162, 175, 180], "power": [3, 24, 60, 76, 87, 170, 176], "well": [3, 149, 160, 163, 166, 182, 184], "design": [3, 107, 109, 124, 158, 160, 164, 168, 174, 180, 186], "maintain": [3, 162, 168], "plug": 3, "ai": [3, 157, 158, 159, 163, 186], "ecosystem": [3, 160, 168, 186], "hub": [3, 103, 157, 159, 160, 179], "clip": [3, 160, 166, 187, 188], "servic": [3, 8, 39, 160, 182, 185], "finetun": [3, 160, 185], "synergi": 3, "after": [3, 8, 24, 53, 106, 107, 108, 109, 110, 113, 114, 124, 125, 135, 151, 157, 158, 173, 174, 180, 182, 183], "extens": [3, 32, 128, 180, 185], "conveni": 3, "promis": [3, 39], "experi": [3, 176, 183, 184, 185, 186], "regular": [3, 4, 175, 183, 187, 188], "extra": [3, 4, 34, 35, 40, 117, 149, 168, 183, 184, 186], "learn": [3, 8, 151, 153, 157, 158, 159, 160, 163, 164, 166, 171, 176, 182, 185, 186], "walk": 3, "through": [3, 157, 160, 182], "how": [3, 7, 8, 40, 113, 151, 157, 158, 159, 160, 161, 166, 168, 171, 172, 176, 178, 180, 182, 183, 185, 186], "mydocstor": 3, "look": [3, 4, 113, 151, 156, 158, 164, 173, 174, 178, 180, 182, 185], "config": [3, 15, 56, 78, 83, 90, 91, 95, 101, 126], "let": [3, 4, 7, 8, 9, 130, 150, 151, 155, 156, 157, 158, 159, 160, 162, 164, 166, 170, 171, 173, 174, 175, 176, 177, 178, 182], "start": [3, 42, 50, 109, 113, 157, 166, 171, 183, 186, 187, 188], "go": [3, 4, 157, 168, 171, 180, 182, 187, 188], "arrai": [3, 10, 103, 109, 113, 121, 124, 130, 131, 133, 134, 136, 137, 148, 156, 162, 163, 164, 168, 169, 170, 175, 177, 180, 182, 185, 187, 188], "sub": [3, 14, 17, 42, 50, 103, 155, 156, 157, 158, 160, 161, 162, 166, 167, 187, 188], "four": [3, 185, 187, 188], "file": [3, 6, 32, 33, 34, 36, 37, 53, 103, 106, 107, 110, 113, 114, 125, 128, 149, 152, 155, 162, 165, 166, 168, 178, 180, 187, 188], "readm": [3, 155], "md": 3, "These": [3, 26, 30, 35, 65, 113, 163, 176, 182, 187, 188], "consist": [3, 45, 153, 160, 166, 185, 187, 188], "necessari": [3, 58, 69, 74, 86, 91, 158], "addition": 3, "anoth": [3, 21, 40, 41, 96, 157, 158, 162, 164, 165, 172, 177], "should": [3, 4, 8, 21, 27, 38, 41, 65, 103, 111, 116, 124, 149, 151, 159, 160, 164, 168, 174, 177, 178, 185, 186], "basegetsetdelmixin": [3, 56, 60, 63, 65, 71, 76, 81, 87, 93], "getsetdelmixin": [3, 56, 57, 60, 68, 71, 73, 76, 78, 81, 85, 87, 90, 93], "def": [3, 7, 9, 161, 178, 182, 183], "_get_doc_by_id": [3, 65], "self": [3, 26, 30, 40, 96, 178, 183], "_id": [3, 66], "_del_doc_by_id": [3, 65], "_set_doc_by_id": [3, 65], "_load_offset2id": 3, "_save_offset2id": 3, "five": [3, 155], "correspond": [3, 128, 154, 157, 158, 161, 162, 166, 177, 187, 188], "logic": [3, 45, 157, 170, 175, 182, 183], "string": [3, 27, 32, 34, 37, 40, 43, 50, 103, 106, 117, 125, 128, 130, 162, 163, 166, 168, 170, 171, 173, 175, 180, 182, 187, 188], "essenti": 3, "ensur": [3, 168], "offset2id": [3, 56, 61, 63, 65, 66], "map": [3, 19, 21, 34, 41, 49, 100, 103, 124, 154, 160, 161, 163, 166, 178, 187, 188], "behaviour": 3, "inherit": [3, 14, 17, 123, 165], "order": [3, 7, 30, 45, 100, 128, 135, 171], "keep": [3, 65, 125, 160, 161, 163, 177, 183], "mind": [3, 65, 160, 177], "upper": 3, "upsert": 3, "remov": [3, 128, 168, 170, 185], "old": [3, 128, 149, 185, 186], "recommened": 3, "_get_docs_by_id": [3, 65], "_del_docs_by_id": [3, 65], "_clear_storag": [3, 65], "_set_doc_value_pair": 3, "_set_doc_value_pairs_nest": 3, "_set_docs_by_id": [3, 65], "signatur": 3, "defin": [3, 34, 50, 103, 151, 155, 160, 161, 168, 172, 174, 175, 177, 182, 187, 188], "fine": [3, 149], "grain": [3, 149], "frequent": [3, 107, 109, 124, 163, 166, 168, 180, 185], "fulli": [3, 9, 26, 30, 113, 162, 171], "option": [3, 7, 12, 15, 16, 20, 21, 24, 26, 27, 30, 32, 34, 36, 40, 41, 42, 43, 46, 50, 51, 55, 57, 58, 68, 69, 78, 79, 85, 86, 90, 91, 95, 100, 101, 102, 103, 109, 113, 116, 117, 118, 119, 123, 124, 126, 128, 135, 136, 137, 143, 145, 171, 182, 184], "refer": [3, 14, 17, 32, 158, 168, 171, 172, 179, 180], "out": [3, 8, 21, 30, 41, 53, 157, 160, 164, 168, 180, 186], "iter": [3, 36, 41, 50, 62, 67, 72, 77, 81, 83, 94, 103, 172, 178, 185], "union": [3, 15, 20, 21, 26, 27, 32, 33, 34, 36, 37, 40, 41, 55, 85, 86, 102, 103, 106, 107, 110, 113, 117, 123, 124, 125, 126, 130, 136], "type_check": 3, "basesequencelikemixin": [3, 56, 62, 63, 67, 72, 77, 83, 89, 94], "sequencelikemixin": [3, 56, 57, 62, 68, 72, 73, 77, 78, 83, 85, 89, 90, 94], "__eq__": 3, "__contains__": 3, "x": [3, 9, 20, 100, 113, 130, 136, 137, 149, 158, 161, 166, 168, 180, 183, 185, 186, 187, 188], "__repr__": 3, "__add__": 3, "int": [3, 12, 14, 16, 17, 21, 24, 25, 27, 30, 36, 40, 41, 42, 43, 46, 49, 51, 57, 58, 61, 67, 68, 69, 77, 78, 79, 81, 89, 90, 91, 95, 96, 101, 102, 103, 106, 108, 109, 111, 113, 114, 116, 123, 124, 125, 126, 128, 135, 136, 137, 157, 158, 166, 171, 174, 175, 182, 187, 188], "custom": [3, 6, 40, 174], "overrid": [3, 27, 39, 65, 100, 174], "last": [3, 4, 21, 30, 41, 42, 113, 116, 136, 151, 154, 156, 157, 160, 170, 171, 174, 178], "__len__": 3, "reli": [3, 42, 167, 170, 178, 185], "__iter__": 3, "standard": [3, 113, 158, 160], "mutablesequ": [3, 13, 67], "see": [3, 4, 8, 128, 151, 156, 158, 160, 162, 163, 166, 169, 170, 172, 174, 175, 176, 178, 182, 184, 185, 186], "dataclass": [3, 4, 10, 115, 148, 159, 161, 185], "basebackendmixin": [3, 56, 58, 63, 64, 69, 74, 79, 86, 91], "documentarraysourcetyp": [3, 15], "mydocstoreconfig": 3, "config1": 3, "config2": 3, "config3": 3, "backendmixin": [3, 56, 57, 58, 68, 69, 73, 74, 78, 79, 85, 86, 90, 91], "_init_storag": 3, "_doc": [3, 15], "kwarg": [3, 12, 13, 16, 18, 25, 26, 27, 32, 33, 34, 35, 36, 37, 39, 40, 51, 53, 55, 95, 96, 101, 103, 116, 117, 123, 135, 142, 168, 174, 183], "super": [3, 162, 163, 186], "veri": [3, 4, 9, 33, 149, 151, 158, 164, 171, 172, 178, 182, 183, 185], "copi": [3, 15, 53, 96, 101, 142, 157, 174, 177], "behavior": [3, 4, 50, 149, 161, 163, 168, 172, 174], "expos": [3, 8, 183], "argument": [3, 26, 40, 103, 113, 126, 158, 161, 163, 168, 172, 174, 177, 180], "init_storag": 3, "pars": [3, 4, 54, 117, 126, 168], "either": [3, 4, 21, 24, 40, 41, 50, 113, 125, 130, 133, 134, 162, 175, 177, 179, 183, 184, 187, 188], "within": [3, 46, 153], "typevar": [3, 100, 161], "numpi": [3, 5, 8, 9, 24, 32, 34, 103, 109, 119, 129, 130, 133, 134, 135, 136, 137, 155, 158, 160, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 176, 177, 181, 185, 186], "np": [3, 5, 8, 9, 20, 27, 36, 103, 123, 130, 131, 133, 134, 137, 162, 164, 168, 169, 170, 173, 174, 177, 181, 182, 185], "input": [3, 21, 24, 27, 41, 113, 126, 128, 137, 168, 170, 173, 182, 185], "mydocumentstorearraytyp": 3, "findmixin": [3, 11, 19, 27, 56, 57, 59, 68, 70, 73, 75, 78, 80, 85, 90, 92], "_find_similar_vector": 3, "limit": [3, 5, 7, 27, 33, 40, 53, 123, 155, 170, 177, 183, 185], "return": [3, 7, 8, 9, 14, 16, 17, 20, 21, 24, 25, 26, 27, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 61, 62, 67, 74, 77, 78, 80, 81, 83, 88, 89, 91, 94, 95, 96, 99, 100, 103, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 128, 130, 131, 133, 134, 135, 136, 137, 140, 141, 145, 161, 167, 170, 171, 178, 183, 185], "_find": [3, 27], "elasticarraytyp": 3, "given": [3, 21, 24, 26, 27, 40, 41, 42, 94, 103, 113, 116, 155, 158, 160, 161, 162, 163, 173, 174, 175, 177, 180], "otherwis": [3, 8, 27, 42, 53, 106, 113, 158, 183], "closest": [3, 27, 177], "abc": [3, 19, 57, 64, 65, 68, 73, 85, 90], "__all__": 3, "storagemixin": [3, 12, 16, 18, 51, 55, 56, 57, 68, 73, 78, 85, 90, 95], "past": 3, "modul": [3, 148, 158, 160, 186], "content": [3, 39, 102, 103, 110, 118, 148, 163, 164, 165, 166, 172, 175], "documentarraymydocstor": 3, "__new__": [3, 16, 51, 95], "cl": [3, 100], "arg": [3, 12, 13, 16, 18, 25, 32, 35, 36, 39, 51, 55, 57, 62, 67, 68, 72, 73, 77, 78, 83, 85, 89, 90, 94, 95, 103, 117, 123, 149], "almost": [3, 4, 160], "allmixin": [3, 11, 15, 19, 101, 104, 142, 144], "basedocumentarrai": [3, 10, 11, 13, 15], "documentarraylik": [3, 26, 37], "elif": 3, "documentarrayinmemori": [3, 8, 10, 11, 14, 17, 18], "done": [3, 9, 162, 178, 180, 182, 183], "abl": [3, 8], "welcom": 3, "back": [3, 4, 21, 24, 41, 43, 149, 151, 152, 158, 171, 180, 182, 186], "least": [3, 151, 171], "unit": [3, 159, 160, 162], "test_advance_index": 3, "test_sequ": 3, "test_construct": 3, "pleas": [3, 32, 40, 41, 65, 113, 149, 163, 168, 171, 179, 180, 182, 184], "overload": 3, "readi": [3, 159, 168, 178, 180, 183, 185, 186], "commit": [3, 4, 61], "live": [4, 185, 186], "redi": 4, "extern": [4, 21, 41, 149, 163, 183], "switch": [4, 151, 168, 176, 177, 183], "idiom": [4, 8, 160, 185, 186], "take": [4, 9, 21, 41, 151, 159, 178, 182], "simpl": [4, 7, 103, 150, 152, 158, 159, 160, 165, 167, 171, 173, 177, 178, 180, 185], "db": [4, 6, 8, 40], "ident": [4, 26, 163, 172, 174], "emb": [4, 7, 9, 11, 19, 104, 123, 160, 162, 164, 165, 170, 177, 186], "plot_embed": [4, 19, 42, 173, 181, 184], "box": [4, 8, 160], "There": [4, 9, 158, 162, 178, 185], "wai": [4, 45, 157, 158, 160, 163, 170, 171, 176, 178, 182, 184], "initi": [4, 46, 90, 91, 95, 163], "4477814032": 4, "alia": [4, 53, 91], "documentarraysqlit": [4, 10, 11, 55], "context": [4, 170, 185], "style": [4, 38, 103, 183, 184], "explicit": 4, "Of": [4, 170, 182], "cours": [4, 155, 170, 182], "former": [4, 157, 168], "sqliteconfig": [4, 10, 11, 15, 55, 56, 85, 86], "cfg": 4, "table_nam": [4, 6, 11, 55, 56, 85, 86, 88], "test": [4, 5, 9, 149, 157, 158, 161, 178, 186], "flexibl": 4, "error": [4, 174, 182], "prone": 4, "problem": [4, 9, 151, 177, 178, 182], "temp3": 4, "text": [4, 7, 11, 19, 20, 27, 38, 53, 100, 101, 102, 103, 104, 107, 109, 111, 118, 126, 152, 157, 158, 160, 162, 163, 164, 165, 166, 168, 170, 172, 173, 174, 175, 179, 180, 182, 185, 186, 187, 188], "hello": [4, 43, 53, 150, 154, 155, 158, 162, 163, 168, 170, 172, 179, 180, 182, 185], "len": [4, 158, 168, 178, 180, 181, 182, 185], "output": [4, 21, 34, 41, 42, 46, 111, 113, 116, 128, 149, 155, 168, 173, 182, 183, 184, 185], "realli": [4, 158, 168], "date": 4, "sens": [4, 113, 156, 174, 182], "speak": 4, "alreadi": [4, 50, 171, 176, 181], "written": [4, 24, 155, 179, 183], "prove": 4, "snippet": [4, 8, 159, 160, 180], "increas": [4, 128, 185], "simpli": [4, 151, 153, 155, 157, 158, 162, 165, 168, 170, 171, 173, 174, 176, 177, 180, 182, 183], "put": [4, 42, 116, 151, 156, 157, 158, 160, 164, 185], "certain": [4, 46, 151, 167, 171, 182], "meta": [4, 160, 187, 188], "inform": [4, 34, 128, 151, 158, 160, 162, 163, 164, 166, 168, 171, 172, 174], "sync": 4, "immedi": [4, 178, 183], "costli": 4, "consequ": [4, 183], "block": [4, 9, 171, 178, 183, 185], "solv": [4, 158, 160, 178], "statement": 4, "manag": [4, 183], "refactor": [4, 149, 159, 183, 185], "temp4": 4, "correct": [4, 168, 174, 180], "home": 4, "messag": [4, 32, 119, 163, 168, 172, 180], "write": [4, 154, 177, 183, 186], "row": [4, 20, 130, 131, 133, 134, 136, 137, 154, 177, 185], "modifi": [4, 21, 24, 41, 43, 53, 163, 165, 178], "below": [4, 158, 166, 167, 171, 178, 179, 180, 183, 184, 185], "ani": [4, 16, 30, 53, 68, 69, 101, 103, 107, 109, 113, 117, 124, 126, 128, 137, 149, 157, 158, 162, 166, 170, 171, 175, 179, 182, 183, 187, 188], "any_store_beyond_in_memori": 4, "d": [4, 5, 9, 124, 128, 157, 158, 159, 162, 163, 164, 165, 167, 168, 170, 171, 172, 174, 175, 177, 178, 179, 180, 182, 183, 185, 187, 188], "slice": [4, 50, 171], "NOT": [4, 53, 113], "chang": [4, 45, 151, 160, 161, 163, 168, 172, 183, 185], "solut": [4, 159, 160, 162, 186], "column": [4, 34, 154, 157, 158, 160, 185], "selector": [4, 149, 158, 159, 171], "obvious": 4, "disk": [4, 9, 32, 149, 176, 186], "howev": [4, 21, 41, 149, 158, 168, 171, 178, 185, 186], "concern": 4, "overwhelm": 4, "affect": [4, 149], "On": [4, 173, 184], "bright": 4, "modern": [4, 168, 182, 186], "highli": [4, 151, 160, 168, 180, 185], "resolv": [4, 8, 154], "neighbour": [4, 5, 40, 167, 174, 175, 186], "activ": [4, 164, 173, 185, 186], "continu": [4, 157, 158, 160, 170, 171, 180], "v0": 5, "6333": [5, 51, 78, 79], "ulimit": 5, "lot": [5, 34, 178], "collect": [5, 42, 116, 151, 160], "nofil": 5, "soft": 5, "65535": 5, "hard": [5, 151], "collection_nam": [5, 11, 51, 56, 78, 79, 80, 81, 83], "scroll_batch_s": [5, 11, 51, 56, 78, 79, 81], "scroll": 5, "over": [5, 9, 32, 103, 149, 167, 168, 171, 174, 180, 185], "larger": [5, 37, 111], "full_scan_threshold": [5, 11, 51, 56, 78, 79], "minim": [5, 171], "amount": [5, 180], "addit": [5, 8, 26, 103, 158, 186], "payload": 5, "edg": 5, "graph": [5, 137], "space": [5, 130, 171], "u": [5, 107, 109, 124, 178, 179, 183], "init": [5, 100, 158, 180], "4917906896": 5, "larg": [6, 42, 111, 149, 152, 171, 173, 177, 178, 185], "da1": [6, 172, 177], "reconnect": 6, "both": [6, 45, 149, 162, 167, 173, 177, 182, 185], "mine": 6, "filenam": [6, 21, 32, 33, 34, 37, 103, 107, 110, 113, 128, 172, 180], "serialize_config": [6, 7, 11, 12, 51, 55, 56, 57, 58, 78, 79, 80, 85, 86, 90, 91, 95], "serial": [6, 7, 32, 117, 128, 154, 176, 178, 182, 183, 185, 186], "conn_config": [6, 11, 55, 56, 85, 86], "sqlite3": 6, "journal_mod": [6, 11, 55, 56, 85, 86], "pragma": 6, "journal": [6, 175], "mode": [6, 103, 128], "synchron": [6, 11, 55, 56, 85, 86], "video": [7, 101, 104, 152, 158, 162, 165, 166, 184, 185, 186, 187, 188], "tutori": [7, 8, 186], "guid": [7, 149], "command": [7, 150], "8080": [7, 43, 90, 91, 95], "scheme": [7, 166, 187, 188], "semitechnologi": 7, "restart": 7, "failur": 7, "query_defaults_limit": 7, "25": [7, 175], "authentication_anonymous_access_en": 7, "persistence_data_path": 7, "var": 7, "lib": 7, "default_vectorizer_modul": 7, "enable_modul": 7, "cluster_hostnam": 7, "node1": 7, "protocol": [7, 9, 11, 21, 22, 32, 37, 56, 90, 91, 95, 117, 128, 139, 149, 168, 178, 179, 180, 183, 185], "bound": [7, 21, 41, 161, 178], "capit": 7, "1234": [7, 173], "preses": 7, "chosen": [7, 128, 177], "becom": [7, 171], "tradeoff": 7, "timeout_config": [7, 11, 56, 90, 91, 95], "timeout": 7, "request": [7, 43, 128, 178, 180, 183, 186], "And": [7, 53, 155, 175, 182], "bert": 7, "model": [7, 24, 44, 48, 113, 120, 122, 126, 153, 159, 160, 164, 165, 168, 173, 180, 183, 187, 188], "transform": 7, "automodel": 7, "autotoken": 7, "token": [7, 49, 159, 180], "from_pretrain": 7, "uncas": 7, "collate_fn": [7, 24], "return_tensor": 7, "pt": 7, "truncat": 7, "pad": [7, 49, 113, 124, 155, 171], "exactli": [8, 158, 183], "field": [8, 10, 26, 27, 34, 53, 96, 97, 100, 103, 111, 116, 124, 137, 154, 155, 159, 160, 161, 162, 163, 164, 166, 168, 170, 171, 174, 175, 180, 184, 187, 188], "verbos": 8, "rest": [8, 168, 178, 180, 182, 185], "stabl": 8, "app": [8, 182, 186], "endpoint": [8, 43, 179, 182, 183], "schema": [8, 44, 91, 120, 149, 161, 166, 168, 186], "strawberri": [8, 11, 19, 101, 104, 186], "debug": [8, 128, 184], "articl": [8, 157, 158, 160], "serv": [8, 42, 164], "introduct": [8, 149], "background": 8, "stronli": 8, "confus": [8, 149], "dummi": 8, "nest": [8, 33, 50, 116, 128, 152, 154, 158, 160, 162, 164, 166, 169, 174, 175, 176, 182, 184, 185, 186], "matcharrai": [8, 10, 11, 17, 50, 118, 170, 171, 174], "rememb": [8, 157, 180], "fetch": [8, 162], "strawberry_typ": [8, 10, 101], "strawberrydocu": [8, 122], "doc": [8, 14, 17, 30, 50, 53, 54, 67, 72, 77, 83, 89, 98, 103, 137, 140, 149, 151, 153, 158, 161, 162, 166, 167, 173, 175, 178, 179, 180, 181, 182, 183, 187, 188], "lambda": [8, 100, 155, 158, 159, 161, 174], "to_strawberry_typ": [8, 19, 48, 104, 122], "notic": [8, 53, 175], "could": [8, 34, 39, 103, 151, 166, 178, 187, 188], "preprocess": [8, 9, 151, 159, 165, 178, 180], "save": [8, 31, 32, 33, 34, 35, 37, 46, 63, 66, 106, 107, 110, 113, 125, 152, 177, 178, 180, 183], "toi": [8, 150, 154, 156], "py": [8, 103], "consol": [8, 183, 184, 186], "8000": 8, "browser": 8, "graphiql": 8, "playground": 8, "url": [8, 128, 166, 187, 188], "ad": [8, 14, 17, 45, 94, 160, 161, 172, 183], "beyond": [8, 182, 184], "scope": [8, 166, 187, 188], "respons": [8, 21, 41, 178, 186], "decid": 8, "perfect": [8, 159], "prototyp": [8, 184], "short": [8, 149, 155, 182], "wrap": [8, 65, 115, 128, 158, 163, 183], "asgi": 8, "graphql_app": 8, "add_rout": 8, "add_websocket_rout": 8, "tensorflow": [9, 129, 130, 162, 164, 166, 170, 173, 177, 185, 186], "paddlepaddl": [9, 162, 164, 166, 170, 173, 185, 186], "tensor": [9, 19, 20, 24, 42, 101, 102, 104, 106, 109, 113, 114, 116, 118, 124, 125, 126, 133, 134, 137, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 173, 177, 178, 180, 184, 185, 186, 187, 188], "spars": [9, 40, 111, 130, 131, 137, 162, 164, 166, 170, 177, 186, 187, 188], "dens": [9, 111, 137, 151, 162, 164, 166, 168, 170, 173, 177, 187, 188], "pickl": [9, 21, 32, 41, 117, 149, 168], "protobuf": [9, 14, 20, 21, 22, 32, 37, 96, 101, 103, 104, 117, 128, 149, 163, 172, 178, 185, 186, 187], "o": [9, 160, 171], "compress": [9, 21, 22, 32, 117, 128, 168, 178, 180, 185, 186], "transit": [9, 183, 185, 186], "preserv": [9, 30, 106, 171], "paddl": [9, 24, 129, 130, 173, 177], "torch": [9, 24, 129, 130, 137, 159, 164, 173, 177, 185, 186], "to_spars": 9, "to_tensor": 9, "save_binari": [9, 31, 32, 37, 180], "gz": [9, 103], "again": [9, 180, 182], "load_binari": [9, 31, 32, 149, 180], "engin": [9, 16, 51, 95, 158, 168, 182, 185, 186], "gpu": [9, 171, 173, 180, 185, 186], "intens": [9, 185], "stuff": 9, "mani": [9, 45, 113, 151, 160, 180, 182, 183, 184, 185], "pitfal": 9, "correctli": [9, 184, 186], "few": [9, 160], "cpu": [9, 21, 24, 40, 41, 123, 130, 133, 134, 159, 171, 173, 177, 186], "util": [9, 34], "drain": [9, 178], "dataload": [9, 11, 19], "illustr": [9, 159, 167], "million": [9, 113, 168, 177, 180], "color": [9, 42, 113, 116, 151, 183], "14gb": 9, "process": [9, 21, 41, 106, 107, 108, 109, 110, 113, 114, 124, 125, 150, 152, 157, 160, 161, 165, 171, 180, 182, 183, 185, 186], "cpu_job": [9, 178], "sleep": [9, 178], "job": [9, 178], "gpu_job": [9, 178], "func": [9, 21, 41, 74, 128, 178], "num_work": [9, 21, 40, 41, 123, 178], "donecpu": 9, "mixin": [10, 11, 75, 101, 142], "queryset": [10, 11], "annliteconfig": [10, 11, 12, 15, 56, 57, 58], "documentarrayannlit": [10, 11, 12], "chunk": [10, 11, 45, 50, 101, 102, 104, 113, 114, 118, 126, 151, 155, 156, 157, 158, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 178, 180, 185, 187, 188], "chunkarrai": [10, 11, 14, 50, 118, 151, 157, 170, 171], "elast": [10, 11, 56], "documentarrayelast": [10, 11, 16, 71], "elasticconfig": [10, 11, 15, 16, 56, 68, 69], "documentarrayqdr": [10, 11, 51], "qdrantconfig": [10, 11, 51, 56, 78, 79], "documentarrayweavi": [10, 11, 91, 93, 95], "weaviateconfig": [10, 11, 15, 56, 90, 91, 95], "getter": [10, 20, 28, 97, 100, 159, 161, 162], "image_gett": [10, 97, 98, 100], "text_gett": [10, 97, 98, 100], "audio_gett": [10, 97, 98], "video_gett": [10, 97, 98], "mesh_gett": [10, 97, 98], "tabular_gett": [10, 97, 98], "blob_gett": [10, 97, 98], "json_gett": [10, 97, 98], "setter": [10, 20, 97, 100, 159, 161, 162], "image_sett": [10, 97, 99, 100], "text_sett": [10, 97, 99, 100], "audio_sett": [10, 97, 99], "video_sett": [10, 97, 99], "mesh_sett": [10, 97, 99], "blob_sett": [10, 97, 99], "json_sett": [10, 97, 99], "tabular_sett": [10, 97, 99], "is_multimod": [10, 97, 100, 104, 115, 158], "documentdata": [10, 101, 102], "from_ndarrai": [10, 31, 36, 101, 103], "from_fil": [10, 31, 36, 101, 103, 151, 172, 178, 181, 183], "from_csv": [10, 31, 36, 101, 103, 154], "from_huggingface_dataset": [10, 31, 36, 101, 103], "from_ndjson": [10, 31, 36, 101, 103], "from_lin": [10, 31, 36, 101, 103], "pydantic_model": [10, 101, 182], "pydanticdocu": [10, 44, 101, 120, 126, 182], "math": [10, 148, 178], "r_precis": [10, 129, 135, 174], "precision_at_k": [10, 129, 135, 174], "hit_at_k": [10, 129, 135, 174], "average_precis": [10, 129, 135, 174], "reciprocal_rank": [10, 129, 135, 174], "recall_at_k": [10, 129, 135, 174], "f1_score_at_k": [10, 129, 135, 174], "dcg_at_k": [10, 129, 135, 174], "ndcg_at_k": [10, 129, 135, 174], "helper": [10, 19, 20, 21, 24, 25, 28, 29, 30, 33, 34, 36, 41, 42, 43, 47, 56, 57, 63, 78, 85, 101, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 120, 122, 124, 125, 129, 148, 155, 165], "minmax_norm": [10, 129, 136], "top_k": [10, 116, 129, 136, 181], "update_rows_x_mat_best": [10, 129, 136], "unravel": [10, 129, 137, 170], "ravel": [10, 129, 137], "get_array_typ": [10, 129, 137], "to_numpy_arrai": [10, 129, 137], "to_list": [10, 31, 37, 129, 137, 168, 180, 185], "get_array_row": [10, 129, 137], "check_arraylike_equ": [10, 129, 137], "detach_tensor_if_pres": [10, 129, 137], "proto": [10, 148], "io": [10, 11, 19, 21, 41, 138, 149, 150, 159, 160, 162, 168, 178, 185, 186], "docarray_pb2": [10, 138, 168], "score": [10, 40, 101, 102, 126, 135, 148, 164, 166, 168, 170, 174, 177, 180, 187, 188], "namedscoredata": [10, 142, 143], "namedscor": [10, 102, 142, 166], "basedctyp": [10, 96, 101, 142, 148], "copy_from": [10, 96, 163], "clear": [10, 57, 61, 63, 66, 67, 96, 162, 167], "pop": [10, 96, 162], "non_empty_field": [10, 96, 162], "nbyte": [10, 96], "typenam": [10, 128, 148], "deprecate_bi": [10, 128, 148], "dunder_get": [10, 128, 148], "random_ident": [10, 128, 148], "random_uuid": [10, 128, 148], "download_mermaid_url": [10, 128, 148], "get_request_head": [10, 128, 148], "get_full_vers": [10, 128, 148], "get_ci_vendor": [10, 128, 148], "reset_port": [10, 128, 148], "random_port": [10, 128, 148], "cached_properti": [10, 128, 148], "compress_byt": [10, 128, 148], "decompress_byt": [10, 128, 148], "get_compress_ctx": [10, 128, 148], "dataclass_from_dict": [10, 128, 148], "protocol_and_compress_from_file_path": [10, 128, 148], "add_protocol_and_compress_to_file_path": [10, 128, 148], "filter_dict": [10, 128, 148], "contentpropertymixin": [11, 19, 20, 101, 104, 108], "delitem": [11, 19, 60, 76, 87], "delitemmixin": [11, 19, 23], "embedmixin": [11, 19, 24], "get_framework": [11, 19, 24], "emptymixin": [11, 19, 25], "evaluationmixin": [11, 19, 26], "getattr": [11, 19], "getattributemixin": [11, 19, 28], "getitem": [11, 19, 60, 76, 87], "getitemmixin": [11, 19, 29], "groupmixin": [11, 19, 22, 30], "matchmixin": [11, 19, 40], "parallel": [11, 19, 21, 40, 171, 176, 183], "parallelmixin": [11, 19, 22, 41], "plotmixin": [11, 19, 42, 101, 104, 116], "post": [11, 19, 104, 123, 160, 178, 179, 182, 183], "postmixin": [11, 19, 43], "pydant": [11, 19, 48, 101, 104, 117, 168, 180], "pydanticmixin": [11, 19, 44, 101, 104, 120], "reduc": [11, 19], "reducemixin": [11, 19, 45], "sampl": [11, 19, 103, 106, 114, 153, 158], "samplemixin": [11, 19, 46], "setitem": [11, 19, 60, 76, 87], "setitemmixin": [11, 19, 47], "strawberrymixin": [11, 19, 48, 101, 104, 122], "texttoolsmixin": [11, 19, 49], "travers": [11, 19, 30, 167, 171, 185], "traversemixin": [11, 19, 50], "lookup": [11, 52, 54], "lookuptreeelem": [11, 52, 53], "lookupnod": [11, 52, 53], "lookupleaf": [11, 52, 53], "q": [11, 52, 53, 155, 164, 168, 177, 180], "lookupyerror": [11, 52, 53], "dunder_partit": [11, 52, 53], "iff": [11, 52, 53], "iff_not_non": [11, 52, 53], "guard_typ": [11, 52, 53], "guard_str": [11, 52, 53], "guard_list": [11, 52, 53], "guard_q": [11, 52, 53], "guard_it": [11, 52, 53], "parser": [11, 52, 117], "querypars": [11, 52, 54], "registri": [11, 56], "reference_doc": [11, 14, 17], "granular": [11, 14, 17, 50, 101, 102, 126, 155, 157, 158, 160, 161, 163, 166, 167, 168, 169, 171, 180, 187, 188], "adjac": [11, 14, 17, 50, 101, 102, 126, 163, 164, 166, 167, 168, 169, 171, 174, 180, 187, 188], "factori": [12, 16, 51, 55, 57, 58, 68, 69, 78, 79, 85, 86, 90, 91, 95, 102], "subset": [14, 17], "doc_view": 14, "represent": [14, 142, 144, 149, 153, 160, 163, 164, 173, 180, 185, 187, 188], "parent": [14, 160, 166, 182, 187, 188], "safeguard": 14, "legit": 14, "properti": [14, 17, 20, 45, 61, 78, 80, 81, 83, 91, 96, 101, 104, 108, 115, 128, 142, 144, 165, 182], "belong": [14, 45, 166, 187, 188], "bool": [15, 16, 21, 24, 26, 27, 30, 32, 34, 36, 39, 40, 41, 42, 43, 50, 53, 68, 69, 100, 101, 103, 107, 109, 111, 113, 114, 115, 116, 123, 124, 125, 126, 128, 136, 137, 187, 188], "rtype": [17, 32, 41, 45, 130, 131, 137], "documentarrayload": [19, 21, 22], "dataloadermixin": [19, 21], "binari": [19, 31, 33, 34, 103, 107, 109, 117, 124, 135, 149, 162, 165, 166, 168, 172, 187, 188], "lazyrequestread": [19, 31, 32], "binaryiomixin": [19, 31, 32], "commoniomixin": [19, 31, 33], "csv": [19, 31, 33, 36, 103, 152, 172, 186], "csviomixin": [19, 31, 34], "datafram": [19, 31, 154, 172, 176, 185, 186], "dataframeiomixin": [19, 31, 35], "from_gen": [19, 31], "fromgeneratormixin": [19, 31, 36], "json": [19, 31, 33, 34, 36, 44, 103, 117, 120, 158, 160, 163, 172, 185, 186], "jsoniomixin": [19, 31, 37], "pbar": [19, 31], "qpscolumn": [19, 31, 38], "get_pbar": [19, 31, 38], "get_progressbar": [19, 31, 38], "pushpul": [19, 31], "pushpullmixin": [19, 31, 39], "blob": [19, 20, 101, 102, 104, 109, 113, 118, 126, 149, 158, 161, 162, 163, 164, 165, 166, 168, 170, 180, 187, 188], "split_by_tag": [19, 30, 171], "batch_id": [19, 30], "apply_batch": [19, 41, 178], "map_batch": [19, 41, 171], "plot_image_sprit": [19, 42, 151, 156, 181, 183], "get_json_schema": [19, 44, 104, 120, 182], "to_pydantic_model": [19, 44, 104, 120, 180, 182], "from_pydantic_model": [19, 44, 104, 120, 165, 180, 182], "reduce_al": [19, 45], "shuffl": [19, 30, 36, 41, 46, 103, 174], "from_strawberry_typ": [19, 48, 104, 122, 165], "get_vocabulari": [19, 49, 104, 124, 155], "traverse_flat_per_path": [19, 50], "traverse_flat": [19, 50], "flatten": [19, 34, 50, 154], "plugin": [19, 104], "directli": [20, 42, 103, 151, 162, 163, 168, 169, 172, 177], "arraytyp": [20, 27, 101, 102, 118, 123, 130, 131, 137, 141], "stack": 20, "forwardref": [20, 21, 24, 26, 27, 30, 32, 40, 41, 44, 45, 48, 50, 100, 103, 118, 137], "togeth": [20, 30, 34, 103, 128, 151, 171, 172, 183], "along": [20, 30], "newli": 20, "axi": [20, 36, 42, 103, 113, 116, 151, 178, 183], "shape": [20, 113, 130, 150, 151, 153, 156, 158, 160, 168, 170, 187, 188], "dtype": [20, 109, 124, 150, 158, 160, 164, 168, 187, 188], "byte": [20, 32, 96, 101, 102, 106, 109, 117, 118, 128, 158, 163, 166, 172, 185, 186, 187, 188], "sequenc": [20, 34, 62, 67, 72, 77, 83, 89, 94, 101, 107, 109, 113, 124, 172, 187, 188], "documentcontenttyp": [20, 101, 102, 118], "classmethod": [21, 25, 32, 33, 34, 35, 36, 37, 39, 44, 48, 117, 119, 120, 122], "path": [21, 22, 32, 42, 50, 103, 116, 128, 158, 166, 170, 171, 172, 179, 187, 188], "thread": [21, 41, 185], "pool": [21, 41], "show_progress": [21, 22, 39, 41, 42, 43, 179, 180, 183], "load": [21, 31, 32, 33, 34, 35, 37, 40, 63, 66, 103, 149, 152, 153, 155, 159, 161, 168, 173, 178, 180, 183, 185], "yield": [21, 30, 41, 50, 103, 168, 172, 178, 180], "callabl": [21, 26, 27, 40, 41, 50, 74, 100, 123, 177], "anyth": [21, 41, 176, 177], "place": [21, 41, 45, 107, 151, 160, 165, 178], "later": [21, 39, 41, 45, 65, 155, 161, 183], "multi": [21, 41, 50, 164, 166, 178, 182, 185, 187, 188], "perhap": [21, 41], "enough": [21, 41, 185], "yourselv": [21, 41], "wish": [21, 41], "regardless": [21, 41, 137, 171, 178], "multiprocess": [21, 41], "variabl": [21, 41, 90, 91, 95, 128, 173, 180, 187, 188], "origin": [21, 24, 30, 41, 53, 113, 128, 155, 159, 161, 165, 166, 171, 172, 187, 188], "share": [21, 41, 160, 174, 180, 185], "worker": [21, 40, 41], "ignor": [21, 27, 41, 45, 158, 178, 179], "close": [21, 41, 57, 61, 174, 185], "progressbar": [21, 43, 184], "__delitem__": [23, 65, 71, 93], "embed_model": [24, 123, 133, 134], "devic": [24, 40, 123, 130, 133, 134, 159, 173, 177], "256": [24, 111, 123, 158, 164, 171, 177, 181], "to_numpi": [24, 173], "fill": [24, 26, 36, 103, 158, 161, 163, 167, 172, 173, 178], "inplac": [24, 106, 107, 108, 109, 113, 116, 124, 171, 178], "anydnn": [24, 123], "kera": [24, 173], "pytorch": [24, 113, 151, 162, 164, 166, 170, 173, 177, 183], "comput": [24, 26, 40, 113, 130, 133, 134, 155, 166, 171, 176, 177, 180, 182, 185, 187, 188], "cuda": [24, 40, 130, 133, 134, 159, 173, 177], "framework": [24, 137, 151, 168, 173, 177, 182, 185], "format": [24, 33, 34, 103, 168, 173, 182, 183, 185], "mini": 24, "dnn_model": 24, "dnn": [24, 164, 173], "solid": 24, "__module__": 24, "kei": [24, 49, 53, 100, 117, 124, 128, 149, 152, 187, 188], "idea": [24, 159, 182, 185, 186], "tell": [24, 158], "valueerror": [24, 174], "rank": [26, 135], "hash_fn": [26, 174], "metric_nam": [26, 27, 40, 123], "strict": 26, "groundtruth": [26, 174], "float": [26, 27, 36, 40, 101, 102, 103, 109, 113, 123, 126, 131, 133, 134, 135, 136, 137, 143, 145, 166, 187, 188], "multipl": [26, 30, 42, 50, 114, 162, 167, 168, 170, 171, 176, 180, 183, 185], "identifi": [26, 154, 163, 166, 173, 187, 188], "align": [26, 174], "semant": [26, 149, 177], "prevent": 26, "irrelev": [26, 174], "accident": 26, "keyword": [26, 103, 126, 163], "metric_fn": 26, "subclass": [27, 65, 183], "exclude_self": [27, 40, 123, 155, 174], "only_id": [27, 40, 123, 177], "notimplementederror": 27, "mark": [27, 40, 155], "bulk": [28, 164, 168, 170], "__getitem__": [29, 65, 71, 93], "until": [30, 178], "traversal_path": [30, 50], "divid": [30, 41], "minibatch": [30, 41, 178], "from_byt": [31, 32, 104, 117, 149, 165, 168, 180], "to_byt": [31, 32, 104, 117, 149, 168, 180], "to_protobuf": [31, 32, 104, 119, 168, 180], "from_protobuf": [31, 32, 104, 119, 165, 168, 180], "from_base64": [31, 32, 104, 117, 165, 168, 180], "to_base64": [31, 32, 104, 117, 168, 180], "save_embeddings_csv": [31, 34], "save_csv": [31, 34, 154], "load_csv": [31, 34], "to_datafram": [31, 35, 180], "from_datafram": [31, 35, 180], "save_json": [31, 32, 37], "load_json": [31, 37], "from_json": [31, 37, 104, 117, 149, 165, 168, 180, 182], "from_list": [31, 37, 180], "to_json": [31, 37, 104, 117, 149, 168, 180, 182], "to_dict": [31, 37, 104, 117, 144, 146, 149, 168, 175, 180], "from_dict": [31, 35, 37, 104, 117, 149, 165, 168], "render": [31, 38, 169, 185], "push": [31, 39, 178, 180, 183, 186], "pull": [31, 39, 180, 186], "_show_progress": 32, "stream": [32, 149, 150, 185, 186], "binaryio": [32, 33, 106, 107, 110, 113, 125], "progress": [32, 39, 41], "bar": [32, 39, 41, 163], "file_nam": 32, "interpol": 32, "respect": [32, 162], "my_docarrai": [32, 180], "lz4": [32, 168, 180, 186], "human": [32, 33, 37], "readabl": [32, 33, 37, 171], "present": 32, "_file_ctx": 32, "ndarray_typ": [32, 119, 140, 141, 168], "forc": [32, 119], "documentarrayproto": [32, 180], "pb_msg": [32, 119, 140, 141], "file_format": 33, "encod": [33, 34, 37, 103, 107, 109, 117, 124, 125, 155, 159, 187, 188], "utf": [33, 34, 37, 103, 107, 109, 124, 187, 188], "textio": [33, 34, 36, 37, 103], "compat": [33, 149, 168], "complex": 33, "restor": 33, "dam": [34, 49], "savetxt": 34, "flatten_tag": [34, 154], "exclude_field": 34, "dialect": [34, 36, 103], "excel": [34, 36, 103], "with_head": 34, "tag__fieldnam": 34, "separ": [34, 50, 103, 154, 157, 160, 168, 171, 186], "wont": 34, "predefin": [34, 103, 166, 175], "field_resolv": [34, 36, 96, 101, 103, 142, 154, 163], "panda": [35, 154, 176, 180, 185], "export": [35, 168, 173], "df": [35, 180], "noqa": [36, 41], "dar101": [36, 41], "dar102": [36, 41], "dar201": [36, 41], "recurs": [36, 103, 166, 167, 187, 188], "sampling_r": [36, 103], "read_mod": [36, 103, 172], "to_dataturi": [36, 103], "exclude_regex": [36, 103], "dataset_path": [36, 103], "filter_field": [36, 103], "datasets_kwarg": [36, 103], "fp": [36, 103], "filepath": [36, 103], "line_format": [36, 103], "jsonschema": [37, 117, 149, 168], "text_format": 38, "justifi": 38, "markup": 38, "table_column": 38, "textcolumn": 38, "total": [38, 96, 178], "transmit": 39, "cloud": [39, 114, 152, 158, 165, 183, 185, 186], "kinda": 39, "public": [39, 183, 186], "clipboard": 39, "everyon": 39, "anyon": [39, 162], "surviv": 39, "complic": [39, 152, 160, 186], "lifetim": [39, 180], "atm": 39, "dai": [39, 185], "week": [39, 180], "temporari": 39, "transmiss": 39, "local_cach": [39, 180], "upload": [39, 178, 180, 183], "download": [39, 107, 128, 151, 164, 180], "darrai": [40, 123], "normal": [40, 113, 116, 123, 135, 136, 151, 165, 178, 183], "use_scipi": [40, 123, 155, 177], "sqeuclidean": [40, 129, 130, 131, 133, 134, 177], "nativ": [40, 150, 183], "scipi": [40, 111, 130, 131, 137, 162, 164, 166, 170, 177, 186], "braycurti": 40, "canberra": 40, "chebyshev": 40, "cityblock": 40, "correl": 40, "dice": 40, "ham": 40, "jaccard": [40, 155], "jensenshannon": 40, "kulsinski": 40, "mahalanobi": 40, "minkowski": 40, "rogerstanimoto": 40, "russellrao": 40, "seuclidean": 40, "sokalmichen": 40, "sokalsneath": 40, "wminkowski": 40, "yule": 40, "invert": [40, 175], "against": [40, 53, 164, 174, 177], "tupl": [40, 49, 90, 91, 95, 96, 111, 113, 123, 124, 128, 136, 137, 162, 164, 166, 170, 172], "b": [40, 128, 156, 158, 159, 161, 163, 168, 171, 177, 178, 180], "min": [40, 136, 185], "rescal": 40, "significantli": 40, "speedup": [40, 178, 185], "hand": [40, 124, 164, 168, 174, 177, 186], "matrix": [40, 111, 130, 136, 162, 164, 166, 170, 185], "effect": [40, 50, 113, 160, 163, 175], "threadpool": 41, "meth": 42, "titl": [42, 159, 182], "mydocumentarrai": 42, "image_sprit": [42, 181, 184], "min_image_s": 42, "channel_axi": [42, 113, 116, 151, 181, 183], "start_serv": 42, "127": 42, "image_sourc": 42, "interact": [42, 181, 184], "visual": [42, 116, 156, 162, 173, 176, 180, 184, 185, 186], "projector": [42, 186], "bind": [42, 182], "frontend": 42, "uri": [42, 101, 102, 103, 104, 106, 107, 108, 109, 110, 113, 114, 116, 118, 124, 125, 126, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 168, 169, 172, 178, 179, 180, 184, 187, 188], "minimum": [42, 49, 116], "channel": [42, 113, 116, 151, 178, 186], "info": [42, 113, 116], "yourself": [42, 178], "fallback": 42, "canvas_s": [42, 116], "512": 42, "min_siz": [42, 116], "skip_empti": [42, 116], "sprite": [42, 116, 152, 156, 186], "squar": [42, 131, 133, 134, 157], "ui": [42, 116], "canva": [42, 116], "skip": [42, 116], "who": [42, 158, 180, 185], "progresbar": 42, "flow": [43, 103, 183], "remot": [43, 162, 166, 176, 179, 183, 187, 188], "sandbox": [43, 179, 183], "168": [43, 179, 183], "123": 43, "jinahub": [43, 179, 183], "send": [43, 159, 168, 178, 182], "indent": [44, 120], "pydanticdocumentarrai": [44, 182], "merg": [45, 53], "prioriti": [45, 185], "reduct": 45, "root": [45, 50, 157, 158, 163, 171], "children": [45, 53], "param": [45, 53, 130, 131, 137], "sequenti": [45, 173, 178], "kept": 45, "non": [45, 96, 107, 109, 113, 116, 124, 163, 168, 171, 178, 180, 184], "sort": [45, 128], "seed": 46, "replac": [46, 158], "state": [46, 162], "produc": 46, "__setitem__": [47, 65, 71, 93], "nlp": [49, 185], "min_freq": 49, "text_attr": [49, 124], "vocabulari": [49, 124, 155], "word": [49, 124, 149, 155, 171, 185], "textual": [49, 124, 155], "deriv": [49, 53, 60, 65, 76, 87, 124], "frequenc": [49, 106, 124], "dictionari": [49, 124, 175], "reserv": [49, 124, 155], "unknown": [49, 124, 155, 168], "filter_fn": 50, "traversablesequ": 50, "leav": 50, "comma": [50, 157, 171], "c": [50, 53, 113, 155, 156, 159, 170, 171, 183, 186, 187, 188], "child": [50, 53], "modal": [50, 101, 102, 126, 158, 160, 162, 166, 168, 175, 180, 185, 187, 188], "cc": [50, 171], "mm": 50, "cm": [50, 171, 175], "reach": [50, 149, 183], "determin": [50, 113, 128, 158], "fly": [50, 160], "traverse_flattened_per_path": 50, "add_child": [52, 53], "github": 53, "com": 53, "naiquevin": 53, "lookupi": 53, "mit": 53, "licens": [53, 186], "copyright": 53, "2013": 53, "vineet": 53, "naik": 53, "naikvin": 53, "gmail": 53, "permiss": 53, "herebi": 53, "grant": 53, "charg": 53, "obtain": 53, "softwar": [53, 153], "associ": 53, "deal": [53, 171, 183], "restrict": [53, 150, 157, 171, 180, 182], "publish": 53, "sublicens": 53, "sell": 53, "permit": 53, "whom": 53, "furnish": 53, "subject": [53, 185], "shall": [53, 158, 160, 178], "substanti": 53, "portion": 53, "THE": 53, "AS": 53, "warranti": 53, "OF": 53, "kind": [53, 162, 185], "express": [53, 158, 160, 162, 166, 170, 172, 175, 186], "OR": [53, 175], "impli": 53, "BUT": 53, "TO": 53, "merchant": 53, "FOR": 53, "purpos": [53, 157, 160, 162, 175, 185], "AND": [53, 175], "noninfring": 53, "IN": 53, "NO": 53, "event": [53, 186], "author": [53, 160], "holder": 53, "BE": 53, "liabl": 53, "claim": 53, "damag": 53, "liabil": 53, "action": [53, 175], "contract": 53, "tort": 53, "aris": 53, "WITH": 53, "val": 53, "pair": [53, 159, 174], "hold": 53, "text__exact": 53, "els": [53, 128, 135, 159, 176], "text_exact": 53, "tags__nam": 53, "tree": 53, "op": 53, "negat": 53, "typic": 53, "eg": [53, 128], "language__neq": 53, "rubi": [53, 187, 188], "framework__startswith": 53, "language__exact": 53, "php": [53, 187, 188], "leaf": 53, "dunderkei": [53, 128], "everyth": [53, 160, 168, 180, 185], "doubl": [53, 128, 170, 187, 188], "underscor": [53, 128], "a__b__c": 53, "a__b": [53, 128], "precond": 53, "f": [53, 156, 177, 178, 183, 185], "shortcut": 53, "partial": [53, 178], "commonli": 53, "precondit": 53, "mix": [53, 128, 174, 176, 185, 186], "classinfo": 53, "getsetdel": [56, 57, 63, 68, 73, 78, 85, 90], "offsetmap": [56, 57, 61], "seqlik": [56, 57, 63, 68, 73, 78, 85, 90], "needs_id2offset_rebuild": [56, 73, 74], "serialization_config": [56, 78, 81], "collection_name_meta": [56, 78], "initialize_t": [56, 85, 88], "create_t": [57, 61], "drop": [57, 61, 163], "extend_doc_id": [57, 61], "get_id_by_offset": [57, 61], "get_ids_by_offset": [57, 61], "get_offsets_by_id": [57, 61], "get_offset_by_id": [57, 61], "get_all_id": [57, 61], "del_at_offset": [57, 61], "insert_at_offset": [57, 61], "set_at_offset": [57, 61], "shift_offset": [57, 61], "kwd": [57, 62, 67, 68, 72, 73, 77, 78, 83, 85, 89, 90, 94], "in_memori": 61, "doc_id": 61, "offset": [61, 101, 102, 109, 126, 166, 168, 171, 180, 187, 188], "shift_from": 61, "shift_step": 61, "get_id": [63, 66], "delete_by_id": [63, 66], "delete_by_offset": [63, 66], "update_id": [63, 66], "abstract": [65, 80, 81, 83], "_set_doc": 65, "_del_doc": 65, "_del_all_doc": 65, "wrapper": 65, "inner": 65, "whenev": 65, "likewis": 65, "idx": [66, 156], "data_id": 66, "_ids_map": 66, "concret": [71, 93], "scan": [78, 81, 151, 172], "qdrantclient": [78, 80, 81, 83], "schema_vers": [85, 86, 88], "container_type_nam": 88, "cur": 88, "_class_nam": 91, "_obj": [96, 101, 142], "unknown_fields_handl": [96, 101, 142, 163], "catch": [96, 101, 142, 163], "overwrit": 96, "emtpi": 96, "consum": [96, 177, 178], "_source_field": [100, 161], "default_factori": [100, 158], "repr": [100, 158], "hash": [100, 108, 111, 152, 158, 165, 174], "metadata": [100, 166], "eq": [100, 175], "unsafe_hash": 100, "frozen": 100, "type_var_map": [100, 161], "_field": 100, "annot": [100, 157, 160, 186], "banner": [100, 157, 158, 159, 160, 161, 171], "appl": [100, 151, 162, 165, 168], "png": [100, 113, 151, 156, 159, 160, 162, 165, 170, 172, 183], "_types_registri": 100, "collid": 100, "obj": [100, 117, 128], "getattributesmixin": [101, 104, 105], "audio": [101, 104, 152, 158, 160, 162, 165, 166, 184, 185, 186, 187, 188], "audiodatamixin": [101, 104, 106], "blobdatamixin": [101, 104, 107], "convertmixin": [101, 104, 109], "dump": [101, 104, 117, 151, 156, 165], "urifilemixin": [101, 104, 110], "featurehash": [101, 104], "featurehashmixin": [101, 104, 111], "imagedatamixin": [101, 104, 113], "mesh": [101, 104, 152, 158, 162, 165, 166, 186], "meshdatamixin": [101, 104, 114], "multimod": [101, 104, 157, 158, 159, 171, 185], "multimodalmixin": [101, 104, 115], "portingmixin": [101, 104, 117], "propertymixin": [101, 104, 118, 142, 144, 145], "protobufmixin": [101, 104, 119], "rich_embed": [101, 104], "colorboxembed": [101, 104, 121], "sugar": [101, 104, 179], "singletonsugarmixin": [101, 104, 123], "textdatamixin": [101, 104, 124], "videodatamixin": [101, 104, 125], "parent_id": [101, 102, 126, 157, 158, 160, 161, 163, 166, 167, 168, 169, 171, 180, 187, 188], "mime_typ": [101, 102, 104, 118, 126, 151, 155, 157, 158, 160, 161, 162, 163, 166, 168, 170, 172, 179, 180, 187, 188], "weight": [101, 102, 126, 135, 166, 168, 175, 180, 187, 188], "smart_union": [101, 126], "structvaluetyp": [101, 102], "_reference_doc": 102, "_metadata": [102, 187, 188], "beforehand": 103, "shell": 103, "wildcard": 103, "zip": 103, "zero": [103, 113, 131, 133, 134, 136, 172, 187, 188], "directori": 103, "subdirectori": 103, "rate": 103, "rb": 103, "datauri": [103, 109], "plan": 103, "index_fil": 103, "search_fil": 103, "handler": 103, "auto": [103, 169, 177, 186], "hug": 103, "face": [103, 185], "huggingfac": 103, "load_dataset": 103, "valid": [103, 117, 126, 158, 168, 174, 178, 180, 185, 186], "detail": [103, 149, 151, 154, 158, 168, 173, 182, 183, 185], "package_refer": 103, "loading_method": 103, "html": [103, 155, 162], "save_audio_tensor_to_fil": [104, 106, 150, 165], "load_uri_to_audio_tensor": [104, 106, 150, 165], "load_uri_to_blob": [104, 107, 161, 165], "convert_blob_to_datauri": [104, 107, 165], "save_blob_to_fil": [104, 107, 165], "content_hash": [104, 108], "convert_content_to_datauri": [104, 108, 165], "convert_blob_to_tensor": [104, 109, 165], "convert_tensor_to_blob": [104, 109, 165], "convert_uri_to_datauri": [104, 109, 165], "save_uri_to_fil": [104, 110, 165], "embed_feature_hash": [104, 111, 155, 165], "set_image_tensor_channel_axi": [104, 113, 151, 164, 165, 178, 183], "convert_blob_to_image_tensor": [104, 113, 165], "convert_image_tensor_to_uri": [104, 113, 165], "convert_image_tensor_to_blob": [104, 113, 165], "set_image_tensor_shap": [104, 113, 151, 165], "save_image_tensor_to_fil": [104, 113, 151, 156, 165], "load_uri_to_image_tensor": [104, 113, 151, 162, 164, 165, 178, 183], "set_image_tensor_inv_norm": [104, 113, 165], "set_image_tensor_norm": [104, 113, 151, 164, 165, 178, 183], "convert_image_tensor_to_sliding_window": [104, 113, 151, 165], "load_uri_to_point_cloud_tensor": [104, 114, 153, 165], "get_multi_modal_attribut": [104, 115], "displai": [104, 116, 152, 169], "plot_matches_sprit": [104, 116, 181], "content_typ": [104, 118, 162], "load_uri_to_text": [104, 124, 155, 162, 165], "convert_text_to_tensor": [104, 124, 155, 165], "convert_tensor_to_text": [104, 124, 155, 165], "convert_text_to_datauri": [104, 124, 165], "load_uri_to_video_tensor": [104, 125, 156, 165], "save_video_tensor_to_fil": [104, 125, 156, 165], "sample_r": 106, "44100": 106, "sample_width": 106, "wav": [106, 152, 158], "mono": 106, "stereo": 106, "treat": 106, "width": [106, 113, 116, 166, 167, 187, 188], "charset": [107, 109, 124], "base64": [107, 109, 117, 124, 162, 186], "charact": [107, 109, 124, 155, 174], "regist": [107, 109, 124], "iana": [107, 109, 124], "arbitrari": [107, 109, 111, 124, 157, 160, 180, 187, 188], "octet": [107, 109, 124], "form": [107, 109, 124, 126, 175, 180], "satisfi": [107, 109, 124, 158], "rule": [107, 109, 124, 168, 178], "7bit": [107, 109, 124], "bit": [107, 109, 124, 151, 170, 171, 187, 188], "sometim": [107, 109, 124, 155], "ascii": [107, 109, 124, 187, 188], "univers": [108, 165], "effort": [108, 168], "convers": [109, 165], "count": 109, "_valid_": [109, 113], "buffer": [109, 139, 149, 151, 162, 168, 187, 188], "max_valu": 111, "1000000": 111, "trick": [111, 182], "small": [111, 131, 133, 134, 136, 152, 171, 180], "caus": 111, "collis": 111, "overal": [111, 156, 183], "csr_matrix": [111, 130, 137, 177], "original_channel_axi": 113, "new_channel_axi": 113, "move": [113, 160, 183], "height": 113, "image_format": 113, "jpeg": [113, 151, 157, 158, 161, 168, 172], "resampl": 113, "h": [113, 175], "img_mean": 113, "485": 113, "456": 113, "406": 113, "img_std": 113, "229": 113, "225": 113, "invers": [113, 116], "float32": [113, 116, 150, 158, 164, 173, 177, 187, 188], "uint8": [113, 116, 158, 160, 180], "deviat": 113, "std": [113, 177], "train": [113, 159, 185], "scratch": 113, "calcul": 113, "imagenet": 113, "pretrian": 113, "grai": 113, "scale": [113, 185, 186], "black": [113, 157], "white": [113, 157, 158], "rgb": 113, "mnist": 113, "stddev": 113, "greyscal": 113, "window_shap": [113, 151], "stride": [113, 151], "as_chunk": [113, 114, 151], "slide": [113, 151], "window": [113, 151, 186], "view": [113, 151], "desir": 113, "target_s": 113, "denot": 113, "vertic": [113, 167, 183], "horizont": [113, 167, 183], "patch": 113, "whose": [113, 175], "area": [113, 135], "outsid": 113, "extract": [113, 128, 150, 152], "3d": [114, 152, 162, 165, 166, 186], "geometri": 114, "inv_norm": [116, 181], "1920": 116, "bytearrai": 117, "dumper": 117, "_propertymixin": 118, "documentproto": [119, 140, 168, 180], "basemodel": [120, 126, 182], "sugari": [123, 165], "syntax": [123, 149, 158, 159, 165, 171, 179, 185], "attr": 124, "counter": 124, "text_field": 124, "vocab": [124, 155], "max_length": [124, 155], "int64": [124, 187, 188], "1d": [124, 136], "build_vocab": 124, "integ": [124, 155, 171, 187, 188], "entri": [124, 136], "cut": [124, 151], "begin": [124, 185], "shorter": 124, "delimit": 124, "only_keyfram": [125, 156], "keyfram": 125, "frame_r": 125, "codec": 125, "h264": 125, "mp4": [125, 156], "frame": [125, 152], "decod": [125, 155], "validationerror": 126, "_namedscor": 126, "target": [128, 136], "new_fn": 128, "removed_at": 128, "label": [128, 158, 187, 188], "deprec": 128, "old_fn_nam": 128, "_dict": 128, "fieldnam": 128, "dunderscor": 128, "referenc": 128, "referrenc": 128, "struct": [128, 187, 188], "use_uuid1": 128, "uuid": [128, 163], "mac": [128, 186], "uuid1": [128, 163], "afford": 128, "closer": 128, "uuid4": 128, "relat": [128, 166, 179, 183, 185, 186], "lost": [128, 178], "explicitli": [128, 168], "mermaid_url": 128, "jpg": [128, 151, 164, 168, 170, 172, 178, 181], "suffix": 128, "svg": 128, "header": [128, 178], "decor": [128, 160, 183], "cach": 128, "wb": 128, "klass": 128, "dikt": 128, "file_path": 128, "default_protocol": 128, "default_compress": 128, "found": [128, 158, 168, 180, 182, 183, 185], "docarray_fashion_mnist": 128, "gzip": [128, 168, 178, 180], "bin": [128, 180], "sparse_cosin": [129, 130, 131], "sparse_sqeuclidean": [129, 130, 131], "sparse_euclidean": [129, 130, 131], "pdist": [129, 130], "cdist": [129, 130], "x_mat": [130, 131, 133, 134, 136], "pairwis": 130, "coo_matrix": [130, 164, 170], "ndim": [130, 131, 133, 134, 137, 187, 188], "y_mat": [130, 131, 133, 134], "y": [130, 137, 166, 187, 188], "n_x": 130, "n_y": 130, "dist": 130, "j": [130, 185], "ep": [131, 133, 134, 136], "1e": [131, 133, 134, 136], "07": [131, 133, 134, 136], "jitter": [131, 133, 134, 136], "divd": [131, 133, 134, 136], "binary_relev": 135, "precis": [135, 174, 178], "relev": [135, 187, 188], "been": [135, 182, 185], "nonzero": [135, 187, 188], "en": 135, "wikipedia": 135, "org": [135, 155, 162], "wiki": 135, "evaluation_measures_": 135, "information_retriev": 135, "percentag": 135, "occur": 135, "hit": [135, 151], "curv": 135, "reciproc": 135, "max_rel": [135, 174], "harmon": 135, "f1": [135, 163], "discount": 135, "cumul": 135, "gain": 135, "dcg": 135, "real": [135, 151, 160, 174, 182, 184], "www": [135, 155, 162], "stanford": 135, "edu": 135, "cs276": 135, "handout": 135, "evaluationnew": 135, "pdf": [135, 162], "6309": 135, "4307": 135, "ndcg": 135, "t_rang": 136, "x_rang": 136, "2d": 136, "descend": 136, "largest": 136, "biggest": [136, 185], "x_mat_best": 136, "x_inds_best": 136, "x_ind": 136, "raise_error_if_not_arrai": 137, "tf": [137, 164, 173], "num_row": 137, "sp": [137, 164, 177], "detach": 137, "read_ndarrai": [138, 140, 141], "flush_ndarrai": [138, 140, 141], "parse_proto": [138, 140], "flush_proto": [138, 140], "representmixin": [142, 144, 146], "op_nam": [142, 143, 144, 145, 187, 188], "ref_id": [142, 143, 144, 145, 155, 187, 188], "_reference_n": 143, "subpackag": 148, "submodul": 148, "project": [149, 150, 162, 183], "bump": 149, "minor": [149, 175], "autom": 149, "releas": [149, 183, 185], "bug": 149, "track": 149, "explain": [149, 158], "rational": [149, 160], "behind": [149, 160], "introduc": [149, 163, 168, 170, 182], "involv": 149, "Its": [149, 168, 185], "intention": 149, "undocu": 149, "still": [149, 158, 171, 178, 186], "backward": 149, "concept": [149, 185], "major": [149, 185], "wire": [149, 168, 185, 186], "migrat": 149, "favor": 149, "ed": [149, 168], "unschema": [149, 168], "awar": 149, "stick": 149, "archiv": 149, "acknowledg": 149, "natur": [149, 157, 162, 170, 172], "caffe": 149, "unifi": [149, 185], "terminologi": 149, "fluent": 149, "remark": [149, 180], "30833": 150, "revers": 150, "olleh": 150, "program": [150, 178], "ffmpeg": 150, "multimedia": 150, "pydub": 150, "manipul": [150, 185], "easi": [150, 154, 155, 158, 160, 163, 170, 171, 183, 185, 186], "librosa": 150, "music": 150, "analysi": 150, "pyaudioanalysi": 150, "signal": 150, "pillow": [151, 186], "matplotlib": [151, 186], "255": [151, 162], "641": 151, "resiz": [151, 165], "downsampl": 151, "upsampl": 151, "meet": [151, 186], "chain": [151, 165], "feed": [151, 183], "resnet": 151, "executor": [151, 157, 159, 160], "2489083": 151, "proc": 151, "yep": 151, "uneat": 151, "deep": [151, 153, 160, 163, 164, 170, 171, 185, 186], "quick": [151, 162], "img": 151, "But": [151, 160, 162, 168, 170, 177, 182], "nice": [151, 155, 182], "overview": [151, 163], "rich": [151, 171, 180, 185, 186], "salienc": 151, "krusti": 151, "burger": 151, "yellow": 151, "schoolbu": 151, "intent": 151, "guess": [151, 166, 178, 187, 188], "breakdown": 151, "simpler": 151, "simplest": 151, "approach": 151, "datatyp": 151, "792": 151, "180": 151, "three": [151, 155, 156, 162, 170, 177, 185], "7585b8aa": 151, "3826": 151, "11ec": [151, 154], "bc1a": 151, "1e008a366d48": [151, 154], "h8t0h8t0h8t0h8t0h8t0h8t0h8t0h8t0h8t0h8t0h8t0h8t0h8t0h8t0h8t0h8t0h8t0h8t0h8t0h8t0h8t0h8t0h8t0h8t0h8t0h8t0": 151, "simpson": 151, "hmm": 151, "doesn": 151, "whole": [151, 178, 180, 182], "overlap": [151, 171, 180], "oversampl": 151, "combin": [152, 166, 180, 183], "segment": 152, "ones": [152, 170, 171, 172, 180], "tool": 152, "trimesh": [153, 186], "polygon": 153, "profession": 153, "commerci": 153, "uniti": 153, "blender": 153, "repeat": [153, 180, 182, 187, 188], "uniformli": 153, "bodi": [153, 182], "easier": [153, 162, 168], "vike": 153, "glb": 153, "pictur": [153, 166, 167, 183], "depict": [153, 166, 171, 185], "freeli": 154, "tabular": [154, 158, 162], "usernam": 154, "booker12": 154, "9012": 154, "rachel": 154, "booker": 154, "grey07": 154, "2070": 154, "laura": 154, "grei": 154, "johnson81": 154, "4081": 154, "craig": 154, "johnson": 154, "jenkins46": 154, "9346": 154, "mari": 154, "jenkin": 154, "smith79": 154, "5079": 154, "jami": 154, "smith": 154, "attempt": 154, "fail": 154, "manual": [154, 164], "tmp": 154, "thing": [154, 156, 168, 178, 182, 183], "english": 154, "german": 154, "hallo": 154, "world": [154, 155, 158, 160, 162, 163, 168, 170, 172, 180, 182], "welt": 154, "tag__english": 154, "tag__german": 154, "029388a4": 154, "3830": 154, "b6b2": 154, "0293968c": 154, "418de220": 154, "aad8": 154, "418dec52": 154, "inlin": [155, 162], "w3": 155, "histori": 155, "19921103": 155, "hypertext": 155, "3c128f326fbf11ec90821e008a366d49": 155, "\u0928\u092e\u0938": 155, "\u0924": 155, "\u0926": 155, "\u0928": 155, "\u092f": 155, "\u4f60\u597d\u4e16\u754c": 155, "\u3053\u3093\u306b\u3061\u306f\u4e16\u754c": 155, "\u043f\u0440\u0438\u0432\u0435\u0442": 155, "\u043c\u0438\u0440": 155, "thousand": [155, 180], "finer": 155, "5a12d7a86fbf11ec99a21e008a366d49": 155, "5a12e2346fbf11ec99a21e008a366d49": 155, "5a12e2f26fbf11ec99a21e008a366d49": 155, "5a12e3886fbf11ec99a21e008a366d49": 155, "5a12e41e6fbf11ec99a21e008a366d49": 155, "5a12e4966fbf11ec99a21e008a366d49": 155, "further": [155, 157, 166, 182], "goodby": 155, "symbol": 155, "phrase": 155, "sentenc": [155, 160], "bonu": 155, "procedur": [155, 178, 182], "she": 155, "enter": [155, 182], "room": 155, "pride": [155, 162], "prejudic": [155, 162], "gutenberg": [155, 162], "1342": [155, 162], "txt": [155, 162], "strip": 155, "scores__jaccard": 155, "staircas": 155, "breakfast": 155, "congratul": 155, "air": 155, "usual": [155, 161, 164], "ungraci": 155, "mr": 155, "bennet": 155, "alon": 155, "f47f7448709811ec960a1e008a366d49": 155, "6666666666666666": 155, "7142857142857143": 155, "av": [156, 186], "250": [156, 183], "176": [156, 180], "320": 156, "dim": [156, 187, 188], "got": [156, 180, 182], "176x320": 156, "infer": 156, "framer": 156, "around": [156, 178], "25fp": 156, "mov": 156, "redund": 156, "enumer": [156, 178], "60fp": 156, "60": 156, "section": [157, 158, 160, 176, 178, 182, 185], "mmdoc": [157, 158, 159, 161], "nois": [157, 158, 174], "question": [157, 178, 186], "me": [157, 185], "reiter": 157, "primit": [157, 158], "convent": 157, "field1": [157, 175], "field2": 157, "bracket": [157, 175], "nonetyp": [157, 174], "accept": [157, 158, 161, 162, 174, 175], "front": 157, "latter": 157, "deepli": 157, "nested_field1": 157, "bannerdoc": [157, 158], "columnarticl": [157, 158], "websit": [157, 158], "c1": [157, 171], "c2": 157, "unawar": 158, "mymultimodaldoc": 158, "avatar": 158, "f3b193bbe8403c3ce1599b82f941f68a": 158, "18c7ca1c829fe819250faa4914bc45c1": 158, "504": 158, "1ee7fadddc23fc72365b2069f82d4bb4": 158, "fact": [158, 168], "is_dataclass": 158, "mmdoc1": 158, "mmdoc2": 158, "sequel": [158, 177], "pixel": 158, "soundfx": 158, "90c744c5155c2356d27f8c91955f70f7": 158, "c9d71990088fb0d8db3c83a6bd35650d": 158, "22e27708288e70813673711c86f834e": 158, "05ad36dfb0c520027b18c582d205c176": 158, "63248": 158, "unannot": 158, "17c77b443471f9d752cbcc360174b65f": 158, "some_field": 158, "other_field": 158, "15725d705b6c8d7e99908d380d614fa5": 158, "48a84621d51d94383b86db89e64022a3": 158, "1cb5cc74f1f986876a0c4c87201b9a28": 158, "instruct": 158, "complet": [158, 172, 174, 183, 185, 186], "52d9dcca4bc30cd0ef3b82917459cd32": 158, "04edacf582c5aa7b0bcfcf3d3e0a57bf": 158, "f5e9f105162e26d1d42ef7e2d363095a": 158, "d7d0b506f690890113e6a601ef80f8c6": 158, "feature_imag": 158, "75a3df4c26498d338589d2b2c20e156": 158, "cb1df29a384a6d39aa81e5af93316c4d": 158, "65cce8eb564f9ce136ff693b8ecb8f53": 158, "4dc4497d608b4f96094711e90cfb8078": 158, "f7b3aaefeab73af18f8372a594405b46": 158, "basic": [158, 159, 160, 166, 174, 184, 185, 186], "encourag": 158, "think": [158, 171], "m_r": 158, "assert": [158, 161], "mutabl": 158, "builtin": 158, "great": 158, "scientist": [158, 176, 182, 184, 185, 186], "machin": [158, 164, 166, 180], "intuit": [158, 160, 163, 182, 185, 186], "straightforward": [158, 160], "aka": [158, 160], "far": [159, 160, 171], "nutshel": [159, 160, 176, 182], "develop": [159, 183, 185, 186], "openai": 159, "contrast": 159, "pre": [159, 168, 180, 183], "neural": [159, 186], "varieti": 159, "pil": 159, "is_avail": 159, "vit": 159, "unsqueez": 159, "diagram": 159, "dog": [159, 160], "cat": [159, 160], "no_grad": 159, "image_featur": 159, "encode_imag": 159, "text_featur": 159, "encode_text": 159, "3285e": 159, "6554e": 159, "3394e": 159, "5605e": 159, "2397e": 159, "0547": 159, "0061": 159, "0495": 159, "6638": 159, "1281": 159, "4950": 159, "1447": 159, "0225": 159, "2909": 159, "4472": 159, "3420": 159, "1798": 159, "1981": 159, "2040": 159, "1533": 159, "4514": 159, "5664": 159, "0596": 159, "m1": [159, 161], "m2": [159, 161], "m3": 159, "scalabl": [159, 183, 185], "microservic": [159, 168, 180, 183, 185], "extrem": [159, 167, 185], "touch": 159, "codebas": [159, 180, 185], "v": [159, 177, 183, 185, 186, 188], "clip_client": 159, "demo": 159, "ca": 159, "51000": 159, "3137": 159, "1458": 159, "303": 159, "8877": 159, "2546": 159, "11365": 159, "05466": 159, "005997": 159, "0498": 159, "663": 159, "1274": 159, "4944": 159, "1442": 159, "02275": 159, "291": 159, "4468": 159, "3416": 159, "1985": 159, "204": 159, "1534": 159, "4507": 159, "0598": 159, "wparticl": 160, "headlin": 160, "flight": 160, "pet": 160, "pick": 160, "seat": 160, "anim": 160, "calm": 160, "nathan": 160, "diller": 160, "travel": 160, "destin": [160, 171], "cb25ccea837e8e2b33ef1e050bae1de2": 160, "df56a39e24f441108742b533c8710705": 160, "198": 160, "254": 160, "828f9c346a9f5862a55ea75188b1ae19": 160, "a76803e1bcddd0960e1a01d47132c064": 160, "spend": 160, "mixtur": 160, "card": 160, "washington": 160, "sound": [160, 171], "bbc": 160, "transfer": [160, 180, 182, 185, 186], "seem": [160, 185], "doc1": [160, 180], "doc2": [160, 180], "doc0": 160, "Or": [160, 183], "jointli": 160, "relationship": 160, "redesign": [160, 185], "why": [160, 168, 184, 186], "implicit": 160, "answer": [160, 178], "trivial": 160, "newspap": 160, "plai": [160, 184], "tackl": 160, "eleg": 160, "translat": 161, "myimag": 161, "my_sett": 161, "my_gett": 161, "bde1ab74306c2f63188069879e3945ac": 161, "cd594a6870a8921d7a9c6b0ec764251d": 161, "xff": 161, "xd8": 161, "xe0": 161, "x00": [161, 168, 180], "x10jfif": 161, "x01": [161, 168, 180], "x0": 161, "56810": 161, "recov": 161, "invok": 161, "im": 161, "unset": 162, "assign": [162, 164, 170], "among": 162, "spmatrix": [162, 164, 166], "amp": 162, "intermedi": [162, 168, 180, 185], "mutual": 162, "exclus": 162, "7623808c6d6211ec9cf21e008a366d49": 162, "reset": 162, "page": 162, "automat": [162, 163, 168, 170, 184], "grab": 162, "b4d675466d6211ecae8d1e008a366d49": 162, "2808eeb86d6311ecaddb1e008a366d49": 162, "d1": [162, 163, 164, 169, 172], "ebook": 162, "jane": 162, "austen": 162, "anywher": 162, "wor": 162, "ivborw0kggoaaaansuheugaaaaua": 162, "aaafcayaaacnbyblaaaaheleqvqi12p4": 162, "w38giaxdibke0dhxgljnbaao": 162, "9txl0y4ohwaaaabjru5erkjggg": 162, "load_uri_to_": 162, "load_uri_to_datauri": 162, "5dd542406d3f11eca3241e008a366d49": 163, "hex": 163, "though": [163, 177], "unexpect": 163, "d2": [163, 164, 169], "d3": [163, 164, 169], "d4": [163, 164], "foo": [163, 178, 179, 183], "forget": [163, 185], "autocomplet": 163, "a14effee6d3e11ec8bde1e008a366d49": 163, "a14f00986d3e11ec8bde1e008a366d49": 163, "a14f01a66d3e11ec8bde1e008a366d49": 163, "a14f023c6d3e11ec8bde1e008a366d49": 163, "d0": [163, 164, 169], "jupyt": [163, 180, 186], "notebook": [163, 169, 175, 186], "googl": [163, 180, 184, 185, 186, 187, 188], "colab": [163, 169, 180, 185, 186], "prettifi": 163, "caught": 163, "f957e84a6d4311ecbea21e008a366d49": 163, "silent": 163, "attributeerror": 163, "4479829968": 163, "piec": 164, "d5": 164, "from_dens": 164, "unlik": [164, 168], "cast": [164, 168], "assig": 164, "float64": [164, 187, 188], "stai": [164, 185, 186], "smarter": 164, "loop": [164, 168, 170, 177, 178], "someth": [164, 174, 183], "00003": 164, "resnet50": [164, 173], "torchvis": [164, 173], "pretrain": [164, 173], "ten": [164, 174], "63a39fa86d6911eca6fa1e008a366d49": 164, "63a39aee6d6911eca6fa1e008a366d49": 164, "63a399d66d6911eca6fa1e008a366d49": 164, "63a39b346d6911eca6fa1e008a366d49": 164, "63a3999a6d6911eca6fa1e008a366d49": 164, "63a39a626d6911eca6fa1e008a366d49": 164, "63a397ba6d6911eca6fa1e008a366d49": 164, "63a39a1c6d6911eca6fa1e008a366d49": 164, "63a39ab26d6911eca6fa1e008a366d49": 164, "63a399046d6911eca6fa1e008a366d49": 164, "63a399546d6911eca6fa1e008a366d49": 164, "apple1": 165, "equival": 165, "hexdigest": [166, 187, 188], "raw": [166, 187, 188], "depth": [166, 167, 171, 182, 187, 188], "cross": [166, 185, 187, 188], "mime": [166, 187, 188], "coordin": [166, 187, 188], "crop": [166, 187, 188], "timestamp": [166, 175, 187, 188], "comprehens": [166, 185, 186], "organ": 166, "categor": 166, "comprehend": 166, "scienc": [166, 186], "commun": [166, 174, 186], "7f907d786d6c11ec840a1e008a366d49": 167, "7f907c606d6c11ec840a1e008a366d49": 167, "7f907cba6d6c11ec840a1e008a366d49": 167, "7f907ab26d6c11ec840a1e008a366d49": 167, "7f907c106d6c11ec840a1e008a366d49": 167, "crucial": [167, 168, 180], "fortun": 167, "thank": [167, 170], "shown": [167, 184], "wherea": [167, 168, 185], "receiv": [168, 174, 182], "compact": [168, 170, 180], "reader": [168, 171, 182], "wonder": 168, "aren": 168, "nonetheless": [168, 180], "decis": [168, 185], "sake": [168, 171], "clariti": [168, 171], "webservic": [168, 180, 182, 186], "fastapi": [168, 180, 181, 186], "d_as_json": 168, "641032d677b311ecb67a1e008a366d49": 168, "null": [168, 180], "db66bc2e77b311eca5f51e008a366d49": 168, "mimetyp": 168, "aqaaaaaaaaacaaaaaaaaaamaaaaaaaaa": 168, "i8": 168, "clsname": 168, "appreci": [168, 185], "exclud": 168, "lower": 168, "uppercas": 168, "exclude_non": [168, 175], "cdbc4f7a77b411ec96ad1e008a366d49": 168, "ey": 168, "handcraft": 168, "smoothli": 168, "encount": 168, "thumb": 168, "friend": [168, 180, 182, 185], "never": 168, "upset": 168, "ever": [168, 182, 185], "probabl": [168, 170, 171, 182, 186], "d_byte": 168, "d_r": 168, "x80": [168, 180], "x03cdocarrai": [168, 180], "ndocument": [168, 180], "nq": [168, 180], "x81q": [168, 180], "x02x": 168, "x05": [168, 180], "x00_dataq": [168, 180], "ndocumentdata": 168, "x04": [168, 180], "x06": 168, "x0e": 168, "x00_reference_docq": 168, "x07h": 168, "x01x": 168, "x02": [168, 180], "x00idq": 168, "x08x": 168, "x005d29a9f26d5911ec88d51e008a366d49q": 168, "tx": 168, "x00parent_": 168, "3644c0fa6d5a11ecbb081e008a366d49": 168, "110": [168, 174], "666": 168, "spooki": 168, "deseri": [168, 180], "protcol": [168, 180], "ganjzg9jyxjyyxkuzg9jdw1lbnqkrg9jdw1lbnqkcqapgxebfxecwauaaabfzgf0yxedy2rvy2fycmf5lmrvy3vtzw50lmrhdgekrg9jdw1lbnreyxrhcneekyfxbx1xbihydgaaaf9yzwzlcmvuy2vfzg9jcqdoavgcaaaaawrxcfggaaaazmzjnty3odg3mzaymtfly2e4njmxztawogeznjzkndlxcvgjaaaacgfyzw50x2lkcqpowasaaabncmfudwxhcml0exeltlgjaaaaywrqywnlbmn5cqxowayaaabidwzmzxjxdu5ybaaaagjsb2jxdk5ycqaaag1pbwvfdhlwzxepwaoaaab0zxh0l3bsywlucrbybaaaahrlehrxevgfaaaaagvsbg9xelghaaaay29udgvudhettlggaaaad2vpz2h0crrowamaaab1cmlxfu5ybaaaahrhz3nxfk5ybgaaag9mznnldhextlgiaaaabg9jyxrpb25xge5ycqaaagvtymvkzgluz3ezxxeakesbswjla2vycaaaag1vzgfsaxr5crtowasaaabldmfsdwf0aw9uc3ectlggaaaac2nvcmvzcr1owayaaabjahvua3nxhk5ybwaaag1hdgnozxnxh051ynnilg": 168, "156": 168, "d_as_dict": 168, "5596c84c77b711ecafed1e008a366d49": 168, "d_proto": 168, "d66463b46d6a11ecbf891e008a366d49": 168, "e4b215106d6a11ecb28b1e008a366d49": 168, "hundr": 168, "ineffici": [168, 187, 188], "tast": 170, "talk": [170, 183, 186], "element_selector": 170, "attribute_selector": 170, "scores__cosine__valu": 170, "8d41ce5c6f0d11eca2181e008a366d49": 170, "8d41cfa66f0d11eca2181e008a366d49": 170, "8d41cff66f0d11eca2181e008a366d49": 170, "db60ab8a6f0d11ec99511e008a366d49": 170, "db60abda6f0d11ec99511e008a366d49": 170, "db60c12e6f0d11ec99511e008a366d49": 170, "db60c1886f0d11ec99511e008a366d49": 170, "db60c4266f0d11ec99511e008a366d49": 170, "db60c46c6f0d11ec99511e008a366d49": 170, "285db6586f0e11ec99401e008a366d49": 170, "285db6b26f0e11ec99401e008a366d49": 170, "285dbff46f0e11ec99401e008a366d49": 170, "285dc0586f0e11ec99401e008a366d49": 170, "285db3606f0e11ec99401e008a366d49": 170, "285dcc746f0e11ec99401e008a366d49": 170, "285dccce6f0e11ec99401e008a366d49": 170, "285dce0e6f0e11ec99401e008a366d49": 170, "285dce5e6f0e11ec99401e008a366d49": 170, "285db4fa6f0e11ec99401e008a366d49": 170, "285dcf946f0e11ec99401e008a366d49": 170, "285dcfda6f0e11ec99401e008a366d49": 170, "285dd1066f0e11ec99401e008a366d49": 170, "285dd16a6f0e11ec99401e008a366d49": 170, "285db55e6f0e11ec99401e008a366d49": 170, "shot": [170, 180], "095cd76a6f0f11ec82211e008a366d49": 170, "095cd8d26f0f11ec82211e008a366d49": 170, "095cd92c6f0f11ec82211e008a366d49": 170, "coo": 170, "matric": 170, "sp_emb": 170, "key1": 170, "tags__key1": 170, "5164d792709a11ec9ae71e008a366d49": 170, "5164d986709a11ec9ae71e008a366d49": 170, "5164d922709a11ec9ae71e008a366d49": 170, "006942970007385196": 170, "48303283924326845": 170, "3859268166910603": 170, "220446049250313e": 170, "quickli": [170, 172, 180], "my": [171, 174], "favorit": [171, 185], "ask": 171, "coin": 171, "exploit": 171, "routin": [171, 185], "a04633546e6211ec8ad31e008a366d49": 171, "af7923406e6211ecbc811e008a366d49": 171, "ellipsi": 171, "3m": 171, "excit": [171, 176], "834f14666e6511ec8e331e008a366d49": 171, "834f32846e6511ec8e331e008a366d49": 171, "4883468432": 171, "7e27fa246e6611ec9a441e008a366d49": 171, "7e27fb826e6611ec9a441e008a366d49": 171, "99851c7a6e6611ecba351e008a366d49": 171, "4874066256": 171, "No": [171, 176, 180, 186], "worri": [171, 183], "techniqu": [171, 178], "4513619088": 171, "remain": [171, 176], "earli": [171, 184], "path1": 171, "path2": 171, "path3": 171, "rout": 171, "mc": 171, "2f94c1426ee511ecbb491e008a366d49": 171, "2f94cd9a6ee511ecbb491e008a366d49": 171, "2f94cdfe6ee511ecbb491e008a366d49": 171, "2f94c4086ee511ecbb491e008a366d49": 171, "2f94c46c6ee511ecbb491e008a366d49": 171, "circl": 171, "intend": 171, "4912623312": 171, "4905929552": 171, "4913359824": 171, "deeper": 171, "flat": 171, "ye": [171, 178], "liter": 171, "anymor": 171, "b_da": 171, "4887691536": 171, "4887691600": 171, "4887691408": 171, "232": 171, "categori": 171, "rv": 171, "4869273936": 171, "4876081680": 171, "4876735056": 171, "spoiler": 171, "alert": 171, "4453362704": 172, "4446140816": 172, "4866772176": 172, "concaten": 172, "da3": 172, "5024988176": 172, "4525853328": 172, "4452802192": 172, "afterward": [172, 180], "surpris": 172, "authent": 172, "mention": [172, 182], "With": [172, 178, 183], "glob": 172, "da_jpg": 172, "da_png": 172, "da_al": 172, "astyp": [173, 177], "mlp": 173, "onnx": [173, 185, 186], "nn": 173, "linear": 173, "in_featur": 173, "out_featur": 173, "relu": 173, "preliminari": 173, "cli": 173, "rand": 173, "do_constant_fold": 173, "execut": 173, "constant": [173, 180, 185], "fold": 173, "input_nam": 173, "output_nam": 173, "dynamic_ax": 173, "ax": 173, "inferencesess": 173, "onnxruntim": 173, "0506": 173, "0015": 173, "1154": 173, "1630": 173, "2376": 173, "0576": 173, "4109": 173, "0052": 173, "0027": 173, "0800": 173, "0928": 173, "1326": 173, "2256": 173, "1649": 173, "0435": 173, "2312": 173, "0068": 173, "0991": 173, "0767": 173, "0501": 173, "1393": 173, "0965": 173, "2062": 173, "my_text_model": 173, "da_predict": 174, "da_groundtruth": 174, "imperfect": 174, "defaultdict": 174, "predict": 174, "fake": 174, "individu": 174, "recogn": 174, "p_da": 174, "g_da": 174, "42dc84b26fab11ecbc181e008a366d49": 174, "42dc98086fab11ecbc181e008a366d49": 174, "badli": 174, "mongodb": 175, "next": [175, 178, 183, 186], "prepar": 175, "21": 175, "uom": 175, "paper": 175, "planner": 175, "75": 175, "postcard": 175, "45": 175, "operator1": 175, "value1": 175, "dunder": 175, "tags__timestamp": 175, "substitut": 175, "curli": 175, "ne": 175, "gt": 175, "greater": [175, 187, 188], "gte": 175, "lt": 175, "lte": 175, "nin": 175, "regex": 175, "pprint": 175, "pretti": [175, 181, 184, 186], "92aee5d665d0c4dd34db10d83642ad": 175, "1a9d2139b02bc1c7842ecda94b347889": 175, "tags__h": 175, "4045a9659875fd1299e482d710753de3": 175, "cf7691c445220b94b88ff116911bad24": 175, "tags__w": 175, "44c6a4b18eaa005c6dbe15a28a32ebc": 175, "join": [175, 178], "claus": 175, "22985b71b6d483c31cbe507ed4d02bd1": 175, "a071faf19feac5809642e3afcd3a5878": 175, "411ecc70a71a3f00fc3259bf08c239d1": 175, "greatli": [176, 185, 186], "acceler": [176, 185, 186], "accpet": 177, "neightbour": 177, "one_million_doc": 177, "rh": 177, "lh": 177, "20000000298023224": 177, "5620499849319458": 177, "6763054132461548": 177, "allevi": 177, "oom": 177, "benchmark": [177, 180, 185], "1_000_000": 177, "768": 177, "timeit": 177, "18": 177, "dev": [177, 186], "1_000": 177, "97": 177, "inter": 178, "naiv": 178, "popular": 178, "charm": 178, "6000": 178, "6016": 178, "signific": 178, "tip": 178, "modif": 178, "happen": 178, "peopl": [178, 183, 185], "suggest": 178, "told": 178, "whatev": 178, "said": 178, "especi": [178, 184], "pipelin": 178, "1024": 178, "jump": 178, "whiteboard": 178, "144": 178, "anywai": 178, "awai": [178, 185], "rather": 178, "wait": 178, "btw": 178, "immedid": 178, "cv": 178, "inevit": 178, "domin": 178, "476": 178, "326": 178, "shed": 178, "light": 178, "Such": 178, "mindset": 178, "potenti": [178, 182], "gen": 178, "_head": 178, "_get_chunk": 178, "_batch": 178, "_to_stream_byt": 178, "num_doc_in_chunk": 178, "_tail": 178, "_get_cloud_api": 178, "v2": 178, "rpc": 178, "artifact": 178, "12345": [179, 183], "hi": 179, "alex": 179, "laptop": [179, 180], "coquitts7": 179, "wide": [179, 180], "netloc": 179, "websocket": [179, 183], "jinhub": 179, "55566": 179, "8081": 179, "porcess": 179, "explan": 179, "anytim": [180, 185, 186], "abil": 180, "a677577877b611eca3811e008a366d49": 180, "a67758f477b611eca3811e008a366d49": 180, "da_r": 180, "descrbi": 180, "ndocumentarrai": 180, "x03": 180, "cdocarrai": 180, "portabl": [180, 185], "insecur": 180, "2gb": 180, "bz2": 180, "lzma": 180, "zlib": 180, "jan": 180, "2022": 180, "interpret": 180, "argu": 180, "realist": 180, "unreal": 180, "rel": 180, "doc1_byt": 180, "doc2_byt": 180, "uint64": [180, 187, 188], "uint32": [180, 187, 188], "dock_byt": 180, "dock": 180, "da_rec": 180, "simplifi": [180, 186], "consumpt": [180, 185], "da_gener": 180, "xxxl": 180, "nut": 180, "d_str": 180, "bcjngebawhuaaad": 180, "iw": 180, "uqdpl9udnsfvomzb8m7skigrkntiyotqynzmwmzexzwnim2i1mwuwmdhhmzy2zdq5mgaep2findiahd9imtgyab0vnwuyab0fytiahh9myaadp2mzyzyahd9jodayab0fzdiaht9kmtzkaabqnjzkndkaaaaa": 180, "2571b8b66e4d11ec9f271e008a366d49": 180, "2571ba466e4d11ec9f271e008a366d49": 180, "ae55782a6e4d11ec803c1e008a366d49": 180, "ae557a146e4d11ec803c1e008a366d49": 180, "43cb93b26e4e11ec8b731e008a366d49": 180, "43cb95746e4e11ec8b731e008a366d49": 180, "heavylift": 180, "myda123": 180, "analyz": 180, "colleagu": 180, "4gb": 180, "unchang": 180, "familiar": [181, 185], "visualis": 181, "attach": 181, "stori": [182, 185], "although": [182, 185], "won": 182, "happi": 182, "main": 182, "brainfuck": 182, "isinst": 182, "web": 182, "fundament": [182, 185], "openapi": [182, 186], "ref": 182, "hint": [182, 186], "async": 182, "create_item": 182, "create_arrai": 182, "starlett": 182, "testclient": 182, "422": 182, "loc": 182, "msg": 182, "type_error": 182, "reject": 182, "imagin": 182, "meaningless": 182, "response_model": 182, "idonli": 182, "get_item_no_embed": 182, "065a5548756211ecaa8d1e008a366d49": 182, "declar": 182, "idandmatch": 182, "get_match": 182, "get_match_id_onli": 182, "unlimit": 182, "ef82e4f4756411ecb2c01e008a366d49": 182, "ef82e6d4756411ecb2c01e008a366d49": 182, "ef82e760756411ecb2c01e008a366d49": 182, "ef82e7ec756411ecb2c01e008a366d49": 182, "didn": 182, "degre": 182, "idmatch": 182, "response_model_exclude_non": 182, "clean": 182, "3da6383e756511ecb7cb1e008a366d49": 182, "3da63a14756511ecb7cb1e008a366d49": 182, "3da6392e756511ecb7cb1e008a366d49": 182, "3da63b72756511ecb7cb1e008a366d49": 182, "3da639ce756511ecb7cb1e008a366d49": 182, "3da63a5a756511ecb7cb1e008a366d49": 182, "3da63ae6756511ecb7cb1e008a366d49": 182, "3da63aa0756511ecb7cb1e008a366d49": 182, "3da63b2c756511ecb7cb1e008a366d49": 182, "3da63988756511ecb7cb1e008a366d49": 182, "focus": [183, 185], "journei": 183, "equip": 183, "independ": [183, 185], "termin": [183, 184], "preproc": 183, "slightli": 183, "myexecutor": 183, "staticmethod": 183, "26202": 183, "57050": 183, "privat": 183, "102": 183, "84": 183, "172": 183, "88": 183, "05": 183, "eta": 183, "80": 183, "show_progressbar": 183, "graphql": [183, 186], "throughput": 183, "mp0pe477": 183, "accomplish": 183, "littl": 183, "stage": 184, "demonstr": 184, "commnon": 184, "cell": 184, "richer": 184, "broken": 184, "emul": 184, "unstructur": [185, 186], "media": 185, "toolkit": 185, "jupyterlab": 185, "happili": 185, "maxim": 185, "de": 185, "filetyp": 185, "haven": 185, "unfair": 185, "dedic": 185, "vision": 185, "coupl": 185, "hf": 185, "temporarili": 185, "resid": 185, "oppos": 185, "physic": 185, "static": 185, "occasion": 185, "precompil": 185, "contigu": 185, "particl": 185, "crunch": 185, "domain": 185, "awkward": 185, "ak": 185, "toytim": 185, "timecontext": 185, "100_000": 185, "ak_arrai": 185, "from_it": 185, "004": 185, "031": 185, "ago": 185, "perspect": 185, "numer": 185, "throw": 185, "boost": 185, "usabl": 185, "futur": 185, "comparison": [185, 186], "100k": 185, "repetit": 185, "revis": 185, "realiz": 185, "due": 185, "deliber": 185, "guarante": 185, "constraint": 185, "trigger": 185, "powerhous": 186, "exact": 186, "versatil": 186, "reliabl": 186, "pycharm": 186, "altern": 186, "latest": 186, "linux": 186, "conda": 186, "forg": 186, "seral": 186, "uvicorn": 186, "demand": 186, "reproduc": 186, "__version__": 186, "ship": 186, "vf": 186, "bootcamp": 186, "discuss": 186, "slack": 186, "chat": 186, "member": 186, "tuesdai": 186, "month": 186, "zoom": 186, "calendar": 186, "ical": 186, "youtub": 186, "subscrib": 186, "apach": 186, "hire": 186, "quantiz": [187, 188], "cls_name": [187, 188], "suppli": [187, 188], "java": [187, 188], "int32": [187, 188], "sint32": [187, 188], "bignum": [187, 188], "fixnum": [187, 188], "sint64": [187, 188], "uint": [187, 188], "ulong": [187, 188], "sign": [187, 188], "fixed32": [187, 188], "28": [187, 188], "fixed64": [187, 188], "eight": [187, 188], "56": [187, 188], "sfixed32": [187, 188], "sfixed64": [187, 188], "trueclass": [187, 188], "falseclass": [187, 188], "unicod": [187, 188], "bytestr": [187, 188], "8bit": [187, 188], "cd": 188, "pwd": 188, "jinaai": 188, "protogen": 188}, "objects": {"": [[10, 0, 0, "-", "docarray"]], "docarray": [[11, 0, 0, "-", "array"], [96, 0, 0, "-", "base"], [97, 0, 0, "-", "dataclasses"], [101, 0, 0, "-", "document"], [128, 0, 0, "-", "helper"], [129, 0, 0, "-", "math"], [138, 0, 0, "-", "proto"], [142, 0, 0, "-", "score"], [147, 0, 0, "-", "typing"]], "docarray.array": [[12, 0, 0, "-", "annlite"], [13, 0, 0, "-", "base"], [14, 0, 0, "-", "chunk"], [15, 0, 0, "-", "document"], [16, 0, 0, "-", "elastic"], [17, 0, 0, "-", "match"], [18, 0, 0, "-", "memory"], [19, 0, 0, "-", "mixins"], [51, 0, 0, "-", "qdrant"], [52, 0, 0, "-", "queryset"], [55, 0, 0, "-", "sqlite"], [56, 0, 0, "-", "storage"], [95, 0, 0, "-", "weaviate"]], "docarray.array.annlite": [[12, 1, 1, "", "AnnliteConfig"], [12, 1, 1, "", "DocumentArrayAnnlite"]], "docarray.array.annlite.AnnliteConfig": [[12, 2, 1, "", "data_path"], [12, 2, 1, "", "ef_construction"], [12, 2, 1, "", "ef_search"], [12, 2, 1, "", "max_connection"], [12, 2, 1, "", "metric"], [12, 2, 1, "", "n_dim"], [12, 2, 1, "", "serialize_config"]], "docarray.array.base": [[13, 1, 1, "", "BaseDocumentArray"]], "docarray.array.chunk": [[14, 1, 1, "", "ChunkArray"]], "docarray.array.chunk.ChunkArray": [[14, 3, 1, "", "adjacency"], [14, 4, 1, "", "append"], [14, 3, 1, "", "granularity"], [14, 3, 1, "", "reference_doc"]], "docarray.array.document": [[15, 1, 1, "", "DocumentArray"]], "docarray.array.elastic": [[16, 1, 1, "", "DocumentArrayElastic"], [16, 1, 1, "", "ElasticConfig"]], "docarray.array.elastic.ElasticConfig": [[16, 2, 1, "", "batch_size"], [16, 2, 1, "", "distance"], [16, 2, 1, "", "ef_construction"], [16, 2, 1, "", "es_config"], [16, 2, 1, "", "hosts"], [16, 2, 1, "", "index_name"], [16, 2, 1, "", "index_text"], [16, 2, 1, "", "m"], [16, 2, 1, "", "n_dim"], [16, 2, 1, "", "tag_indices"]], "docarray.array.match": [[17, 1, 1, "", "MatchArray"]], "docarray.array.match.MatchArray": [[17, 3, 1, "", "adjacency"], [17, 4, 1, "", "append"], [17, 3, 1, "", "granularity"], [17, 3, 1, "", "reference_doc"]], "docarray.array.memory": [[18, 1, 1, "", "DocumentArrayInMemory"]], "docarray.array.mixins": [[19, 1, 1, "", "AllMixins"], [20, 0, 0, "-", "content"], [21, 0, 0, "-", "dataloader"], [23, 0, 0, "-", "delitem"], [24, 0, 0, "-", "embed"], [25, 0, 0, "-", "empty"], [26, 0, 0, "-", "evaluation"], [27, 0, 0, "-", "find"], [28, 0, 0, "-", "getattr"], [29, 0, 0, "-", "getitem"], [30, 0, 0, "-", "group"], [31, 0, 0, "-", "io"], [40, 0, 0, "-", "match"], [41, 0, 0, "-", "parallel"], [42, 0, 0, "-", "plot"], [43, 0, 0, "-", "post"], [44, 0, 0, "-", "pydantic"], [45, 0, 0, "-", "reduce"], [46, 0, 0, "-", "sample"], [47, 0, 0, "-", "setitem"], [48, 0, 0, "-", "strawberry"], [49, 0, 0, "-", "text"], [50, 0, 0, "-", "traverse"]], "docarray.array.mixins.content": [[20, 1, 1, "", "ContentPropertyMixin"]], "docarray.array.mixins.content.ContentPropertyMixin": [[20, 3, 1, "", "blobs"], [20, 3, 1, "", "contents"], [20, 3, 1, "", "embeddings"], [20, 3, 1, "", "tensors"], [20, 3, 1, "", "texts"]], "docarray.array.mixins.dataloader": [[21, 1, 1, "", "DataLoaderMixin"], [22, 0, 0, "-", "helper"]], "docarray.array.mixins.dataloader.DataLoaderMixin": [[21, 4, 1, "", "dataloader"]], "docarray.array.mixins.dataloader.helper": [[22, 1, 1, "", "DocumentArrayLoader"]], "docarray.array.mixins.delitem": [[23, 1, 1, "", "DelItemMixin"]], "docarray.array.mixins.embed": [[24, 1, 1, "", "EmbedMixin"], [24, 5, 1, "", "get_framework"]], "docarray.array.mixins.embed.EmbedMixin": [[24, 4, 1, "", "embed"]], "docarray.array.mixins.empty": [[25, 1, 1, "", "EmptyMixin"]], "docarray.array.mixins.empty.EmptyMixin": [[25, 4, 1, "", "empty"]], "docarray.array.mixins.evaluation": [[26, 1, 1, "", "EvaluationMixin"]], "docarray.array.mixins.evaluation.EvaluationMixin": [[26, 4, 1, "", "evaluate"]], "docarray.array.mixins.find": [[27, 1, 1, "", "FindMixin"]], "docarray.array.mixins.find.FindMixin": [[27, 4, 1, "", "find"]], "docarray.array.mixins.getattr": [[28, 1, 1, "", "GetAttributeMixin"]], "docarray.array.mixins.getitem": [[29, 1, 1, "", "GetItemMixin"]], "docarray.array.mixins.group": [[30, 1, 1, "", "GroupMixin"]], "docarray.array.mixins.group.GroupMixin": [[30, 4, 1, "", "batch"], [30, 4, 1, "", "batch_ids"], [30, 4, 1, "", "split_by_tag"]], "docarray.array.mixins.io": [[32, 0, 0, "-", "binary"], [33, 0, 0, "-", "common"], [34, 0, 0, "-", "csv"], [35, 0, 0, "-", "dataframe"], [36, 0, 0, "-", "from_gen"], [37, 0, 0, "-", "json"], [38, 0, 0, "-", "pbar"], [39, 0, 0, "-", "pushpull"]], "docarray.array.mixins.io.binary": [[32, 1, 1, "", "BinaryIOMixin"], [32, 1, 1, "", "LazyRequestReader"]], "docarray.array.mixins.io.binary.BinaryIOMixin": [[32, 4, 1, "", "from_base64"], [32, 4, 1, "", "from_bytes"], [32, 4, 1, "", "from_protobuf"], [32, 4, 1, "", "load_binary"], [32, 4, 1, "", "save_binary"], [32, 4, 1, "", "to_base64"], [32, 4, 1, "", "to_bytes"], [32, 4, 1, "", "to_protobuf"]], "docarray.array.mixins.io.common": [[33, 1, 1, "", "CommonIOMixin"]], "docarray.array.mixins.io.common.CommonIOMixin": [[33, 4, 1, "", "load"], [33, 4, 1, "", "save"]], "docarray.array.mixins.io.csv": [[34, 1, 1, "", "CsvIOMixin"]], "docarray.array.mixins.io.csv.CsvIOMixin": [[34, 4, 1, "", "load_csv"], [34, 4, 1, "", "save_csv"], [34, 4, 1, "", "save_embeddings_csv"]], "docarray.array.mixins.io.dataframe": [[35, 1, 1, "", "DataframeIOMixin"]], "docarray.array.mixins.io.dataframe.DataframeIOMixin": [[35, 4, 1, "", "from_dataframe"], [35, 4, 1, "", "to_dataframe"]], "docarray.array.mixins.io.from_gen": [[36, 1, 1, "", "FromGeneratorMixin"]], "docarray.array.mixins.io.from_gen.FromGeneratorMixin": [[36, 4, 1, "", "from_csv"], [36, 4, 1, "", "from_files"], [36, 4, 1, "", "from_huggingface_datasets"], [36, 4, 1, "", "from_lines"], [36, 4, 1, "", "from_ndarray"], [36, 4, 1, "", "from_ndjson"]], "docarray.array.mixins.io.json": [[37, 1, 1, "", "JsonIOMixin"]], "docarray.array.mixins.io.json.JsonIOMixin": [[37, 4, 1, "", "from_dict"], [37, 4, 1, "", "from_json"], [37, 4, 1, "", "from_list"], [37, 4, 1, "", "load_json"], [37, 4, 1, "", "save_json"], [37, 4, 1, "", "to_dict"], [37, 4, 1, "", "to_json"], [37, 4, 1, "", "to_list"]], "docarray.array.mixins.io.pbar": [[38, 1, 1, "", "QPSColumn"], [38, 5, 1, "", "get_pbar"], [38, 5, 1, "", "get_progressbar"]], "docarray.array.mixins.io.pbar.QPSColumn": [[38, 4, 1, "", "render"]], "docarray.array.mixins.io.pushpull": [[39, 1, 1, "", "PushPullMixin"]], "docarray.array.mixins.io.pushpull.PushPullMixin": [[39, 4, 1, "", "pull"], [39, 4, 1, "", "push"]], "docarray.array.mixins.match": [[40, 1, 1, "", "MatchMixin"]], "docarray.array.mixins.match.MatchMixin": [[40, 4, 1, "", "match"]], "docarray.array.mixins.parallel": [[41, 1, 1, "", "ParallelMixin"]], "docarray.array.mixins.parallel.ParallelMixin": [[41, 4, 1, "", "apply"], [41, 4, 1, "", "apply_batch"], [41, 4, 1, "", "map"], [41, 4, 1, "", "map_batch"]], "docarray.array.mixins.plot": [[42, 1, 1, "", "PlotMixin"]], "docarray.array.mixins.plot.PlotMixin": [[42, 4, 1, "", "plot_embeddings"], [42, 4, 1, "", "plot_image_sprites"], [42, 4, 1, "", "summary"]], "docarray.array.mixins.post": [[43, 1, 1, "", "PostMixin"]], "docarray.array.mixins.post.PostMixin": [[43, 4, 1, "", "post"]], "docarray.array.mixins.pydantic": [[44, 1, 1, "", "PydanticMixin"]], "docarray.array.mixins.pydantic.PydanticMixin": [[44, 4, 1, "", "from_pydantic_model"], [44, 4, 1, "", "get_json_schema"], [44, 4, 1, "", "to_pydantic_model"]], "docarray.array.mixins.reduce": [[45, 1, 1, "", "ReduceMixin"]], "docarray.array.mixins.reduce.ReduceMixin": [[45, 4, 1, "", "reduce"], [45, 4, 1, "", "reduce_all"]], "docarray.array.mixins.sample": [[46, 1, 1, "", "SampleMixin"]], "docarray.array.mixins.sample.SampleMixin": [[46, 4, 1, "", "sample"], [46, 4, 1, "", "shuffle"]], "docarray.array.mixins.setitem": [[47, 1, 1, "", "SetItemMixin"]], "docarray.array.mixins.strawberry": [[48, 1, 1, "", "StrawberryMixin"]], "docarray.array.mixins.strawberry.StrawberryMixin": [[48, 4, 1, "", "from_strawberry_type"], [48, 4, 1, "", "to_strawberry_type"]], "docarray.array.mixins.text": [[49, 1, 1, "", "TextToolsMixin"]], "docarray.array.mixins.text.TextToolsMixin": [[49, 4, 1, "", "get_vocabulary"]], "docarray.array.mixins.traverse": [[50, 1, 1, "", "TraverseMixin"]], "docarray.array.mixins.traverse.TraverseMixin": [[50, 4, 1, "", "flatten"], [50, 4, 1, "", "traverse"], [50, 4, 1, "", "traverse_flat"], [50, 4, 1, "", "traverse_flat_per_path"]], "docarray.array.qdrant": [[51, 1, 1, "", "DocumentArrayQdrant"], [51, 1, 1, "", "QdrantConfig"]], "docarray.array.qdrant.QdrantConfig": [[51, 2, 1, "", "collection_name"], [51, 2, 1, "", "distance"], [51, 2, 1, "", "ef_construct"], [51, 2, 1, "", "full_scan_threshold"], [51, 2, 1, "", "host"], [51, 2, 1, "", "m"], [51, 2, 1, "", "n_dim"], [51, 2, 1, "", "port"], [51, 2, 1, "", "scroll_batch_size"], [51, 2, 1, "", "serialize_config"]], "docarray.array.queryset": [[53, 0, 0, "-", "lookup"], [54, 0, 0, "-", "parser"]], "docarray.array.queryset.lookup": [[53, 1, 1, "", "LookupLeaf"], [53, 1, 1, "", "LookupNode"], [53, 1, 1, "", "LookupTreeElem"], [53, 6, 1, "", "LookupyError"], [53, 2, 1, "", "Q"], [53, 5, 1, "", "dunder_partition"], [53, 5, 1, "", "guard_Q"], [53, 5, 1, "", "guard_iter"], [53, 5, 1, "", "guard_list"], [53, 5, 1, "", "guard_str"], [53, 5, 1, "", "guard_type"], [53, 5, 1, "", "iff"], [53, 5, 1, "", "iff_not_none"], [53, 5, 1, "", "lookup"]], "docarray.array.queryset.lookup.LookupLeaf": [[53, 4, 1, "", "evaluate"]], "docarray.array.queryset.lookup.LookupNode": [[53, 4, 1, "", "add_child"], [53, 4, 1, "", "evaluate"]], "docarray.array.queryset.lookup.LookupTreeElem": [[53, 4, 1, "", "evaluate"]], "docarray.array.queryset.parser": [[54, 1, 1, "", "QueryParser"]], "docarray.array.queryset.parser.QueryParser": [[54, 4, 1, "", "evaluate"]], "docarray.array.sqlite": [[55, 1, 1, "", "DocumentArraySqlite"], [55, 1, 1, "", "SqliteConfig"]], "docarray.array.sqlite.SqliteConfig": [[55, 2, 1, "", "conn_config"], [55, 2, 1, "", "connection"], [55, 2, 1, "", "journal_mode"], [55, 2, 1, "", "serialize_config"], [55, 2, 1, "", "synchronous"], [55, 2, 1, "", "table_name"]], "docarray.array.storage": [[57, 0, 0, "-", "annlite"], [63, 0, 0, "-", "base"], [68, 0, 0, "-", "elastic"], [73, 0, 0, "-", "memory"], [78, 0, 0, "-", "qdrant"], [84, 0, 0, "-", "registry"], [85, 0, 0, "-", "sqlite"], [90, 0, 0, "-", "weaviate"]], "docarray.array.storage.annlite": [[57, 1, 1, "", "AnnliteConfig"], [57, 1, 1, "", "StorageMixins"], [58, 0, 0, "-", "backend"], [59, 0, 0, "-", "find"], [60, 0, 0, "-", "getsetdel"], [61, 0, 0, "-", "helper"], [62, 0, 0, "-", "seqlike"]], "docarray.array.storage.annlite.AnnliteConfig": [[57, 2, 1, "", "data_path"], [57, 2, 1, "", "ef_construction"], [57, 2, 1, "", "ef_search"], [57, 2, 1, "", "max_connection"], [57, 2, 1, "", "metric"], [57, 2, 1, "", "n_dim"], [57, 2, 1, "", "serialize_config"]], "docarray.array.storage.annlite.backend": [[58, 1, 1, "", "AnnliteConfig"], [58, 1, 1, "", "BackendMixin"]], "docarray.array.storage.annlite.backend.AnnliteConfig": [[58, 2, 1, "", "data_path"], [58, 2, 1, "", "ef_construction"], [58, 2, 1, "", "ef_search"], [58, 2, 1, "", "max_connection"], [58, 2, 1, "", "metric"], [58, 2, 1, "", "n_dim"], [58, 2, 1, "", "serialize_config"]], "docarray.array.storage.annlite.find": [[59, 1, 1, "", "FindMixin"]], "docarray.array.storage.annlite.getsetdel": [[60, 1, 1, "", "GetSetDelMixin"]], "docarray.array.storage.annlite.helper": [[61, 1, 1, "", "OffsetMapping"]], "docarray.array.storage.annlite.helper.OffsetMapping": [[61, 4, 1, "", "clear"], [61, 4, 1, "", "close"], [61, 4, 1, "", "create_table"], [61, 4, 1, "", "del_at_offset"], [61, 4, 1, "", "del_at_offsets"], [61, 4, 1, "", "drop"], [61, 4, 1, "", "extend_doc_ids"], [61, 4, 1, "", "get_all_ids"], [61, 4, 1, "", "get_id_by_offset"], [61, 4, 1, "", "get_ids_by_offsets"], [61, 4, 1, "", "get_offset_by_id"], [61, 4, 1, "", "get_offsets_by_ids"], [61, 4, 1, "", "insert_at_offset"], [61, 4, 1, "", "set_at_offset"], [61, 4, 1, "", "shift_offset"], [61, 3, 1, "", "size"]], "docarray.array.storage.annlite.seqlike": [[62, 1, 1, "", "SequenceLikeMixin"]], "docarray.array.storage.annlite.seqlike.SequenceLikeMixin": [[62, 4, 1, "", "extend"]], "docarray.array.storage.base": [[64, 0, 0, "-", "backend"], [65, 0, 0, "-", "getsetdel"], [66, 0, 0, "-", "helper"], [67, 0, 0, "-", "seqlike"]], "docarray.array.storage.base.backend": [[64, 1, 1, "", "BaseBackendMixin"]], "docarray.array.storage.base.getsetdel": [[65, 1, 1, "", "BaseGetSetDelMixin"]], "docarray.array.storage.base.helper": [[66, 1, 1, "", "Offset2ID"]], "docarray.array.storage.base.helper.Offset2ID": [[66, 4, 1, "", "append"], [66, 4, 1, "", "clear"], [66, 4, 1, "", "delete_by_id"], [66, 4, 1, "", "delete_by_ids"], [66, 4, 1, "", "delete_by_offset"], [66, 4, 1, "", "extend"], [66, 4, 1, "", "get_id"], [66, 4, 1, "", "index"], [66, 4, 1, "", "insert"], [66, 4, 1, "", "load"], [66, 4, 1, "", "save"], [66, 4, 1, "", "update"], [66, 4, 1, "", "update_ids"]], "docarray.array.storage.base.seqlike": [[67, 1, 1, "", "BaseSequenceLikeMixin"]], "docarray.array.storage.base.seqlike.BaseSequenceLikeMixin": [[67, 4, 1, "", "append"], [67, 4, 1, "", "clear"], [67, 4, 1, "", "extend"], [67, 4, 1, "", "insert"]], "docarray.array.storage.elastic": [[68, 1, 1, "", "ElasticConfig"], [68, 1, 1, "", "StorageMixins"], [69, 0, 0, "-", "backend"], [70, 0, 0, "-", "find"], [71, 0, 0, "-", "getsetdel"], [72, 0, 0, "-", "seqlike"]], "docarray.array.storage.elastic.ElasticConfig": [[68, 2, 1, "", "batch_size"], [68, 2, 1, "", "distance"], [68, 2, 1, "", "ef_construction"], [68, 2, 1, "", "es_config"], [68, 2, 1, "", "hosts"], [68, 2, 1, "", "index_name"], [68, 2, 1, "", "index_text"], [68, 2, 1, "", "m"], [68, 2, 1, "", "n_dim"], [68, 2, 1, "", "tag_indices"]], "docarray.array.storage.elastic.backend": [[69, 1, 1, "", "BackendMixin"], [69, 1, 1, "", "ElasticConfig"]], "docarray.array.storage.elastic.backend.ElasticConfig": [[69, 2, 1, "", "batch_size"], [69, 2, 1, "", "distance"], [69, 2, 1, "", "ef_construction"], [69, 2, 1, "", "es_config"], [69, 2, 1, "", "hosts"], [69, 2, 1, "", "index_name"], [69, 2, 1, "", "index_text"], [69, 2, 1, "", "m"], [69, 2, 1, "", "n_dim"], [69, 2, 1, "", "tag_indices"]], "docarray.array.storage.elastic.find": [[70, 1, 1, "", "FindMixin"]], "docarray.array.storage.elastic.getsetdel": [[71, 1, 1, "", "GetSetDelMixin"]], "docarray.array.storage.elastic.seqlike": [[72, 1, 1, "", "SequenceLikeMixin"]], "docarray.array.storage.elastic.seqlike.SequenceLikeMixin": [[72, 4, 1, "", "extend"]], "docarray.array.storage.memory": [[73, 1, 1, "", "StorageMixins"], [74, 0, 0, "-", "backend"], [75, 0, 0, "-", "find"], [76, 0, 0, "-", "getsetdel"], [77, 0, 0, "-", "seqlike"]], "docarray.array.storage.memory.backend": [[74, 1, 1, "", "BackendMixin"], [74, 5, 1, "", "needs_id2offset_rebuild"]], "docarray.array.storage.memory.find": [[75, 1, 1, "", "FindMixin"]], "docarray.array.storage.memory.getsetdel": [[76, 1, 1, "", "GetSetDelMixin"]], "docarray.array.storage.memory.seqlike": [[77, 1, 1, "", "SequenceLikeMixin"]], "docarray.array.storage.memory.seqlike.SequenceLikeMixin": [[77, 4, 1, "", "append"], [77, 4, 1, "", "extend"], [77, 4, 1, "", "insert"]], "docarray.array.storage.qdrant": [[78, 1, 1, "", "QdrantConfig"], [78, 1, 1, "", "StorageMixins"], [79, 0, 0, "-", "backend"], [80, 0, 0, "-", "find"], [81, 0, 0, "-", "getsetdel"], [82, 0, 0, "-", "helper"], [83, 0, 0, "-", "seqlike"]], "docarray.array.storage.qdrant.QdrantConfig": [[78, 2, 1, "", "collection_name"], [78, 2, 1, "", "distance"], [78, 2, 1, "", "ef_construct"], [78, 2, 1, "", "full_scan_threshold"], [78, 2, 1, "", "host"], [78, 2, 1, "", "m"], [78, 2, 1, "", "n_dim"], [78, 2, 1, "", "port"], [78, 2, 1, "", "scroll_batch_size"], [78, 2, 1, "", "serialize_config"]], "docarray.array.storage.qdrant.StorageMixins": [[78, 3, 1, "", "client"], [78, 3, 1, "", "collection_name"], [78, 3, 1, "", "collection_name_meta"], [78, 3, 1, "", "config"], [78, 3, 1, "", "distance"], [78, 3, 1, "", "n_dim"], [78, 3, 1, "", "scroll_batch_size"], [78, 3, 1, "", "serialization_config"], [78, 3, 1, "", "serialize_config"]], "docarray.array.storage.qdrant.backend": [[79, 1, 1, "", "BackendMixin"], [79, 1, 1, "", "QdrantConfig"]], "docarray.array.storage.qdrant.backend.QdrantConfig": [[79, 2, 1, "", "collection_name"], [79, 2, 1, "", "distance"], [79, 2, 1, "", "ef_construct"], [79, 2, 1, "", "full_scan_threshold"], [79, 2, 1, "", "host"], [79, 2, 1, "", "m"], [79, 2, 1, "", "n_dim"], [79, 2, 1, "", "port"], [79, 2, 1, "", "scroll_batch_size"], [79, 2, 1, "", "serialize_config"]], "docarray.array.storage.qdrant.find": [[80, 1, 1, "", "FindMixin"]], "docarray.array.storage.qdrant.find.FindMixin": [[80, 3, 1, "", "client"], [80, 3, 1, "", "collection_name"], [80, 3, 1, "", "distance"], [80, 3, 1, "", "serialize_config"]], "docarray.array.storage.qdrant.getsetdel": [[81, 1, 1, "", "GetSetDelMixin"]], "docarray.array.storage.qdrant.getsetdel.GetSetDelMixin": [[81, 3, 1, "", "client"], [81, 3, 1, "", "collection_name"], [81, 3, 1, "", "n_dim"], [81, 4, 1, "", "scan"], [81, 3, 1, "", "scroll_batch_size"], [81, 3, 1, "", "serialization_config"]], "docarray.array.storage.qdrant.seqlike": [[83, 1, 1, "", "SequenceLikeMixin"]], "docarray.array.storage.qdrant.seqlike.SequenceLikeMixin": [[83, 3, 1, "", "client"], [83, 3, 1, "", "collection_name"], [83, 3, 1, "", "config"], [83, 4, 1, "", "extend"]], "docarray.array.storage.sqlite": [[85, 1, 1, "", "SqliteConfig"], [85, 1, 1, "", "StorageMixins"], [86, 0, 0, "-", "backend"], [87, 0, 0, "-", "getsetdel"], [88, 0, 0, "-", "helper"], [89, 0, 0, "-", "seqlike"]], "docarray.array.storage.sqlite.SqliteConfig": [[85, 2, 1, "", "conn_config"], [85, 2, 1, "", "connection"], [85, 2, 1, "", "journal_mode"], [85, 2, 1, "", "serialize_config"], [85, 2, 1, "", "synchronous"], [85, 2, 1, "", "table_name"]], "docarray.array.storage.sqlite.backend": [[86, 1, 1, "", "BackendMixin"], [86, 1, 1, "", "SqliteConfig"]], "docarray.array.storage.sqlite.backend.BackendMixin": [[86, 2, 1, "", "schema_version"]], "docarray.array.storage.sqlite.backend.SqliteConfig": [[86, 2, 1, "", "conn_config"], [86, 2, 1, "", "connection"], [86, 2, 1, "", "journal_mode"], [86, 2, 1, "", "serialize_config"], [86, 2, 1, "", "synchronous"], [86, 2, 1, "", "table_name"]], "docarray.array.storage.sqlite.getsetdel": [[87, 1, 1, "", "GetSetDelMixin"]], "docarray.array.storage.sqlite.helper": [[88, 5, 1, "", "initialize_table"]], "docarray.array.storage.sqlite.seqlike": [[89, 1, 1, "", "SequenceLikeMixin"]], "docarray.array.storage.sqlite.seqlike.SequenceLikeMixin": [[89, 4, 1, "", "append"], [89, 4, 1, "", "insert"]], "docarray.array.storage.weaviate": [[90, 1, 1, "", "StorageMixins"], [90, 1, 1, "", "WeaviateConfig"], [91, 0, 0, "-", "backend"], [92, 0, 0, "-", "find"], [93, 0, 0, "-", "getsetdel"], [94, 0, 0, "-", "seqlike"]], "docarray.array.storage.weaviate.WeaviateConfig": [[90, 2, 1, "", "ef"], [90, 2, 1, "", "ef_construction"], [90, 2, 1, "", "host"], [90, 2, 1, "", "max_connections"], [90, 2, 1, "", "n_dim"], [90, 2, 1, "", "name"], [90, 2, 1, "", "port"], [90, 2, 1, "", "protocol"], [90, 2, 1, "", "serialize_config"], [90, 2, 1, "", "timeout_config"]], "docarray.array.storage.weaviate.backend": [[91, 1, 1, "", "BackendMixin"], [91, 1, 1, "", "WeaviateConfig"]], "docarray.array.storage.weaviate.backend.BackendMixin": [[91, 3, 1, "", "name"]], "docarray.array.storage.weaviate.backend.WeaviateConfig": [[91, 2, 1, "", "ef"], [91, 2, 1, "", "ef_construction"], [91, 2, 1, "", "host"], [91, 2, 1, "", "max_connections"], [91, 2, 1, "", "n_dim"], [91, 2, 1, "", "name"], [91, 2, 1, "", "port"], [91, 2, 1, "", "protocol"], [91, 2, 1, "", "serialize_config"], [91, 2, 1, "", "timeout_config"]], "docarray.array.storage.weaviate.find": [[92, 1, 1, "", "FindMixin"]], "docarray.array.storage.weaviate.getsetdel": [[93, 1, 1, "", "GetSetDelMixin"]], "docarray.array.storage.weaviate.seqlike": [[94, 1, 1, "", "SequenceLikeMixin"]], "docarray.array.storage.weaviate.seqlike.SequenceLikeMixin": [[94, 4, 1, "", "extend"]], "docarray.array.weaviate": [[95, 1, 1, "", "DocumentArrayWeaviate"], [95, 1, 1, "", "WeaviateConfig"]], "docarray.array.weaviate.WeaviateConfig": [[95, 2, 1, "", "ef"], [95, 2, 1, "", "ef_construction"], [95, 2, 1, "", "host"], [95, 2, 1, "", "max_connections"], [95, 2, 1, "", "n_dim"], [95, 2, 1, "", "name"], [95, 2, 1, "", "port"], [95, 2, 1, "", "protocol"], [95, 2, 1, "", "serialize_config"], [95, 2, 1, "", "timeout_config"]], "docarray.base": [[96, 1, 1, "", "BaseDCType"]], "docarray.base.BaseDCType": [[96, 4, 1, "", "clear"], [96, 4, 1, "", "copy_from"], [96, 3, 1, "", "nbytes"], [96, 3, 1, "", "non_empty_fields"], [96, 4, 1, "", "pop"]], "docarray.dataclasses": [[98, 0, 0, "-", "getter"], [99, 0, 0, "-", "setter"], [100, 0, 0, "-", "types"]], "docarray.dataclasses.getter": [[98, 5, 1, "", "audio_getter"], [98, 5, 1, "", "blob_getter"], [98, 5, 1, "", "image_getter"], [98, 5, 1, "", "json_getter"], [98, 5, 1, "", "mesh_getter"], [98, 5, 1, "", "tabular_getter"], [98, 5, 1, "", "text_getter"], [98, 5, 1, "", "video_getter"]], "docarray.dataclasses.setter": [[99, 5, 1, "", "audio_setter"], [99, 5, 1, "", "blob_setter"], [99, 5, 1, "", "image_setter"], [99, 5, 1, "", "json_setter"], [99, 5, 1, "", "mesh_setter"], [99, 5, 1, "", "tabular_setter"], [99, 5, 1, "", "text_setter"], [99, 5, 1, "", "video_setter"]], "docarray.dataclasses.types": [[100, 5, 1, "", "dataclass"], [100, 5, 1, "", "field"], [100, 5, 1, "", "is_multimodal"]], "docarray.document": [[101, 1, 1, "", "Document"], [102, 0, 0, "-", "data"], [103, 0, 0, "-", "generators"], [104, 0, 0, "-", "mixins"], [126, 0, 0, "-", "pydantic_model"]], "docarray.document.data": [[102, 1, 1, "", "DocumentData"]], "docarray.document.data.DocumentData": [[102, 2, 1, "", "adjacency"], [102, 2, 1, "", "blob"], [102, 2, 1, "", "chunks"], [102, 2, 1, "", "content"], [102, 2, 1, "", "embedding"], [102, 2, 1, "", "evaluations"], [102, 2, 1, "", "granularity"], [102, 2, 1, "", "id"], [102, 2, 1, "", "location"], [102, 2, 1, "", "matches"], [102, 2, 1, "", "mime_type"], [102, 2, 1, "", "modality"], [102, 2, 1, "", "offset"], [102, 2, 1, "", "parent_id"], [102, 2, 1, "", "scores"], [102, 2, 1, "", "tags"], [102, 2, 1, "", "tensor"], [102, 2, 1, "", "text"], [102, 2, 1, "", "uri"], [102, 2, 1, "", "weight"]], "docarray.document.generators": [[103, 5, 1, "", "from_csv"], [103, 5, 1, "", "from_files"], [103, 5, 1, "", "from_huggingface_datasets"], [103, 5, 1, "", "from_lines"], [103, 5, 1, "", "from_ndarray"], [103, 5, 1, "", "from_ndjson"]], "docarray.document.mixins": [[104, 1, 1, "", "AllMixins"], [105, 0, 0, "-", "attribute"], [106, 0, 0, "-", "audio"], [107, 0, 0, "-", "blob"], [108, 0, 0, "-", "content"], [109, 0, 0, "-", "convert"], [110, 0, 0, "-", "dump"], [111, 0, 0, "-", "featurehash"], [112, 0, 0, "-", "helper"], [113, 0, 0, "-", "image"], [114, 0, 0, "-", "mesh"], [115, 0, 0, "-", "multimodal"], [116, 0, 0, "-", "plot"], [117, 0, 0, "-", "porting"], [118, 0, 0, "-", "property"], [119, 0, 0, "-", "protobuf"], [120, 0, 0, "-", "pydantic"], [121, 0, 0, "-", "rich_embedding"], [122, 0, 0, "-", "strawberry"], [123, 0, 0, "-", "sugar"], [124, 0, 0, "-", "text"], [125, 0, 0, "-", "video"]], "docarray.document.mixins.attribute": [[105, 1, 1, "", "GetAttributesMixin"]], "docarray.document.mixins.audio": [[106, 1, 1, "", "AudioDataMixin"]], "docarray.document.mixins.audio.AudioDataMixin": [[106, 4, 1, "", "load_uri_to_audio_tensor"], [106, 4, 1, "", "save_audio_tensor_to_file"]], "docarray.document.mixins.blob": [[107, 1, 1, "", "BlobDataMixin"]], "docarray.document.mixins.blob.BlobDataMixin": [[107, 4, 1, "", "convert_blob_to_datauri"], [107, 4, 1, "", "load_uri_to_blob"], [107, 4, 1, "", "save_blob_to_file"]], "docarray.document.mixins.content": [[108, 1, 1, "", "ContentPropertyMixin"]], "docarray.document.mixins.content.ContentPropertyMixin": [[108, 3, 1, "", "content_hash"], [108, 4, 1, "", "convert_content_to_datauri"]], "docarray.document.mixins.convert": [[109, 1, 1, "", "ConvertMixin"]], "docarray.document.mixins.convert.ConvertMixin": [[109, 4, 1, "", "convert_blob_to_tensor"], [109, 4, 1, "", "convert_tensor_to_blob"], [109, 4, 1, "", "convert_uri_to_datauri"]], "docarray.document.mixins.dump": [[110, 1, 1, "", "UriFileMixin"]], "docarray.document.mixins.dump.UriFileMixin": [[110, 4, 1, "", "save_uri_to_file"]], "docarray.document.mixins.featurehash": [[111, 1, 1, "", "FeatureHashMixin"]], "docarray.document.mixins.featurehash.FeatureHashMixin": [[111, 4, 1, "", "embed_feature_hashing"]], "docarray.document.mixins.image": [[113, 1, 1, "", "ImageDataMixin"]], "docarray.document.mixins.image.ImageDataMixin": [[113, 4, 1, "", "convert_blob_to_image_tensor"], [113, 4, 1, "", "convert_image_tensor_to_blob"], [113, 4, 1, "", "convert_image_tensor_to_sliding_windows"], [113, 4, 1, "", "convert_image_tensor_to_uri"], [113, 4, 1, "", "load_uri_to_image_tensor"], [113, 4, 1, "", "save_image_tensor_to_file"], [113, 4, 1, "", "set_image_tensor_channel_axis"], [113, 4, 1, "", "set_image_tensor_inv_normalization"], [113, 4, 1, "", "set_image_tensor_normalization"], [113, 4, 1, "", "set_image_tensor_shape"]], "docarray.document.mixins.mesh": [[114, 1, 1, "", "MeshDataMixin"]], "docarray.document.mixins.mesh.MeshDataMixin": [[114, 4, 1, "", "load_uri_to_point_cloud_tensor"]], "docarray.document.mixins.multimodal": [[115, 1, 1, "", "MultiModalMixin"]], "docarray.document.mixins.multimodal.MultiModalMixin": [[115, 4, 1, "", "get_multi_modal_attribute"], [115, 3, 1, "", "is_multimodal"]], "docarray.document.mixins.plot": [[116, 1, 1, "", "PlotMixin"]], "docarray.document.mixins.plot.PlotMixin": [[116, 4, 1, "", "display"], [116, 4, 1, "", "plot"], [116, 4, 1, "", "plot_matches_sprites"], [116, 4, 1, "", "summary"]], "docarray.document.mixins.porting": [[117, 1, 1, "", "PortingMixin"]], "docarray.document.mixins.porting.PortingMixin": [[117, 4, 1, "", "from_base64"], [117, 4, 1, "", "from_bytes"], [117, 4, 1, "", "from_dict"], [117, 4, 1, "", "from_json"], [117, 4, 1, "", "to_base64"], [117, 4, 1, "", "to_bytes"], [117, 4, 1, "", "to_dict"], [117, 4, 1, "", "to_json"]], "docarray.document.mixins.property": [[118, 1, 1, "", "PropertyMixin"]], "docarray.document.mixins.property.PropertyMixin": [[118, 3, 1, "", "blob"], [118, 3, 1, "", "chunks"], [118, 3, 1, "", "content"], [118, 3, 1, "", "content_type"], [118, 3, 1, "", "matches"], [118, 3, 1, "", "mime_type"], [118, 3, 1, "", "tensor"], [118, 3, 1, "", "text"], [118, 3, 1, "", "uri"]], "docarray.document.mixins.protobuf": [[119, 1, 1, "", "ProtobufMixin"]], "docarray.document.mixins.protobuf.ProtobufMixin": [[119, 4, 1, "", "from_protobuf"], [119, 4, 1, "", "to_protobuf"]], "docarray.document.mixins.pydantic": [[120, 1, 1, "", "PydanticMixin"]], "docarray.document.mixins.pydantic.PydanticMixin": [[120, 4, 1, "", "from_pydantic_model"], [120, 4, 1, "", "get_json_schema"], [120, 4, 1, "", "to_pydantic_model"]], "docarray.document.mixins.rich_embedding": [[121, 1, 1, "", "ColorBoxEmbedding"]], "docarray.document.mixins.strawberry": [[122, 1, 1, "", "StrawberryMixin"]], "docarray.document.mixins.strawberry.StrawberryMixin": [[122, 4, 1, "", "from_strawberry_type"], [122, 4, 1, "", "to_strawberry_type"]], "docarray.document.mixins.sugar": [[123, 1, 1, "", "SingletonSugarMixin"]], "docarray.document.mixins.sugar.SingletonSugarMixin": [[123, 4, 1, "", "embed"], [123, 4, 1, "", "match"], [123, 4, 1, "", "post"]], "docarray.document.mixins.text": [[124, 1, 1, "", "TextDataMixin"]], "docarray.document.mixins.text.TextDataMixin": [[124, 4, 1, "", "convert_tensor_to_text"], [124, 4, 1, "", "convert_text_to_datauri"], [124, 4, 1, "", "convert_text_to_tensor"], [124, 4, 1, "", "get_vocabulary"], [124, 4, 1, "", "load_uri_to_text"]], "docarray.document.mixins.video": [[125, 1, 1, "", "VideoDataMixin"]], "docarray.document.mixins.video.VideoDataMixin": [[125, 4, 1, "", "load_uri_to_video_tensor"], [125, 4, 1, "", "save_video_tensor_to_file"]], "docarray.document.pydantic_model": [[126, 1, 1, "", "PydanticDocument"]], "docarray.document.pydantic_model.PydanticDocument": [[126, 1, 1, "", "Config"], [126, 2, 1, "", "adjacency"], [126, 2, 1, "", "blob"], [126, 2, 1, "", "chunks"], [126, 2, 1, "", "embedding"], [126, 2, 1, "", "evaluations"], [126, 2, 1, "", "granularity"], [126, 2, 1, "", "id"], [126, 2, 1, "", "location"], [126, 2, 1, "", "matches"], [126, 2, 1, "", "mime_type"], [126, 2, 1, "", "modality"], [126, 2, 1, "", "offset"], [126, 2, 1, "", "parent_id"], [126, 2, 1, "", "scores"], [126, 2, 1, "", "tags"], [126, 2, 1, "", "tensor"], [126, 2, 1, "", "text"], [126, 2, 1, "", "uri"], [126, 2, 1, "", "weight"]], "docarray.document.pydantic_model.PydanticDocument.Config": [[126, 2, 1, "", "smart_union"]], "docarray.helper": [[128, 5, 1, "", "add_protocol_and_compress_to_file_path"], [128, 1, 1, "", "cached_property"], [128, 5, 1, "", "compress_bytes"], [128, 5, 1, "", "dataclass_from_dict"], [128, 5, 1, "", "decompress_bytes"], [128, 5, 1, "", "deprecate_by"], [128, 5, 1, "", "download_mermaid_url"], [128, 5, 1, "", "dunder_get"], [128, 5, 1, "", "filter_dict"], [128, 5, 1, "", "get_ci_vendor"], [128, 5, 1, "", "get_compress_ctx"], [128, 5, 1, "", "get_full_version"], [128, 5, 1, "", "get_request_header"], [128, 5, 1, "", "protocol_and_compress_from_file_path"], [128, 5, 1, "", "random_identity"], [128, 5, 1, "", "random_port"], [128, 5, 1, "", "random_uuid"], [128, 5, 1, "", "reset_ports"], [128, 5, 1, "", "typename"]], "docarray.math": [[130, 0, 0, "-", "distance"], [135, 0, 0, "-", "evaluation"], [136, 0, 0, "-", "helper"], [137, 0, 0, "-", "ndarray"]], "docarray.math.distance": [[130, 5, 1, "", "cdist"], [131, 0, 0, "-", "numpy"], [130, 5, 1, "", "pdist"], [133, 0, 0, "-", "tensorflow"], [134, 0, 0, "-", "torch"]], "docarray.math.distance.numpy": [[131, 5, 1, "", "cosine"], [131, 5, 1, "", "euclidean"], [131, 5, 1, "", "sparse_cosine"], [131, 5, 1, "", "sparse_euclidean"], [131, 5, 1, "", "sparse_sqeuclidean"], [131, 5, 1, "", "sqeuclidean"]], "docarray.math.distance.tensorflow": [[133, 5, 1, "", "cosine"], [133, 5, 1, "", "euclidean"], [133, 5, 1, "", "sqeuclidean"]], "docarray.math.distance.torch": [[134, 5, 1, "", "cosine"], [134, 5, 1, "", "euclidean"], [134, 5, 1, "", "sqeuclidean"]], "docarray.math.evaluation": [[135, 5, 1, "", "average_precision"], [135, 5, 1, "", "dcg_at_k"], [135, 5, 1, "", "f1_score_at_k"], [135, 5, 1, "", "hit_at_k"], [135, 5, 1, "", "ndcg_at_k"], [135, 5, 1, "", "precision_at_k"], [135, 5, 1, "", "r_precision"], [135, 5, 1, "", "recall_at_k"], [135, 5, 1, "", "reciprocal_rank"]], "docarray.math.helper": [[136, 5, 1, "", "minmax_normalize"], [136, 5, 1, "", "top_k"], [136, 5, 1, "", "update_rows_x_mat_best"]], "docarray.math.ndarray": [[137, 5, 1, "", "check_arraylike_equality"], [137, 5, 1, "", "detach_tensor_if_present"], [137, 5, 1, "", "get_array_rows"], [137, 5, 1, "", "get_array_type"], [137, 5, 1, "", "ravel"], [137, 5, 1, "", "to_list"], [137, 5, 1, "", "to_numpy_array"], [137, 5, 1, "", "unravel"]], "docarray.proto": [[139, 0, 0, "-", "docarray_pb2"], [140, 0, 0, "-", "io"]], "docarray.proto.io": [[140, 5, 1, "", "flush_proto"], [141, 0, 0, "-", "ndarray"], [140, 5, 1, "", "parse_proto"]], "docarray.proto.io.ndarray": [[141, 5, 1, "", "flush_ndarray"], [141, 5, 1, "", "read_ndarray"]], "docarray.score": [[142, 1, 1, "", "NamedScore"], [143, 0, 0, "-", "data"], [144, 0, 0, "-", "mixins"]], "docarray.score.data": [[143, 1, 1, "", "NamedScoreData"]], "docarray.score.data.NamedScoreData": [[143, 2, 1, "", "description"], [143, 2, 1, "", "op_name"], [143, 2, 1, "", "ref_id"], [143, 2, 1, "", "value"]], "docarray.score.mixins": [[144, 1, 1, "", "AllMixins"], [145, 0, 0, "-", "property"], [146, 0, 0, "-", "representer"]], "docarray.score.mixins.property": [[145, 1, 1, "", "PropertyMixin"]], "docarray.score.mixins.property.PropertyMixin": [[145, 3, 1, "", "description"], [145, 3, 1, "", "op_name"], [145, 3, 1, "", "ref_id"], [145, 3, 1, "", "value"]], "docarray.score.mixins.representer": [[146, 1, 1, "", "RepresentMixin"]], "docarray.score.mixins.representer.RepresentMixin": [[146, 4, 1, "", "to_dict"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:property", "4": "py:method", "5": "py:function", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "property", "Python property"], "4": ["py", "method", "Python method"], "5": ["py", "function", "Python function"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"annlit": [0, 12, 57, 58, 59, 60, 61, 62], "usag": [0, 2, 5, 6, 7], "config": [0, 2, 4, 5, 6, 7, 158], "One": 1, "million": 1, "scale": [1, 183], "benchmark": 1, "result": [1, 182], "setup": 1, "set": 1, "nearest": [1, 164, 177], "neighbour": [1, 164, 177], "search": [1, 2], "rational": 1, "experi": 1, "design": [1, 185], "incomplet": 1, "store": [1, 3, 4], "conclus": 1, "elasticsearch": 2, "start": [2, 5, 7], "elast": [2, 16, 68, 69, 70, 71, 72], "servic": [2, 5, 7, 159, 183], "creat": [2, 3, 5, 7, 161], "documentarrai": [2, 3, 5, 7, 149, 164, 172, 176, 182, 184], "backend": [2, 3, 4, 5, 7, 58, 64, 69, 74, 79, 86, 91, 149, 178], "secur": 2, "connect": 2, "text": [2, 49, 124, 155, 159], "field": [2, 149, 157, 158, 182], "tag": [2, 171], "note": 2, "add": [3, 149], "new": [3, 161], "document": [3, 4, 15, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 149, 155, 158, 163, 164, 166, 171, 172, 174, 182, 184, 187, 188], "step": 3, "1": [3, 150, 151, 153, 154, 155, 156], "folder": 3, "2": [3, 149, 150, 151, 153, 155, 156], "implement": 3, "getsetdel": [3, 60, 65, 71, 76, 81, 87, 93], "py": 3, "3": [3, 149, 150, 151, 153, 155, 156], "seqlik": [3, 62, 67, 72, 77, 83, 89, 94], "4": [3, 149, 150, 151, 153, 155, 156], "5": [3, 149, 150, 151, 153, 154, 155, 156], "find": [3, 27, 59, 70, 75, 80, 92, 164, 177], "6": [3, 150, 151, 154, 156], "summar": 3, "everyth": 3, "__init__": 3, "7": [3, 150, 153, 155, 156], "subclass": 3, "from": [3, 158, 162, 163, 168, 172, 180], "8": [3, 150, 153, 155, 156], "entrypoint": 3, "On": [3, 164], "pull": 3, "request": 3, "test": 3, "type": [3, 100, 147, 157, 161, 177, 187, 188], "hint": 3, "construct": [4, 158, 163, 172], "known": 4, "limit": [4, 182], "multipl": [4, 157, 164, 172, 175], "refer": 4, "same": 4, "storag": [4, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 149], "out": [4, 183], "arrai": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 172], "modif": 4, "element": [4, 172], "access": [4, 157, 162, 170, 171], "i": [4, 160, 177, 185], "slower": 4, "qdrant": [5, 51, 78, 79, 80, 81, 82, 83], "minimum": [5, 7], "exampl": [5, 7, 8, 150, 152, 177], "sqlite": [6, 55, 85, 86, 87, 88, 89], "weaviat": [7, 90, 91, 92, 93, 94, 95], "graphql": 8, "basic": [8, 171], "integr": 8, "fastapi": [8, 182], "pytorch": 9, "deep": [9, 172], "learn": 9, "framework": 9, "load": [9, 150, 151, 154, 156, 162], "map": 9, "batch": [9, 171], "one": 9, "shot": 9, "docarrai": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 182, 185, 186, 187, 188], "packag": [10, 11, 19, 21, 31, 52, 56, 57, 63, 68, 73, 78, 85, 90, 97, 101, 104, 129, 130, 138, 140, 142, 144, 147, 153, 183], "subpackag": [10, 11, 19, 56, 101, 129, 138, 142], "submodul": [10, 11, 19, 21, 31, 52, 56, 57, 63, 68, 73, 78, 85, 90, 97, 101, 104, 129, 130, 138, 140, 142, 144], "modul": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "content": [10, 11, 19, 20, 21, 31, 52, 56, 57, 63, 68, 73, 78, 85, 90, 97, 101, 104, 108, 129, 130, 138, 140, 142, 144, 147, 149, 162, 170, 184, 187, 188], "base": [13, 63, 64, 65, 66, 67, 96], "chunk": 14, "match": [17, 40, 155, 174, 177, 181], "memori": [18, 73, 74, 75, 76, 77], "mixin": [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 144, 145, 146], "dataload": [21, 22], "helper": [22, 61, 66, 82, 88, 112, 128, 136, 171], "delitem": 23, "emb": [24, 159, 173], "empti": [25, 163, 172], "evalu": [26, 135, 174], "getattr": 28, "getitem": 29, "group": 30, "io": [31, 32, 33, 34, 35, 36, 37, 38, 39, 140, 141], "binari": [32, 180], "common": 33, "csv": [34, 154], "datafram": [35, 180], "from_gen": 36, "json": [37, 149, 168, 180, 182], "pbar": 38, "pushpul": 39, "parallel": [41, 178], "plot": [42, 116, 181], "post": 43, "pydant": [44, 120, 165, 182], "reduc": 45, "sampl": [46, 171], "setitem": 47, "strawberri": [48, 122, 165], "travers": 50, "queryset": [52, 53, 54], "lookup": 53, "parser": 54, "registri": 84, "dataclass": [97, 98, 99, 100, 149, 157, 158, 160], "getter": 98, "setter": 99, "data": [102, 143, 150, 151, 156, 162], "gener": 103, "attribut": [105, 162, 163, 170], "audio": [106, 150], "blob": 107, "convert": [109, 155, 162, 165, 182], "dump": 110, "featurehash": [111, 165], "imag": [113, 151, 159, 181, 184], "mesh": [114, 153], "multimod": [115, 160], "port": [117, 165], "properti": [118, 145], "protobuf": [119, 165, 168, 180, 188], "rich_embed": 121, "sugar": 123, "video": [125, 156], "pydantic_model": 126, "strawberry_typ": 127, "math": [129, 130, 131, 132, 133, 134, 135, 136, 137], "distanc": [130, 131, 132, 133, 134], "numpi": 131, "paddl": 132, "tensorflow": 133, "torch": 134, "ndarrai": [137, 141, 155, 170], "proto": [138, 139, 140, 141, 187, 188], "docarray_pb2": 139, "score": [142, 143, 144, 145, 146], "represent": 146, "changelog": 149, "0": [149, 150, 151, 153, 154, 155, 156], "11": [149, 150, 151, 155, 156], "chang": 149, "documentarrayinmemori": 149, "": [149, 158, 160, 163, 166, 167, 168, 171, 172, 176], "contain": 149, "list": [149, 157, 172, 180], "10": [149, 150, 151], "high": 149, "level": 149, "api": 149, "serial": [149, 168, 180], "format": [149, 180], "default": 149, "dict": [149, 168], "strategi": 149, "name": 149, "svg": [150, 151, 153, 154, 155, 156], "version": [150, 151, 153, 154, 155, 156], "width": [150, 151, 153, 154, 155, 156], "0em": [150, 151, 153, 154, 155, 156], "height": [150, 151, 153, 154, 155, 156], "class": [150, 151, 153, 154, 155, 156, 158], "sd": [150, 151, 153, 154, 155, 156], "octicon": [150, 151, 153, 154, 155, 156], "unmut": 150, "viewbox": [150, 151, 153, 154, 155, 156], "16": [150, 151, 153, 154, 155, 156], "aria": [150, 151, 153, 154, 155, 156], "hidden": [150, 151, 153, 154, 155, 156], "true": [150, 151, 153, 154, 155, 156], "path": [150, 151, 153, 154, 155, 156], "fill": [150, 151, 153, 154, 155, 156, 164], "rule": [150, 151, 153, 154, 155, 156, 163], "evenodd": [150, 151, 153, 154, 155, 156], "d": [150, 151, 153, 154, 155, 156], "m7": 150, "563": 150, "069a": 150, "75": [150, 151, 153, 154, 155, 156], "018": 150, "75v10": [150, 151], "5a": [150, 151, 156], "01": [150, 151, 153, 154, 155], "238": 150, "57l3": 150, "472": 150, "11h1": 150, "75a1": [150, 151, 154, 156], "010": [150, 154], "9": [150, 155], "25v": [150, 156], "5c0": [150, 151, 156], "784": [150, 151, 154, 156], "5h1": [150, 154, 155], "723l3": 150, "289": 150, "82a": 150, "801": 150, "111zm6": 150, "38l4": 150, "319a": 150, "488": [150, 155], "181h": 150, "2a": [150, 156], "25": [150, 151, 153, 154, 156], "00": [150, 151, 153, 154, 155, 156], "25v2": [150, 151], "138": [150, 151, 154, 156], "112": [150, 151, 154, 156], "25h2a": 150, "18l6": 150, "62v4": 150, "38zm6": 150, "096": 150, "038a": 150, "011": [150, 151], "06": 150, "314": 150, "000": [150, 151, 156], "193": 150, "06v": 150, "001zm": 150, "121a": 150, "061": 150, "95": 150, "101": [150, 155], "07l": 150, "001": [150, 153, 155], "001z": 150, "wav": 150, "file": [150, 154, 156, 172], "save": [150, 154, 156], "other": [150, 171], "tool": 150, "librari": 150, "m1": 151, "25v10": 151, "25h": [151, 156], "94a": 151, "76": 151, "03": 151, "03l6": 151, "077": 151, "078a1": 151, "012": 151, "412": [151, 155], "06l14": 151, "31v2": 151, "75a": [151, 154, 156], "25h1": 151, "75zm12": 151, "11h4": 151, "81l5": 151, "048": 151, "047a": 151, "344": 151, "009l4": 151, "298": 151, "889v": 151, "917a": 151, "25zm1": 151, "0014": 151, "1h1": 151, "14": [151, 154], "216": [151, 154, 155, 156], "15": 151, "15h12": 151, "5a1": [151, 156], "0016": [151, 156], "13": [151, 155, 156], "25zm5": 151, "6a": 151, "0zm7": 151, "6a2": 151, "014": 151, "0z": 151, "simpl": [151, 155], "process": [151, 159, 178, 179], "displai": [151, 184], "sprite": [151, 181, 184], "segment": [151, 155], "larg": [151, 180], "complic": 151, "small": 151, "ones": 151, "m8": 153, "878": 153, "392a1": 153, "756": 153, "0l": 153, "045a1": 153, "951v6": 153, "098c0": 153, "624": 153, "332": [153, 155], "872": 153, "514l5": 153, "0l5": 153, "045c": 153, "54": [153, 155], "313": 153, "89": 153, "514v4": 153, "951c0": 153, "514l8": 153, "392zm7": 153, "875": 153, "69a": 153, "0l4": 153, "63": [153, 155], "685l8": 153, "133": 153, "245": 153, "375l4": 153, "685zm2": 153, "677v5": 153, "372c0": 153, "09": 153, "047": 153, "171": 153, "125": 153, "216l4": 153, "625": 153, "683v8": 153, "432l2": 153, "677zm6": 153, "271l4": 153, "683a": 153, "216v5": 153, "677l8": 153, "432v5": 153, "516z": 153, "3d": 153, "point": 153, "cloud": [153, 180], "tabl": [154, 181, 187, 188], "m0": 154, "75c0": 154, "0h12": 154, "5c15": 154, "75v3": 154, "585a": 154, "746": 154, "83v8": 154, "085a1": 154, "0114": 154, "16h6": 154, "309a": 154, "748": 154, "118": 154, "0h1": 154, "25v6": [154, 156], "165a": 154, "83v1": 154, "75zm1": 154, "5v7": 154, "25h5v": 154, "8h1": 154, "5zm5": 154, "5v1": 154, "25h5v5zm1": 154, "5v8h7": 154, "5h": 154, "8zm8": 154, "8v1": 154, "5h7": 154, "25v5z": 154, "typographi": 155, "m6": 155, "21": 155, "5l4": 155, "574": 155, "594": 155, "857": 155, "5h6": 155, "21zm": 155, "5l": 155, "829": 155, "487a": 155, "423": 155, "474l5": 155, "735": 155, "332a1": 155, "302": 155, "018l": 155, "39": 155, "688a": 155, "415": 155, "496l2": 155, "10h6": 155, "71zm3": 155, "358c10": 155, "53": 155, "374": 155, "87": 155, "4c1": 155, "939": 155, "601v5": 155, "649a": 155, "448": 155, "275c13": 155, "995": 155, "12": [155, 156], "82": 155, "13c": 155, "77": 155, "514": 155, "231": 155, "078": 155, "709": 155, "577": 155, "922": 155, "199": 155, "041": 155, "694": 155, "265": 155, "411": 155, "887": 155, "944c11": 155, "78": 155, "88": 155, "5v": 155, "899c0": 155, "869": 155, "528": 155, "282": 155, "84": 155, "858a": 155, "32": 155, "716zm14": 155, "9h13c": 155, "881": 155, "375": 155, "22": 155, "637": 155, "444": 155, "253": 155, "217": 155, "363": 155, "806": 155, "408": 155, "155": 155, "697": 155, "896": 155, "249": 155, "354": 155, "732": 155, "26": 155, "209": 155, "588": 155, "449": 155, "35": 155, "257": 155, "495": 155, "551v9z": 155, "long": 155, "back": 155, "via": [155, 159, 164, 173, 179], "featur": 155, "hash": 155, "devic": 156, "camera": 156, "m16": 156, "136": 156, "643l11": 156, "425v4": 156, "009": 156, "3h": 156, "75v6": 156, "13h7": 156, "0011": 156, "675l3": 156, "864": 156, "318a": 156, "5zm": 156, "075l3": 156, "1v": 156, "85l": 156, "1v1": 156, "65zm9": 156, "75v": 156, "25h7": 156, "5z": 156, "kei": 156, "frame": 156, "extract": 156, "modal": [157, 159, 161], "selector": [157, 170], "syntax": [157, 170], "select": 157, "slice": 157, "object": [157, 172, 182], "nest": [157, 163, 167, 170, 171], "decor": 158, "annot": 158, "behavior": 158, "us": [158, 164, 178, 183], "advanc": 158, "what": [158, 160, 163, 166, 167, 168, 171, 172, 176, 177, 185], "next": [158, 160, 163, 166, 167, 168, 171, 172, 176], "clip": 159, "understand": 160, "problem": 160, "challeng": 160, "support": [161, 177, 186], "overrid": 161, "exist": 161, "uri": 162, "an": [163, 172], "unknown": 163, "handl": 163, "resolv": 163, "copi": [163, 172], "anoth": 163, "embed": [164, 170, 181, 184], "neural": [164, 173], "network": [164, 173, 178], "fluent": 165, "interfac": 165, "method": 165, "blobdata": 165, "imagedata": 165, "contentproperti": 165, "textdata": 165, "singletonsugar": 165, "audiodata": 165, "meshdata": 165, "videodata": 165, "urifil": 165, "structur": [167, 171], "arbitrari": 168, "byte": [168, 180], "base64": [168, 180], "visual": [169, 181], "auto": 170, "ravel": 170, "dunder": 170, "sugari": 170, "index": 171, "id": 171, "boolean": 171, "mask": 171, "flatten": 171, "handi": 171, "shuffl": 171, "split": 171, "like": 172, "singl": 172, "local": [172, 183], "identifi": 174, "queri": [175, 177], "condit": 175, "filter": 175, "oper": 175, "combin": 175, "differ": 177, "between": [177, 182], "which": 177, "side": 177, "return": [177, 182], "gpu": [177, 178], "when": 178, "choos": 178, "thread": 178, "map_batch": 178, "overlap": 178, "cpu": 178, "comput": 178, "why": 178, "129": 178, "128": 178, "time": 178, "extern": 179, "flow": 179, "executor": [179, 183], "accept": 179, "scheme": 179, "read": 179, "more": 179, "wire": 180, "pickl": 180, "disk": 180, "stream": 180, "summari": [181, 183], "projector": 181, "schema": 182, "valid": 182, "incom": 182, "model": 182, "respons": 182, "recurs": 182, "jina": [183, 185], "depend": 183, "direct": 183, "invok": 183, "hub": 183, "code": 183, "three": 183, "good": 183, "reason": 183, "A": 183, "client": 183, "server": 183, "architectur": 183, "share": 183, "reus": 183, "jupyt": 184, "notebook": 184, "colab": 184, "rich": 184, "pycharm": 184, "user": [184, 185], "compar": 185, "altern": 185, "To": 185, "huggingfac": 185, "dataset": 185, "awkwardarrai": 185, "zarr": 185, "welcom": 186, "instal": 186, "join": 186, "u": 186, "protocol": [187, 188], "densendarrayproto": [187, 188], "documentarrayproto": [187, 188], "documentproto": [187, 188], "evaluationsentri": [187, 188], "scoresentri": [187, 188], "namedscoreproto": [187, 188], "ndarrayproto": [187, 188], "sparsendarrayproto": [187, 188], "scalar": [187, 188], "valu": [187, 188], "rebuild": 188}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"Annlite": [[0, "annlite"]], "Usage": [[0, "usage"], [2, "usage"], [5, "usage"], [6, "usage"], [7, "usage"]], "Config": [[0, "config"], [2, "config"], [5, "config"], [6, "config"], [7, "config"]], "One Million Scale Benchmark": [[1, "one-million-scale-benchmark"]], "Benchmark result": [[1, "benchmark-result"]], "Benchmark setup": [[1, "benchmark-setup"]], "Settings of the nearest neighbour search": [[1, "settings-of-the-nearest-neighbour-search"]], "Rationale on the experiment design": [[1, "rationale-on-the-experiment-design"]], "Incompleteness on the stores": [[1, "incompleteness-on-the-stores"]], "Conclusion": [[1, "conclusion"]], "Elasticsearch": [[2, "elasticsearch"]], "Start Elastic service": [[2, "start-elastic-service"]], "Create DocumentArray with Elasticsearch backend": [[2, "create-documentarray-with-elasticsearch-backend"]], "Secure connection": [[2, "secure-connection"]], "Search by .text field": [[2, "search-by-text-field"]], "Search by .tags field": [[2, "search-by-tags-field"]], "Note": [[2, null]], "Add New Document Store": [[3, "add-new-document-store"]], "Step 1: create the folder": [[3, "step-1-create-the-folder"]], "Step 2: implement getsetdel.py": [[3, "step-2-implement-getsetdel-py"]], "Step 3: implement seqlike.py": [[3, "step-3-implement-seqlike-py"]], "Step 4: implement backend.py": [[3, "step-4-implement-backend-py"]], "Step 5: implement find.py": [[3, "step-5-implement-find-py"]], "Step 6: summarize everything in __init__.py.": [[3, "step-6-summarize-everything-in-init-py"]], "Step 7: subclass from DocumentArray": [[3, "step-7-subclass-from-documentarray"]], "Step 8: add entrypoint to DocumentArray": [[3, "step-8-add-entrypoint-to-documentarray"]], "On pull request: add tests and type-hint": [[3, "on-pull-request-add-tests-and-type-hint"]], "Document Store": [[4, "document-store"]], "Construct": [[4, "construct"], [158, "construct"], [163, "construct"], [172, "construct"]], "Construct with config": [[4, "construct-with-config"]], "Known limitations": [[4, "known-limitations"]], "Multiple references to the same storage backend": [[4, "multiple-references-to-the-same-storage-backend"]], "Out-of-array modification": [[4, "out-of-array-modification"]], "Elements access is slower": [[4, "elements-access-is-slower"]], "Qdrant": [[5, "qdrant"]], "Start Qdrant service": [[5, "start-qdrant-service"]], "Create DocumentArray with Qdrant backend": [[5, "create-documentarray-with-qdrant-backend"]], "Minimum example": [[5, "minimum-example"]], "SQLite": [[6, "sqlite"]], "Weaviate": [[7, "weaviate"]], "Start Weaviate service": [[7, "start-weaviate-service"]], "Create DocumentArray with Weaviate backend": [[7, "create-documentarray-with-weaviate-backend"]], "Minimum Example": [[7, "minimum-example"]], "GraphQL": [[8, "graphql"]], "Basic example": [[8, "basic-example"]], "Integrate with FastAPI": [[8, "integrate-with-fastapi"]], "PyTorch/Deep Learning Frameworks": [[9, "pytorch-deep-learning-frameworks"]], "Load, map, batch in one-shot": [[9, "load-map-batch-in-one-shot"]], "docarray package": [[10, "docarray-package"]], "Subpackages": [[10, "subpackages"], [11, "subpackages"], [19, "subpackages"], [56, "subpackages"], [101, "subpackages"], [129, "subpackages"], [138, "subpackages"], [142, "subpackages"]], "Submodules": [[10, "submodules"], [11, "submodules"], [19, "submodules"], [21, "submodules"], [31, "submodules"], [52, "submodules"], [56, "submodules"], [57, "submodules"], [63, "submodules"], [68, "submodules"], [73, "submodules"], [78, "submodules"], [85, "submodules"], [90, "submodules"], [97, "submodules"], [101, "submodules"], [104, "submodules"], [129, "submodules"], [130, "submodules"], [138, "submodules"], [140, "submodules"], [142, "submodules"], [144, "submodules"]], "Module contents": [[10, "module-docarray"], [11, "module-docarray.array"], [19, "module-docarray.array.mixins"], [21, "module-docarray.array.mixins.dataloader"], [31, "module-docarray.array.mixins.io"], [52, "module-docarray.array.queryset"], [56, "module-docarray.array.storage"], [57, "module-docarray.array.storage.annlite"], [63, "module-docarray.array.storage.base"], [68, "module-docarray.array.storage.elastic"], [73, "module-docarray.array.storage.memory"], [78, "module-docarray.array.storage.qdrant"], [85, "module-docarray.array.storage.sqlite"], [90, "module-docarray.array.storage.weaviate"], [97, "module-docarray.dataclasses"], [101, "module-docarray.document"], [104, "module-docarray.document.mixins"], [129, "module-docarray.math"], [130, "module-docarray.math.distance"], [138, "module-docarray.proto"], [140, "module-docarray.proto.io"], [142, "module-docarray.score"], [144, "module-docarray.score.mixins"], [147, "module-docarray.typing"]], "docarray.array package": [[11, "docarray-array-package"]], "docarray.array.annlite module": [[12, "module-docarray.array.annlite"]], "docarray.array.base module": [[13, "module-docarray.array.base"]], "docarray.array.chunk module": [[14, "module-docarray.array.chunk"]], "docarray.array.document module": [[15, "module-docarray.array.document"]], "docarray.array.elastic module": [[16, "module-docarray.array.elastic"]], "docarray.array.match module": [[17, "module-docarray.array.match"]], "docarray.array.memory module": [[18, "module-docarray.array.memory"]], "docarray.array.mixins package": [[19, "docarray-array-mixins-package"]], "docarray.array.mixins.content module": [[20, "module-docarray.array.mixins.content"]], "docarray.array.mixins.dataloader package": [[21, "docarray-array-mixins-dataloader-package"]], "docarray.array.mixins.dataloader.helper module": [[22, "module-docarray.array.mixins.dataloader.helper"]], "docarray.array.mixins.delitem module": [[23, "module-docarray.array.mixins.delitem"]], "docarray.array.mixins.embed module": [[24, "module-docarray.array.mixins.embed"]], "docarray.array.mixins.empty module": [[25, "module-docarray.array.mixins.empty"]], "docarray.array.mixins.evaluation module": [[26, "module-docarray.array.mixins.evaluation"]], "docarray.array.mixins.find module": [[27, "module-docarray.array.mixins.find"]], "docarray.array.mixins.getattr module": [[28, "module-docarray.array.mixins.getattr"]], "docarray.array.mixins.getitem module": [[29, "module-docarray.array.mixins.getitem"]], "docarray.array.mixins.group module": [[30, "module-docarray.array.mixins.group"]], "docarray.array.mixins.io package": [[31, "docarray-array-mixins-io-package"]], "docarray.array.mixins.io.binary module": [[32, "module-docarray.array.mixins.io.binary"]], "docarray.array.mixins.io.common module": [[33, "module-docarray.array.mixins.io.common"]], "docarray.array.mixins.io.csv module": [[34, "module-docarray.array.mixins.io.csv"]], "docarray.array.mixins.io.dataframe module": [[35, "module-docarray.array.mixins.io.dataframe"]], "docarray.array.mixins.io.from_gen module": [[36, "module-docarray.array.mixins.io.from_gen"]], "docarray.array.mixins.io.json module": [[37, "module-docarray.array.mixins.io.json"]], "docarray.array.mixins.io.pbar module": [[38, "module-docarray.array.mixins.io.pbar"]], "docarray.array.mixins.io.pushpull module": [[39, "module-docarray.array.mixins.io.pushpull"]], "docarray.array.mixins.match module": [[40, "module-docarray.array.mixins.match"]], "docarray.array.mixins.parallel module": [[41, "module-docarray.array.mixins.parallel"]], "docarray.array.mixins.plot module": [[42, "module-docarray.array.mixins.plot"]], "docarray.array.mixins.post module": [[43, "module-docarray.array.mixins.post"]], "docarray.array.mixins.pydantic module": [[44, "module-docarray.array.mixins.pydantic"]], "docarray.array.mixins.reduce module": [[45, "module-docarray.array.mixins.reduce"]], "docarray.array.mixins.sample module": [[46, "module-docarray.array.mixins.sample"]], "docarray.array.mixins.setitem module": [[47, "module-docarray.array.mixins.setitem"]], "docarray.array.mixins.strawberry module": [[48, "module-docarray.array.mixins.strawberry"]], "docarray.array.mixins.text module": [[49, "module-docarray.array.mixins.text"]], "docarray.array.mixins.traverse module": [[50, "module-docarray.array.mixins.traverse"]], "docarray.array.qdrant module": [[51, "module-docarray.array.qdrant"]], "docarray.array.queryset package": [[52, "docarray-array-queryset-package"]], "docarray.array.queryset.lookup module": [[53, "module-docarray.array.queryset.lookup"]], "docarray.array.queryset.parser module": [[54, "module-docarray.array.queryset.parser"]], "docarray.array.sqlite module": [[55, "module-docarray.array.sqlite"]], "docarray.array.storage package": [[56, "docarray-array-storage-package"]], "docarray.array.storage.annlite package": [[57, "docarray-array-storage-annlite-package"]], "docarray.array.storage.annlite.backend module": [[58, "module-docarray.array.storage.annlite.backend"]], "docarray.array.storage.annlite.find module": [[59, "module-docarray.array.storage.annlite.find"]], "docarray.array.storage.annlite.getsetdel module": [[60, "module-docarray.array.storage.annlite.getsetdel"]], "docarray.array.storage.annlite.helper module": [[61, "module-docarray.array.storage.annlite.helper"]], "docarray.array.storage.annlite.seqlike module": [[62, "module-docarray.array.storage.annlite.seqlike"]], "docarray.array.storage.base package": [[63, "docarray-array-storage-base-package"]], "docarray.array.storage.base.backend module": [[64, "module-docarray.array.storage.base.backend"]], "docarray.array.storage.base.getsetdel module": [[65, "module-docarray.array.storage.base.getsetdel"]], "docarray.array.storage.base.helper module": [[66, "module-docarray.array.storage.base.helper"]], "docarray.array.storage.base.seqlike module": [[67, "module-docarray.array.storage.base.seqlike"]], "docarray.array.storage.elastic package": [[68, "docarray-array-storage-elastic-package"]], "docarray.array.storage.elastic.backend module": [[69, "module-docarray.array.storage.elastic.backend"]], "docarray.array.storage.elastic.find module": [[70, "module-docarray.array.storage.elastic.find"]], "docarray.array.storage.elastic.getsetdel module": [[71, "module-docarray.array.storage.elastic.getsetdel"]], "docarray.array.storage.elastic.seqlike module": [[72, "module-docarray.array.storage.elastic.seqlike"]], "docarray.array.storage.memory package": [[73, "docarray-array-storage-memory-package"]], "docarray.array.storage.memory.backend module": [[74, "module-docarray.array.storage.memory.backend"]], "docarray.array.storage.memory.find module": [[75, "module-docarray.array.storage.memory.find"]], "docarray.array.storage.memory.getsetdel module": [[76, "module-docarray.array.storage.memory.getsetdel"]], "docarray.array.storage.memory.seqlike module": [[77, "module-docarray.array.storage.memory.seqlike"]], "docarray.array.storage.qdrant package": [[78, "docarray-array-storage-qdrant-package"]], "docarray.array.storage.qdrant.backend module": [[79, "module-docarray.array.storage.qdrant.backend"]], "docarray.array.storage.qdrant.find module": [[80, "module-docarray.array.storage.qdrant.find"]], "docarray.array.storage.qdrant.getsetdel module": [[81, "module-docarray.array.storage.qdrant.getsetdel"]], "docarray.array.storage.qdrant.helper module": [[82, "module-docarray.array.storage.qdrant.helper"]], "docarray.array.storage.qdrant.seqlike module": [[83, "module-docarray.array.storage.qdrant.seqlike"]], "docarray.array.storage.registry module": [[84, "module-docarray.array.storage.registry"]], "docarray.array.storage.sqlite package": [[85, "docarray-array-storage-sqlite-package"]], "docarray.array.storage.sqlite.backend module": [[86, "module-docarray.array.storage.sqlite.backend"]], "docarray.array.storage.sqlite.getsetdel module": [[87, "module-docarray.array.storage.sqlite.getsetdel"]], "docarray.array.storage.sqlite.helper module": [[88, "module-docarray.array.storage.sqlite.helper"]], "docarray.array.storage.sqlite.seqlike module": [[89, "module-docarray.array.storage.sqlite.seqlike"]], "docarray.array.storage.weaviate package": [[90, "docarray-array-storage-weaviate-package"]], "docarray.array.storage.weaviate.backend module": [[91, "module-docarray.array.storage.weaviate.backend"]], "docarray.array.storage.weaviate.find module": [[92, "module-docarray.array.storage.weaviate.find"]], "docarray.array.storage.weaviate.getsetdel module": [[93, "module-docarray.array.storage.weaviate.getsetdel"]], "docarray.array.storage.weaviate.seqlike module": [[94, "module-docarray.array.storage.weaviate.seqlike"]], "docarray.array.weaviate module": [[95, "module-docarray.array.weaviate"]], "docarray.base module": [[96, "module-docarray.base"]], "docarray.dataclasses package": [[97, "docarray-dataclasses-package"]], "docarray.dataclasses.getter module": [[98, "module-docarray.dataclasses.getter"]], "docarray.dataclasses.setter module": [[99, "module-docarray.dataclasses.setter"]], "docarray.dataclasses.types module": [[100, "module-docarray.dataclasses.types"]], "docarray.document package": [[101, "docarray-document-package"]], "docarray.document.data module": [[102, "module-docarray.document.data"]], "docarray.document.generators module": [[103, "module-docarray.document.generators"]], "docarray.document.mixins package": [[104, "docarray-document-mixins-package"]], "docarray.document.mixins.attribute module": [[105, "module-docarray.document.mixins.attribute"]], "docarray.document.mixins.audio module": [[106, "module-docarray.document.mixins.audio"]], "docarray.document.mixins.blob module": [[107, "module-docarray.document.mixins.blob"]], "docarray.document.mixins.content module": [[108, "module-docarray.document.mixins.content"]], "docarray.document.mixins.convert module": [[109, "module-docarray.document.mixins.convert"]], "docarray.document.mixins.dump module": [[110, "module-docarray.document.mixins.dump"]], "docarray.document.mixins.featurehash module": [[111, "module-docarray.document.mixins.featurehash"]], "docarray.document.mixins.helper module": [[112, "module-docarray.document.mixins.helper"]], "docarray.document.mixins.image module": [[113, "module-docarray.document.mixins.image"]], "docarray.document.mixins.mesh module": [[114, "module-docarray.document.mixins.mesh"]], "docarray.document.mixins.multimodal module": [[115, "module-docarray.document.mixins.multimodal"]], "docarray.document.mixins.plot module": [[116, "module-docarray.document.mixins.plot"]], "docarray.document.mixins.porting module": [[117, "module-docarray.document.mixins.porting"]], "docarray.document.mixins.property module": [[118, "module-docarray.document.mixins.property"]], "docarray.document.mixins.protobuf module": [[119, "module-docarray.document.mixins.protobuf"]], "docarray.document.mixins.pydantic module": [[120, "module-docarray.document.mixins.pydantic"]], "docarray.document.mixins.rich_embedding module": [[121, "module-docarray.document.mixins.rich_embedding"]], "docarray.document.mixins.strawberry module": [[122, "module-docarray.document.mixins.strawberry"]], "docarray.document.mixins.sugar module": [[123, "module-docarray.document.mixins.sugar"]], "docarray.document.mixins.text module": [[124, "module-docarray.document.mixins.text"]], "docarray.document.mixins.video module": [[125, "module-docarray.document.mixins.video"]], "docarray.document.pydantic_model module": [[126, "module-docarray.document.pydantic_model"]], "docarray.document.strawberry_type module": [[127, "docarray-document-strawberry-type-module"]], "docarray.helper module": [[128, "module-docarray.helper"]], "docarray.math package": [[129, "docarray-math-package"]], "docarray.math.distance package": [[130, "docarray-math-distance-package"]], "docarray.math.distance.numpy module": [[131, "module-docarray.math.distance.numpy"]], "docarray.math.distance.paddle module": [[132, "docarray-math-distance-paddle-module"]], "docarray.math.distance.tensorflow module": [[133, "module-docarray.math.distance.tensorflow"]], "docarray.math.distance.torch module": [[134, "module-docarray.math.distance.torch"]], "docarray.math.evaluation module": [[135, "module-docarray.math.evaluation"]], "docarray.math.helper module": [[136, "module-docarray.math.helper"]], "docarray.math.ndarray module": [[137, "module-docarray.math.ndarray"]], "docarray.proto package": [[138, "docarray-proto-package"]], "docarray.proto.docarray_pb2 module": [[139, "module-docarray.proto.docarray_pb2"]], "docarray.proto.io package": [[140, "docarray-proto-io-package"]], "docarray.proto.io.ndarray module": [[141, "module-docarray.proto.io.ndarray"]], "docarray.score package": [[142, "docarray-score-package"]], "docarray.score.data module": [[143, "module-docarray.score.data"]], "docarray.score.mixins package": [[144, "docarray-score-mixins-package"]], "docarray.score.mixins.property module": [[145, "module-docarray.score.mixins.property"]], "docarray.score.mixins.representer module": [[146, "module-docarray.score.mixins.representer"]], "docarray.typing package": [[147, "docarray-typing-package"]], "docarray": [[148, "docarray"]], "Changelog": [[149, "changelog"]], "0.11.0: change DocumentArrayInMemory\u2019s container to list": [[149, "change-documentarrayinmemory-s-container-to-list"]], "0.10.0: add high-level dataclass API to Document": [[149, "add-high-level-dataclass-api-to-document"]], "0.5.0: add storage backend to DocumentArray": [[149, "add-storage-backend-to-documentarray"]], "0.4.0: change on the DocumentArray serialization format": [[149, "change-on-the-documentarray-serialization-format"]], "0.3.0: change on the default JSON/dict serialization strategy": [[149, "change-on-the-default-json-dict-serialization-strategy"]], "0.2.0: change on the content field name": [[149, "change-on-the-content-field-name"]], "<svg version=\"1.1\" width=\"1.0em\" height=\"1.0em\" class=\"sd-octicon sd-octicon-unmute\" viewBox=\"0 0 16 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M7.563 2.069A.75.75 0 018 2.75v10.5a.75.75 0 01-1.238.57L3.472 11H1.75A1.75 1.75 0 010 9.25v-2.5C0 5.784.784 5 1.75 5h1.723l3.289-2.82a.75.75 0 01.801-.111zM6.5 4.38L4.238 6.319a.75.75 0 01-.488.181h-2a.25.25 0 00-.25.25v2.5c0 .138.112.25.25.25h2a.75.75 0 01.488.18L6.5 11.62V4.38zm6.096-2.038a.75.75 0 011.06 0 8 8 0 010 11.314.75.75 0 01-1.06-1.06 6.5 6.5 0 000-9.193.75.75 0 010-1.06v-.001zm-1.06 2.121a.75.75 0 10-1.061 1.061 3.5 3.5 0 010 4.95.75.75 0 101.06 1.06 5 5 0 000-7.07l.001-.001z\"></path></svg> Audio": [[150, "svg-version-1-1-width-1-0em-height-1-0em-class-sd-octicon-sd-octicon-unmute-viewbox-0-0-16-16-aria-hidden-true-path-fill-rule-evenodd-d-m7-563-2-069a-75-75-0-018-2-75v10-5a-75-75-0-01-1-238-57l3-472-11h1-75a1-75-1-75-0-010-9-25v-2-5c0-5-784-784-5-1-75-5h1-723l3-289-2-82a-75-75-0-01-801-111zm6-5-4-38l4-238-6-319a-75-75-0-01-488-181h-2a-25-25-0-00-25-25v2-5c0-138-112-25-25-25h2a-75-75-0-01-488-18l6-5-11-62v4-38zm6-096-2-038a-75-75-0-011-06-0-8-8-0-010-11-314-75-75-0-01-1-06-1-06-6-5-6-5-0-000-9-193-75-75-0-010-1-06v-001zm-1-06-2-121a-75-75-0-10-1-061-1-061-3-5-3-5-0-010-4-95-75-75-0-101-06-1-06-5-5-0-000-7-07l-001-001z-path-svg-audio"]], "Load .wav file": [[150, "load-wav-file"]], "Save as .wav file": [[150, "save-as-wav-file"]], "Example": [[150, "example"], [177, "example"]], "Other tools & libraries for audio data": [[150, "other-tools-libraries-for-audio-data"]], "<svg version=\"1.1\" width=\"1.0em\" height=\"1.0em\" class=\"sd-octicon sd-octicon-image\" viewBox=\"0 0 16 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M1.75 2.5a.25.25 0 00-.25.25v10.5c0 .138.112.25.25.25h.94a.76.76 0 01.03-.03l6.077-6.078a1.75 1.75 0 012.412-.06L14.5 10.31V2.75a.25.25 0 00-.25-.25H1.75zm12.5 11H4.81l5.048-5.047a.25.25 0 01.344-.009l4.298 3.889v.917a.25.25 0 01-.25.25zm1.75-.25V2.75A1.75 1.75 0 0014.25 1H1.75A1.75 1.75 0 000 2.75v10.5C0 14.216.784 15 1.75 15h12.5A1.75 1.75 0 0016 13.25zM5.5 6a.5.5 0 11-1 0 .5.5 0 011 0zM7 6a2 2 0 11-4 0 2 2 0 014 0z\"></path></svg> Image": [[151, "svg-version-1-1-width-1-0em-height-1-0em-class-sd-octicon-sd-octicon-image-viewbox-0-0-16-16-aria-hidden-true-path-fill-rule-evenodd-d-m1-75-2-5a-25-25-0-00-25-25v10-5c0-138-112-25-25-25h-94a-76-76-0-01-03-03l6-077-6-078a1-75-1-75-0-012-412-06l14-5-10-31v2-75a-25-25-0-00-25-25h1-75zm12-5-11h4-81l5-048-5-047a-25-25-0-01-344-009l4-298-3-889v-917a-25-25-0-01-25-25zm1-75-25v2-75a1-75-1-75-0-0014-25-1h1-75a1-75-1-75-0-000-2-75v10-5c0-14-216-784-15-1-75-15h12-5a1-75-1-75-0-0016-13-25zm5-5-6a-5-5-0-11-1-0-5-5-0-011-0zm7-6a2-2-0-11-4-0-2-2-0-014-0z-path-svg-image"]], "Load image data": [[151, "load-image-data"]], "Simple image processing": [[151, "simple-image-processing"]], "Display image sprite": [[151, "display-image-sprite"], [184, "display-image-sprite"]], "Segment large complicated image into small ones": [[151, "segment-large-complicated-image-into-small-ones"]], "Examples": [[152, "examples"]], "<svg version=\"1.1\" width=\"1.0em\" height=\"1.0em\" class=\"sd-octicon sd-octicon-package\" viewBox=\"0 0 16 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M8.878.392a1.75 1.75 0 00-1.756 0l-5.25 3.045A1.75 1.75 0 001 4.951v6.098c0 .624.332 1.2.872 1.514l5.25 3.045a1.75 1.75 0 001.756 0l5.25-3.045c.54-.313.872-.89.872-1.514V4.951c0-.624-.332-1.2-.872-1.514L8.878.392zM7.875 1.69a.25.25 0 01.25 0l4.63 2.685L8 7.133 3.245 4.375l4.63-2.685zM2.5 5.677v5.372c0 .09.047.171.125.216l4.625 2.683V8.432L2.5 5.677zm6.25 8.271l4.625-2.683a.25.25 0 00.125-.216V5.677L8.75 8.432v5.516z\"></path></svg> 3D Mesh": [[153, "svg-version-1-1-width-1-0em-height-1-0em-class-sd-octicon-sd-octicon-package-viewbox-0-0-16-16-aria-hidden-true-path-fill-rule-evenodd-d-m8-878-392a1-75-1-75-0-00-1-756-0l-5-25-3-045a1-75-1-75-0-001-4-951v6-098c0-624-332-1-2-872-1-514l5-25-3-045a1-75-1-75-0-001-756-0l5-25-3-045c-54-313-872-89-872-1-514v4-951c0-624-332-1-2-872-1-514l8-878-392zm7-875-1-69a-25-25-0-01-25-0l4-63-2-685l8-7-133-3-245-4-375l4-63-2-685zm2-5-5-677v5-372c0-09-047-171-125-216l4-625-2-683v8-432l2-5-5-677zm6-25-8-271l4-625-2-683a-25-25-0-00-125-216v5-677l8-75-8-432v5-516z-path-svg-3d-mesh"]], "Point cloud": [[153, "point-cloud"]], "<svg version=\"1.1\" width=\"1.0em\" height=\"1.0em\" class=\"sd-octicon sd-octicon-table\" viewBox=\"0 0 16 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M0 1.75C0 .784.784 0 1.75 0h12.5C15.216 0 16 .784 16 1.75v3.585a.746.746 0 010 .83v8.085A1.75 1.75 0 0114.25 16H6.309a.748.748 0 01-1.118 0H1.75A1.75 1.75 0 010 14.25V6.165a.746.746 0 010-.83V1.75zM1.5 6.5v7.75c0 .138.112.25.25.25H5v-8H1.5zM5 5H1.5V1.75a.25.25 0 01.25-.25H5V5zm1.5 1.5v8h7.75a.25.25 0 00.25-.25V6.5h-8zm8-1.5h-8V1.5h7.75a.25.25 0 01.25.25V5z\"></path></svg> Table": [[154, "svg-version-1-1-width-1-0em-height-1-0em-class-sd-octicon-sd-octicon-table-viewbox-0-0-16-16-aria-hidden-true-path-fill-rule-evenodd-d-m0-1-75c0-784-784-0-1-75-0h12-5c15-216-0-16-784-16-1-75v3-585a-746-746-0-010-83v8-085a1-75-1-75-0-0114-25-16h6-309a-748-748-0-01-1-118-0h1-75a1-75-1-75-0-010-14-25v6-165a-746-746-0-010-83v1-75zm1-5-6-5v7-75c0-138-112-25-25-25h5v-8h1-5zm5-5h1-5v1-75a-25-25-0-01-25-25h5v5zm1-5-1-5v8h7-75a-25-25-0-00-25-25v6-5h-8zm8-1-5h-8v1-5h7-75a-25-25-0-01-25-25v5z-path-svg-table"]], "Load CSV table": [[154, "load-csv-table"]], "Save as CSV file": [[154, "save-as-csv-file"]], "<svg version=\"1.1\" width=\"1.0em\" height=\"1.0em\" class=\"sd-octicon sd-octicon-typography\" viewBox=\"0 0 16 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M6.21 8.5L4.574 3.594 2.857 8.5H6.21zm.5 1.5l.829 2.487a.75.75 0 001.423-.474L5.735 2.332a1.216 1.216 0 00-2.302-.018l-3.39 9.688a.75.75 0 001.415.496L2.332 10H6.71zm3.13-4.358C10.53 4.374 11.87 4 13 4c1.5 0 3 .939 3 2.601v5.649a.75.75 0 01-1.448.275C13.995 12.82 13.3 13 12.5 13c-.77 0-1.514-.231-2.078-.709-.577-.488-.922-1.199-.922-2.041 0-.694.265-1.411.887-1.944C11 7.78 11.88 7.5 13 7.5h1.5v-.899c0-.54-.5-1.101-1.5-1.101-.869 0-1.528.282-1.84.858a.75.75 0 11-1.32-.716zM14.5 9H13c-.881 0-1.375.22-1.637.444-.253.217-.363.5-.363.806 0 .408.155.697.39.896.249.21.63.354 1.11.354.732 0 1.26-.209 1.588-.449.35-.257.412-.495.412-.551V9z\"></path></svg> Text": [[155, "svg-version-1-1-width-1-0em-height-1-0em-class-sd-octicon-sd-octicon-typography-viewbox-0-0-16-16-aria-hidden-true-path-fill-rule-evenodd-d-m6-21-8-5l4-574-3-594-2-857-8-5h6-21zm-5-1-5l-829-2-487a-75-75-0-001-423-474l5-735-2-332a1-216-1-216-0-00-2-302-018l-3-39-9-688a-75-75-0-001-415-496l2-332-10h6-71zm3-13-4-358c10-53-4-374-11-87-4-13-4c1-5-0-3-939-3-2-601v5-649a-75-75-0-01-1-448-275c13-995-12-82-13-3-13-12-5-13c-77-0-1-514-231-2-078-709-577-488-922-1-199-922-2-041-0-694-265-1-411-887-1-944c11-7-78-11-88-7-5-13-7-5h1-5v-899c0-54-5-1-101-1-5-1-101-869-0-1-528-282-1-84-858a-75-75-0-11-1-32-716zm14-5-9h13c-881-0-1-375-22-1-637-444-253-217-363-5-363-806-0-408-155-697-39-896-249-21-63-354-1-11-354-732-0-1-26-209-1-588-449-35-257-412-495-412-551v9z-path-svg-text"]], "Segment long documents": [[155, "segment-long-documents"]], "Convert text into ndarray": [[155, "convert-text-into-ndarray"]], "Convert ndarray back to text": [[155, "convert-ndarray-back-to-text"]], "Simple text matching via feature hashing": [[155, "simple-text-matching-via-feature-hashing"]], "<svg version=\"1.1\" width=\"1.0em\" height=\"1.0em\" class=\"sd-octicon sd-octicon-device-camera-video\" viewBox=\"0 0 16 16\" aria-hidden=\"true\"><path fill-rule=\"evenodd\" d=\"M16 3.75a.75.75 0 00-1.136-.643L11 5.425V4.75A1.75 1.75 0 009.25 3h-7.5A1.75 1.75 0 000 4.75v6.5C0 12.216.784 13 1.75 13h7.5A1.75 1.75 0 0011 11.25v-.675l3.864 2.318A.75.75 0 0016 12.25v-8.5zm-5 5.075l3.5 2.1v-5.85l-3.5 2.1v1.65zM9.5 6.75v-2a.25.25 0 00-.25-.25h-7.5a.25.25 0 00-.25.25v6.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-4.5z\"></path></svg> Video": [[156, "svg-version-1-1-width-1-0em-height-1-0em-class-sd-octicon-sd-octicon-device-camera-video-viewbox-0-0-16-16-aria-hidden-true-path-fill-rule-evenodd-d-m16-3-75a-75-75-0-00-1-136-643l11-5-425v4-75a1-75-1-75-0-009-25-3h-7-5a1-75-1-75-0-000-4-75v6-5c0-12-216-784-13-1-75-13h7-5a1-75-1-75-0-0011-11-25v-675l3-864-2-318a-75-75-0-0016-12-25v-8-5zm-5-5-075l3-5-2-1v-5-85l-3-5-2-1v1-65zm9-5-6-75v-2a-25-25-0-00-25-25h-7-5a-25-25-0-00-25-25v6-5c0-138-112-25-25-25h7-5a-25-25-0-00-25-25v-4-5z-path-svg-video"]], "Load video data": [[156, "load-video-data"]], "Key frame extraction": [[156, "key-frame-extraction"]], "Save as video file": [[156, "save-as-video-file"]], "Access Modality": [[157, "access-modality"]], "Selector Syntax": [[157, "selector-syntax"]], "Select multiple fields": [[157, "select-multiple-fields"]], "Slice dataclass objects": [[157, "slice-dataclass-objects"]], "Slice List[Type] fields": [[157, "slice-list-type-fields"]], "Select nested fields": [[157, "select-nested-fields"]], "Dataclass decorator": [[158, "dataclass-decorator"]], "Annotate class fields": [[158, "annotate-class-fields"]], "Behavior of field annotation": [[158, "behavior-of-field-annotation"]], "Construct from/to Document": [[158, "construct-from-to-document"]], "Use field() for advanced configs": [[158, "use-field-for-advanced-configs"]], "What\u2019s next?": [[158, "what-s-next"], [163, "what-s-next"], [166, "what-s-next"], [167, "what-s-next"], [168, "what-s-next"], [171, "what-s-next"], [172, "what-s-next"], [176, "what-s-next"]], "Process Modality": [[159, "process-modality"]], "Embed image and text via CLIP": [[159, "embed-image-and-text-via-clip"]], "Embed via CLIP-as-service": [[159, "embed-via-clip-as-service"]], "Dataclass": [[160, "dataclass"]], "What is multimodal?": [[160, "what-is-multimodal"]], "Understanding the problem": [[160, "understanding-the-problem"]], "Understanding the challenges": [[160, "understanding-the-challenges"]], "What\u2019s next": [[160, "what-s-next"]], "Support New Modality": [[161, "support-new-modality"]], "Create new types": [[161, "create-new-types"]], "Override existing types": [[161, "override-existing-types"]], "Access Attributes": [[162, "access-attributes"], [170, "access-attributes"]], "Content attributes": [[162, "content-attributes"]], "Load content from URI": [[162, "load-content-from-uri"]], "Convert content to data URI": [[162, null]], "Construct an empty Document": [[163, "construct-an-empty-document"]], "Construct with attributes": [[163, "construct-with-attributes"]], "Nested Document": [[163, "nested-document"]], "Unknown attributes handling": [[163, "unknown-attributes-handling"]], "Resolve unknown attributes with rules": [[163, "resolve-unknown-attributes-with-rules"]], "Copy from another Document": [[163, "copy-from-another-document"]], "Embedding": [[164, "embedding"]], "Fill embedding via neural network": [[164, "fill-embedding-via-neural-network"]], "On multiple Documents use DocumentArray": [[164, null], [164, null]], "Find nearest-neighbours": [[164, "find-nearest-neighbours"]], "Fluent Interface": [[165, "fluent-interface"]], "Methods": [[165, "methods"]], "BlobData": [[165, "blobdata"]], "ImageData": [[165, "imagedata"]], "Convert": [[165, "convert"]], "ContentProperty": [[165, "contentproperty"]], "TextData": [[165, "textdata"]], "SingletonSugar": [[165, "singletonsugar"]], "FeatureHash": [[165, "featurehash"]], "Porting": [[165, "porting"]], "Protobuf": [[165, "protobuf"]], "Pydantic": [[165, "pydantic"]], "Strawberry": [[165, "strawberry"]], "AudioData": [[165, "audiodata"]], "MeshData": [[165, "meshdata"]], "VideoData": [[165, "videodata"]], "UriFile": [[165, "urifile"]], "Document": [[166, "document"]], "Nested Structure": [[167, "nested-structure"]], "Serialization": [[168, "serialization"], [180, "serialization"]], "From/to JSON": [[168, "from-to-json"], [180, "from-to-json"]], "From/to arbitrary JSON": [[168, "from-to-arbitrary-json"]], "From/to bytes": [[168, "from-to-bytes"], [180, "from-to-bytes"]], "From/to base64": [[168, "from-to-base64"], [180, "from-to-base64"]], "From/to dict": [[168, "from-to-dict"]], "From/to Protobuf": [[168, "from-to-protobuf"], [180, "from-to-protobuf"]], "Visualization": [[169, "visualization"], [181, "visualization"]], "Attribute selector": [[170, "attribute-selector"]], "Auto-ravel on NdArray": [[170, "auto-ravel-on-ndarray"]], "Dunder syntax for nested attributes": [[170, "dunder-syntax-for-nested-attributes"]], "Content and embedding sugary attributes": [[170, "content-and-embedding-sugary-attributes"]], "Access Documents": [[171, "access-documents"]], "Basic indexing": [[171, "basic-indexing"]], "Index by Document id": [[171, "index-by-document-id"]], "Index by boolean mask": [[171, "index-by-boolean-mask"]], "Index by nested structure": [[171, "index-by-nested-structure"]], "Index by flatten": [[171, "index-by-flatten"]], "Other Handy Helpers": [[171, "other-handy-helpers"]], "Batching": [[171, "batching"]], "Sampling": [[171, "sampling"]], "Shuffling": [[171, "shuffling"]], "Splitting by .tags": [[171, "splitting-by-tags"]], "Construct an empty array": [[172, "construct-an-empty-array"]], "Construct with empty Documents": [[172, "construct-with-empty-documents"]], "Construct from list-like objects": [[172, "construct-from-list-like-objects"]], "Construct from multiple DocumentArray": [[172, "construct-from-multiple-documentarray"]], "Construct from a single Document": [[172, "construct-from-a-single-document"]], "Deep copy on elements": [[172, "deep-copy-on-elements"]], "Construct from local files": [[172, "construct-from-local-files"]], "Embed via Neural Network": [[173, "embed-via-neural-network"]], "Evaluate Matches": [[174, "evaluate-matches"]], "Document identifier": [[174, "document-identifier"]], "Query by Conditions": [[175, "query-by-conditions"]], "Filter with query operators": [[175, "filter-with-query-operators"]], "Combine multiple conditions": [[175, "combine-multiple-conditions"]], "DocumentArray": [[176, "documentarray"]], "Match Nearest Neighbours": [[177, "match-nearest-neighbours"]], "Difference between find and match": [[177, "difference-between-find-and-match"]], "Which side is the query at?": [[177, "which-side-is-the-query-at"]], "What is the type of the query?": [[177, "what-is-the-type-of-the-query"]], "What is the return?": [[177, "what-is-the-return"]], "GPU support": [[177, "gpu-support"]], "Parallelization": [[178, "parallelization"]], "When to choose process or thread backend?": [[178, null]], "Use map_batch() to overlap CPU & GPU computation": [[178, "use-map-batch-to-overlap-cpu-gpu-computation"]], "Why 129s? Why not 128s": [[178, null]], "Use map_batch() to overlap CPU and network time": [[178, "use-map-batch-to-overlap-cpu-and-network-time"]], "Process via External Flow or Executor": [[179, "process-via-external-flow-or-executor"]], "Accept schemes": [[179, "accept-schemes"]], "Read more": [[179, "read-more"]], "Wire format of pickle and protobuf": [[180, "wire-format-of-pickle-and-protobuf"]], "From/to disk": [[180, "from-to-disk"]], "Stream large binary serialization from disk": [[180, "stream-large-binary-serialization-from-disk"]], "From/to list": [[180, "from-to-list"]], "From/to dataframe": [[180, "from-to-dataframe"]], "From/to cloud": [[180, "from-to-cloud"]], "Summary in table": [[181, "summary-in-table"]], "Image sprites": [[181, "image-sprites"]], "Plot Matches": [[181, "plot-matches"]], "Embedding projector": [[181, "embedding-projector"]], "FastAPI/Pydantic": [[182, "fastapi-pydantic"]], "JSON Schema": [[182, "json-schema"]], "Validate incoming Document and DocumentArray": [[182, "validate-incoming-document-and-documentarray"]], "Convert between pydantic model and DocArray objects": [[182, "convert-between-pydantic-model-and-docarray-objects"]], "Limit returned fields by response model": [[182, "limit-returned-fields-by-response-model"]], "Limit returned results recursively": [[182, "limit-returned-results-recursively"]], "Jina": [[183, "jina"]], "Package dependency": [[183, "package-dependency"]], "Direct invoke Jina/Hub Executor": [[183, "direct-invoke-jina-hub-executor"]], "Local code as a service": [[183, "local-code-as-a-service"]], "Three good reasons to use Jina": [[183, "three-good-reasons-to-use-jina"]], "A client-server architecture": [[183, "a-client-server-architecture"]], "Scale it out": [[183, "scale-it-out"]], "Share and reuse it": [[183, "share-and-reuse-it"]], "Summary": [[183, "summary"]], "Jupyter Notebook/Colab": [[184, "jupyter-notebook-colab"]], "Display Document": [[184, "display-document"]], "Display rich content": [[184, "display-rich-content"]], "Display DocumentArray": [[184, "display-documentarray"]], "Display embeddings": [[184, "display-embeddings"]], "PyCharm users": [[184, "pycharm-users"]], "What is DocArray?": [[185, "what-is-docarray"]], "Design": [[185, "design"]], "Comparing to Alternatives": [[185, "comparing-to-alternatives"]], "To Huggingface Datasets": [[185, "to-huggingface-datasets"]], "To AwkwardArray": [[185, "to-awkwardarray"]], "To Zarr": [[185, "to-zarr"]], "To Jina Users": [[185, "to-jina-users"]], "Welcome to DocArray!": [[186, "welcome-to-docarray"]], "Install": [[186, "install"]], "Support": [[186, "support"]], "Join Us": [[186, "join-us"]], "Protocol Documentation": [[187, "protocol-documentation"], [188, "protocol-documentation"]], "Table of Contents": [[187, "table-of-contents"], [188, "table-of-contents"]], "docarray.proto": [[187, "docarray-proto"], [188, "docarray-proto"]], "DenseNdArrayProto": [[187, "densendarrayproto"], [188, "densendarrayproto"]], "DocumentArrayProto": [[187, "documentarrayproto"], [188, "documentarrayproto"]], "DocumentProto": [[187, "documentproto"], [188, "documentproto"]], "DocumentProto.EvaluationsEntry": [[187, "documentproto-evaluationsentry"], [188, "documentproto-evaluationsentry"]], "DocumentProto.ScoresEntry": [[187, "documentproto-scoresentry"], [188, "documentproto-scoresentry"]], "NamedScoreProto": [[187, "namedscoreproto"], [188, "namedscoreproto"]], "NdArrayProto": [[187, "ndarrayproto"], [188, "ndarrayproto"]], "SparseNdArrayProto": [[187, "sparsendarrayproto"], [188, "sparsendarrayproto"]], "Scalar Value Types": [[187, "scalar-value-types"], [188, "scalar-value-types"]], "Rebuild Protobuf": [[188, "rebuild-protobuf"]]}, "indexentries": {"docarray": [[10, "module-docarray"]], "module": [[10, "module-docarray"], [11, "module-docarray.array"], [12, "module-docarray.array.annlite"], [13, "module-docarray.array.base"], [14, "module-docarray.array.chunk"], [15, "module-docarray.array.document"], [16, "module-docarray.array.elastic"], [17, "module-docarray.array.match"], [18, "module-docarray.array.memory"], [19, "module-docarray.array.mixins"], [20, "module-docarray.array.mixins.content"], [21, "module-docarray.array.mixins.dataloader"], [22, "module-docarray.array.mixins.dataloader.helper"], [23, "module-docarray.array.mixins.delitem"], [24, "module-docarray.array.mixins.embed"], [25, "module-docarray.array.mixins.empty"], [26, "module-docarray.array.mixins.evaluation"], [27, "module-docarray.array.mixins.find"], [28, "module-docarray.array.mixins.getattr"], [29, "module-docarray.array.mixins.getitem"], [30, "module-docarray.array.mixins.group"], [31, "module-docarray.array.mixins.io"], [32, "module-docarray.array.mixins.io.binary"], [33, "module-docarray.array.mixins.io.common"], [34, "module-docarray.array.mixins.io.csv"], [35, "module-docarray.array.mixins.io.dataframe"], [36, "module-docarray.array.mixins.io.from_gen"], [37, "module-docarray.array.mixins.io.json"], [38, "module-docarray.array.mixins.io.pbar"], [39, "module-docarray.array.mixins.io.pushpull"], [40, "module-docarray.array.mixins.match"], [41, "module-docarray.array.mixins.parallel"], [42, "module-docarray.array.mixins.plot"], [43, "module-docarray.array.mixins.post"], [44, "module-docarray.array.mixins.pydantic"], [45, "module-docarray.array.mixins.reduce"], [46, "module-docarray.array.mixins.sample"], [47, "module-docarray.array.mixins.setitem"], [48, "module-docarray.array.mixins.strawberry"], [49, "module-docarray.array.mixins.text"], [50, "module-docarray.array.mixins.traverse"], [51, "module-docarray.array.qdrant"], [52, "module-docarray.array.queryset"], [53, "module-docarray.array.queryset.lookup"], [54, "module-docarray.array.queryset.parser"], [55, "module-docarray.array.sqlite"], [56, "module-docarray.array.storage"], [57, "module-docarray.array.storage.annlite"], [58, "module-docarray.array.storage.annlite.backend"], [59, "module-docarray.array.storage.annlite.find"], [60, "module-docarray.array.storage.annlite.getsetdel"], [61, "module-docarray.array.storage.annlite.helper"], [62, "module-docarray.array.storage.annlite.seqlike"], [63, "module-docarray.array.storage.base"], [64, "module-docarray.array.storage.base.backend"], [65, "module-docarray.array.storage.base.getsetdel"], [66, "module-docarray.array.storage.base.helper"], [67, "module-docarray.array.storage.base.seqlike"], [68, "module-docarray.array.storage.elastic"], [69, "module-docarray.array.storage.elastic.backend"], [70, "module-docarray.array.storage.elastic.find"], [71, "module-docarray.array.storage.elastic.getsetdel"], [72, "module-docarray.array.storage.elastic.seqlike"], [73, "module-docarray.array.storage.memory"], [74, "module-docarray.array.storage.memory.backend"], [75, "module-docarray.array.storage.memory.find"], [76, "module-docarray.array.storage.memory.getsetdel"], [77, "module-docarray.array.storage.memory.seqlike"], [78, "module-docarray.array.storage.qdrant"], [79, "module-docarray.array.storage.qdrant.backend"], [80, "module-docarray.array.storage.qdrant.find"], [81, "module-docarray.array.storage.qdrant.getsetdel"], [82, "module-docarray.array.storage.qdrant.helper"], [83, "module-docarray.array.storage.qdrant.seqlike"], [84, "module-docarray.array.storage.registry"], [85, "module-docarray.array.storage.sqlite"], [86, "module-docarray.array.storage.sqlite.backend"], [87, "module-docarray.array.storage.sqlite.getsetdel"], [88, "module-docarray.array.storage.sqlite.helper"], [89, "module-docarray.array.storage.sqlite.seqlike"], [90, "module-docarray.array.storage.weaviate"], [91, "module-docarray.array.storage.weaviate.backend"], [92, "module-docarray.array.storage.weaviate.find"], [93, "module-docarray.array.storage.weaviate.getsetdel"], [94, "module-docarray.array.storage.weaviate.seqlike"], [95, "module-docarray.array.weaviate"], [96, "module-docarray.base"], [97, "module-docarray.dataclasses"], [98, "module-docarray.dataclasses.getter"], [99, "module-docarray.dataclasses.setter"], [100, "module-docarray.dataclasses.types"], [101, "module-docarray.document"], [102, "module-docarray.document.data"], [103, "module-docarray.document.generators"], [104, "module-docarray.document.mixins"], [105, "module-docarray.document.mixins.attribute"], [106, "module-docarray.document.mixins.audio"], [107, "module-docarray.document.mixins.blob"], [108, "module-docarray.document.mixins.content"], [109, "module-docarray.document.mixins.convert"], [110, "module-docarray.document.mixins.dump"], [111, "module-docarray.document.mixins.featurehash"], [112, "module-docarray.document.mixins.helper"], [113, "module-docarray.document.mixins.image"], [114, "module-docarray.document.mixins.mesh"], [115, "module-docarray.document.mixins.multimodal"], [116, "module-docarray.document.mixins.plot"], [117, "module-docarray.document.mixins.porting"], [118, "module-docarray.document.mixins.property"], [119, "module-docarray.document.mixins.protobuf"], [120, "module-docarray.document.mixins.pydantic"], [121, "module-docarray.document.mixins.rich_embedding"], [122, "module-docarray.document.mixins.strawberry"], [123, "module-docarray.document.mixins.sugar"], [124, "module-docarray.document.mixins.text"], [125, "module-docarray.document.mixins.video"], [126, "module-docarray.document.pydantic_model"], [128, "module-docarray.helper"], [129, "module-docarray.math"], [130, "module-docarray.math.distance"], [131, "module-docarray.math.distance.numpy"], [133, "module-docarray.math.distance.tensorflow"], [134, "module-docarray.math.distance.torch"], [135, "module-docarray.math.evaluation"], [136, "module-docarray.math.helper"], [137, "module-docarray.math.ndarray"], [138, "module-docarray.proto"], [139, "module-docarray.proto.docarray_pb2"], [140, "module-docarray.proto.io"], [141, "module-docarray.proto.io.ndarray"], [142, "module-docarray.score"], [143, "module-docarray.score.data"], [144, "module-docarray.score.mixins"], [145, "module-docarray.score.mixins.property"], [146, "module-docarray.score.mixins.representer"], [147, "module-docarray.typing"]], "docarray.array": [[11, "module-docarray.array"]], "annliteconfig (class in docarray.array.annlite)": [[12, "docarray.array.annlite.AnnliteConfig"]], "documentarrayannlite (class in docarray.array.annlite)": [[12, "docarray.array.annlite.DocumentArrayAnnlite"]], "data_path (docarray.array.annlite.annliteconfig attribute)": [[12, "docarray.array.annlite.AnnliteConfig.data_path"]], "docarray.array.annlite": [[12, "module-docarray.array.annlite"]], "ef_construction (docarray.array.annlite.annliteconfig attribute)": [[12, "docarray.array.annlite.AnnliteConfig.ef_construction"]], "ef_search (docarray.array.annlite.annliteconfig attribute)": [[12, "docarray.array.annlite.AnnliteConfig.ef_search"]], "max_connection (docarray.array.annlite.annliteconfig attribute)": [[12, "docarray.array.annlite.AnnliteConfig.max_connection"]], "metric (docarray.array.annlite.annliteconfig attribute)": [[12, "docarray.array.annlite.AnnliteConfig.metric"]], "n_dim (docarray.array.annlite.annliteconfig attribute)": [[12, "docarray.array.annlite.AnnliteConfig.n_dim"]], "serialize_config (docarray.array.annlite.annliteconfig attribute)": [[12, "docarray.array.annlite.AnnliteConfig.serialize_config"]], "basedocumentarray (class in docarray.array.base)": [[13, "docarray.array.base.BaseDocumentArray"]], "docarray.array.base": [[13, "module-docarray.array.base"]], "chunkarray (class in docarray.array.chunk)": [[14, "docarray.array.chunk.ChunkArray"]], "adjacency (docarray.array.chunk.chunkarray property)": [[14, "docarray.array.chunk.ChunkArray.adjacency"]], "append() (docarray.array.chunk.chunkarray method)": [[14, "docarray.array.chunk.ChunkArray.append"]], "docarray.array.chunk": [[14, "module-docarray.array.chunk"]], "granularity (docarray.array.chunk.chunkarray property)": [[14, "docarray.array.chunk.ChunkArray.granularity"]], "reference_doc (docarray.array.chunk.chunkarray property)": [[14, "docarray.array.chunk.ChunkArray.reference_doc"]], "documentarray (class in docarray.array.document)": [[15, "docarray.array.document.DocumentArray"]], "docarray.array.document": [[15, "module-docarray.array.document"]], "documentarrayelastic (class in docarray.array.elastic)": [[16, "docarray.array.elastic.DocumentArrayElastic"]], "elasticconfig (class in docarray.array.elastic)": [[16, "docarray.array.elastic.ElasticConfig"]], "batch_size (docarray.array.elastic.elasticconfig attribute)": [[16, "docarray.array.elastic.ElasticConfig.batch_size"]], "distance (docarray.array.elastic.elasticconfig attribute)": [[16, "docarray.array.elastic.ElasticConfig.distance"]], "docarray.array.elastic": [[16, "module-docarray.array.elastic"]], "ef_construction (docarray.array.elastic.elasticconfig attribute)": [[16, "docarray.array.elastic.ElasticConfig.ef_construction"]], "es_config (docarray.array.elastic.elasticconfig attribute)": [[16, "docarray.array.elastic.ElasticConfig.es_config"]], "hosts (docarray.array.elastic.elasticconfig attribute)": [[16, "docarray.array.elastic.ElasticConfig.hosts"]], "index_name (docarray.array.elastic.elasticconfig attribute)": [[16, "docarray.array.elastic.ElasticConfig.index_name"]], "index_text (docarray.array.elastic.elasticconfig attribute)": [[16, "docarray.array.elastic.ElasticConfig.index_text"]], "m (docarray.array.elastic.elasticconfig attribute)": [[16, "docarray.array.elastic.ElasticConfig.m"]], "n_dim (docarray.array.elastic.elasticconfig attribute)": [[16, "docarray.array.elastic.ElasticConfig.n_dim"]], "tag_indices (docarray.array.elastic.elasticconfig attribute)": [[16, "docarray.array.elastic.ElasticConfig.tag_indices"]], "matcharray (class in docarray.array.match)": [[17, "docarray.array.match.MatchArray"]], "adjacency (docarray.array.match.matcharray property)": [[17, "docarray.array.match.MatchArray.adjacency"]], "append() (docarray.array.match.matcharray method)": [[17, "docarray.array.match.MatchArray.append"]], "docarray.array.match": [[17, "module-docarray.array.match"]], "granularity (docarray.array.match.matcharray property)": [[17, "docarray.array.match.MatchArray.granularity"]], "reference_doc (docarray.array.match.matcharray property)": [[17, "docarray.array.match.MatchArray.reference_doc"]], "documentarrayinmemory (class in docarray.array.memory)": [[18, "docarray.array.memory.DocumentArrayInMemory"]], "docarray.array.memory": [[18, "module-docarray.array.memory"]], "allmixins (class in docarray.array.mixins)": [[19, "docarray.array.mixins.AllMixins"]], "docarray.array.mixins": [[19, "module-docarray.array.mixins"]], "contentpropertymixin (class in docarray.array.mixins.content)": [[20, "docarray.array.mixins.content.ContentPropertyMixin"]], "blobs (docarray.array.mixins.content.contentpropertymixin property)": [[20, "docarray.array.mixins.content.ContentPropertyMixin.blobs"]], "contents (docarray.array.mixins.content.contentpropertymixin property)": [[20, "docarray.array.mixins.content.ContentPropertyMixin.contents"]], "docarray.array.mixins.content": [[20, "module-docarray.array.mixins.content"]], "embeddings (docarray.array.mixins.content.contentpropertymixin property)": [[20, "docarray.array.mixins.content.ContentPropertyMixin.embeddings"]], "tensors (docarray.array.mixins.content.contentpropertymixin property)": [[20, "docarray.array.mixins.content.ContentPropertyMixin.tensors"]], "texts (docarray.array.mixins.content.contentpropertymixin property)": [[20, "docarray.array.mixins.content.ContentPropertyMixin.texts"]], "dataloadermixin (class in docarray.array.mixins.dataloader)": [[21, "docarray.array.mixins.dataloader.DataLoaderMixin"]], "dataloader() (docarray.array.mixins.dataloader.dataloadermixin class method)": [[21, "docarray.array.mixins.dataloader.DataLoaderMixin.dataloader"]], "docarray.array.mixins.dataloader": [[21, "module-docarray.array.mixins.dataloader"]], "documentarrayloader (class in docarray.array.mixins.dataloader.helper)": [[22, "docarray.array.mixins.dataloader.helper.DocumentArrayLoader"]], "docarray.array.mixins.dataloader.helper": [[22, "module-docarray.array.mixins.dataloader.helper"]], "delitemmixin (class in docarray.array.mixins.delitem)": [[23, "docarray.array.mixins.delitem.DelItemMixin"]], "docarray.array.mixins.delitem": [[23, "module-docarray.array.mixins.delitem"]], "embedmixin (class in docarray.array.mixins.embed)": [[24, "docarray.array.mixins.embed.EmbedMixin"]], "docarray.array.mixins.embed": [[24, "module-docarray.array.mixins.embed"]], "embed() (docarray.array.mixins.embed.embedmixin method)": [[24, "docarray.array.mixins.embed.EmbedMixin.embed"]], "get_framework() (in module docarray.array.mixins.embed)": [[24, "docarray.array.mixins.embed.get_framework"]], "emptymixin (class in docarray.array.mixins.empty)": [[25, "docarray.array.mixins.empty.EmptyMixin"]], "docarray.array.mixins.empty": [[25, "module-docarray.array.mixins.empty"]], "empty() (docarray.array.mixins.empty.emptymixin class method)": [[25, "docarray.array.mixins.empty.EmptyMixin.empty"]], "evaluationmixin (class in docarray.array.mixins.evaluation)": [[26, "docarray.array.mixins.evaluation.EvaluationMixin"]], "docarray.array.mixins.evaluation": [[26, "module-docarray.array.mixins.evaluation"]], "evaluate() (docarray.array.mixins.evaluation.evaluationmixin method)": [[26, "docarray.array.mixins.evaluation.EvaluationMixin.evaluate"]], "findmixin (class in docarray.array.mixins.find)": [[27, "docarray.array.mixins.find.FindMixin"]], "docarray.array.mixins.find": [[27, "module-docarray.array.mixins.find"]], "find() (docarray.array.mixins.find.findmixin method)": [[27, "docarray.array.mixins.find.FindMixin.find"]], "getattributemixin (class in docarray.array.mixins.getattr)": [[28, "docarray.array.mixins.getattr.GetAttributeMixin"]], "docarray.array.mixins.getattr": [[28, "module-docarray.array.mixins.getattr"]], "getitemmixin (class in docarray.array.mixins.getitem)": [[29, "docarray.array.mixins.getitem.GetItemMixin"]], "docarray.array.mixins.getitem": [[29, "module-docarray.array.mixins.getitem"]], "groupmixin (class in docarray.array.mixins.group)": [[30, "docarray.array.mixins.group.GroupMixin"]], "batch() (docarray.array.mixins.group.groupmixin method)": [[30, "docarray.array.mixins.group.GroupMixin.batch"]], "batch_ids() (docarray.array.mixins.group.groupmixin method)": [[30, "docarray.array.mixins.group.GroupMixin.batch_ids"]], "docarray.array.mixins.group": [[30, "module-docarray.array.mixins.group"]], "split_by_tag() (docarray.array.mixins.group.groupmixin method)": [[30, "docarray.array.mixins.group.GroupMixin.split_by_tag"]], "docarray.array.mixins.io": [[31, "module-docarray.array.mixins.io"]], "binaryiomixin (class in docarray.array.mixins.io.binary)": [[32, "docarray.array.mixins.io.binary.BinaryIOMixin"]], "lazyrequestreader (class in docarray.array.mixins.io.binary)": [[32, "docarray.array.mixins.io.binary.LazyRequestReader"]], "docarray.array.mixins.io.binary": [[32, "module-docarray.array.mixins.io.binary"]], "from_base64() (docarray.array.mixins.io.binary.binaryiomixin class method)": [[32, "docarray.array.mixins.io.binary.BinaryIOMixin.from_base64"]], "from_bytes() (docarray.array.mixins.io.binary.binaryiomixin class method)": [[32, "docarray.array.mixins.io.binary.BinaryIOMixin.from_bytes"]], "from_protobuf() (docarray.array.mixins.io.binary.binaryiomixin class method)": [[32, "docarray.array.mixins.io.binary.BinaryIOMixin.from_protobuf"]], "load_binary() (docarray.array.mixins.io.binary.binaryiomixin class method)": [[32, "docarray.array.mixins.io.binary.BinaryIOMixin.load_binary"]], "save_binary() (docarray.array.mixins.io.binary.binaryiomixin method)": [[32, "docarray.array.mixins.io.binary.BinaryIOMixin.save_binary"]], "to_base64() (docarray.array.mixins.io.binary.binaryiomixin method)": [[32, "docarray.array.mixins.io.binary.BinaryIOMixin.to_base64"]], "to_bytes() (docarray.array.mixins.io.binary.binaryiomixin method)": [[32, "docarray.array.mixins.io.binary.BinaryIOMixin.to_bytes"]], "to_protobuf() (docarray.array.mixins.io.binary.binaryiomixin method)": [[32, "docarray.array.mixins.io.binary.BinaryIOMixin.to_protobuf"]], "commoniomixin (class in docarray.array.mixins.io.common)": [[33, "docarray.array.mixins.io.common.CommonIOMixin"]], "docarray.array.mixins.io.common": [[33, "module-docarray.array.mixins.io.common"]], "load() (docarray.array.mixins.io.common.commoniomixin class method)": [[33, "docarray.array.mixins.io.common.CommonIOMixin.load"]], "save() (docarray.array.mixins.io.common.commoniomixin method)": [[33, "docarray.array.mixins.io.common.CommonIOMixin.save"]], "csviomixin (class in docarray.array.mixins.io.csv)": [[34, "docarray.array.mixins.io.csv.CsvIOMixin"]], "docarray.array.mixins.io.csv": [[34, "module-docarray.array.mixins.io.csv"]], "load_csv() (docarray.array.mixins.io.csv.csviomixin class method)": [[34, "docarray.array.mixins.io.csv.CsvIOMixin.load_csv"]], "save_csv() (docarray.array.mixins.io.csv.csviomixin method)": [[34, "docarray.array.mixins.io.csv.CsvIOMixin.save_csv"]], "save_embeddings_csv() (docarray.array.mixins.io.csv.csviomixin method)": [[34, "docarray.array.mixins.io.csv.CsvIOMixin.save_embeddings_csv"]], "dataframeiomixin (class in docarray.array.mixins.io.dataframe)": [[35, "docarray.array.mixins.io.dataframe.DataframeIOMixin"]], "docarray.array.mixins.io.dataframe": [[35, "module-docarray.array.mixins.io.dataframe"]], "from_dataframe() (docarray.array.mixins.io.dataframe.dataframeiomixin class method)": [[35, "docarray.array.mixins.io.dataframe.DataframeIOMixin.from_dataframe"]], "to_dataframe() (docarray.array.mixins.io.dataframe.dataframeiomixin method)": [[35, "docarray.array.mixins.io.dataframe.DataframeIOMixin.to_dataframe"]], "fromgeneratormixin (class in docarray.array.mixins.io.from_gen)": [[36, "docarray.array.mixins.io.from_gen.FromGeneratorMixin"]], "docarray.array.mixins.io.from_gen": [[36, "module-docarray.array.mixins.io.from_gen"]], "from_csv() (docarray.array.mixins.io.from_gen.fromgeneratormixin class method)": [[36, "docarray.array.mixins.io.from_gen.FromGeneratorMixin.from_csv"]], "from_files() (docarray.array.mixins.io.from_gen.fromgeneratormixin class method)": [[36, "docarray.array.mixins.io.from_gen.FromGeneratorMixin.from_files"]], "from_huggingface_datasets() (docarray.array.mixins.io.from_gen.fromgeneratormixin class method)": [[36, "docarray.array.mixins.io.from_gen.FromGeneratorMixin.from_huggingface_datasets"]], "from_lines() (docarray.array.mixins.io.from_gen.fromgeneratormixin class method)": [[36, "docarray.array.mixins.io.from_gen.FromGeneratorMixin.from_lines"]], "from_ndarray() (docarray.array.mixins.io.from_gen.fromgeneratormixin class method)": [[36, "docarray.array.mixins.io.from_gen.FromGeneratorMixin.from_ndarray"]], "from_ndjson() (docarray.array.mixins.io.from_gen.fromgeneratormixin class method)": [[36, "docarray.array.mixins.io.from_gen.FromGeneratorMixin.from_ndjson"]], "jsoniomixin (class in docarray.array.mixins.io.json)": [[37, "docarray.array.mixins.io.json.JsonIOMixin"]], "docarray.array.mixins.io.json": [[37, "module-docarray.array.mixins.io.json"]], "from_dict() (docarray.array.mixins.io.json.jsoniomixin class method)": [[37, "docarray.array.mixins.io.json.JsonIOMixin.from_dict"]], "from_json() (docarray.array.mixins.io.json.jsoniomixin class method)": [[37, "docarray.array.mixins.io.json.JsonIOMixin.from_json"]], "from_list() (docarray.array.mixins.io.json.jsoniomixin class method)": [[37, "docarray.array.mixins.io.json.JsonIOMixin.from_list"]], "load_json() (docarray.array.mixins.io.json.jsoniomixin class method)": [[37, "docarray.array.mixins.io.json.JsonIOMixin.load_json"]], "save_json() (docarray.array.mixins.io.json.jsoniomixin method)": [[37, "docarray.array.mixins.io.json.JsonIOMixin.save_json"]], "to_dict() (docarray.array.mixins.io.json.jsoniomixin method)": [[37, "docarray.array.mixins.io.json.JsonIOMixin.to_dict"]], "to_json() (docarray.array.mixins.io.json.jsoniomixin method)": [[37, "docarray.array.mixins.io.json.JsonIOMixin.to_json"]], "to_list() (docarray.array.mixins.io.json.jsoniomixin method)": [[37, "docarray.array.mixins.io.json.JsonIOMixin.to_list"]], "qpscolumn (class in docarray.array.mixins.io.pbar)": [[38, "docarray.array.mixins.io.pbar.QPSColumn"]], "docarray.array.mixins.io.pbar": [[38, "module-docarray.array.mixins.io.pbar"]], "get_pbar() (in module docarray.array.mixins.io.pbar)": [[38, "docarray.array.mixins.io.pbar.get_pbar"]], "get_progressbar() (in module docarray.array.mixins.io.pbar)": [[38, "docarray.array.mixins.io.pbar.get_progressbar"]], "render() (docarray.array.mixins.io.pbar.qpscolumn method)": [[38, "docarray.array.mixins.io.pbar.QPSColumn.render"]], "pushpullmixin (class in docarray.array.mixins.io.pushpull)": [[39, "docarray.array.mixins.io.pushpull.PushPullMixin"]], "docarray.array.mixins.io.pushpull": [[39, "module-docarray.array.mixins.io.pushpull"]], "pull() (docarray.array.mixins.io.pushpull.pushpullmixin class method)": [[39, "docarray.array.mixins.io.pushpull.PushPullMixin.pull"]], "push() (docarray.array.mixins.io.pushpull.pushpullmixin method)": [[39, "docarray.array.mixins.io.pushpull.PushPullMixin.push"]], "matchmixin (class in docarray.array.mixins.match)": [[40, "docarray.array.mixins.match.MatchMixin"]], "docarray.array.mixins.match": [[40, "module-docarray.array.mixins.match"]], "match() (docarray.array.mixins.match.matchmixin method)": [[40, "docarray.array.mixins.match.MatchMixin.match"]], "parallelmixin (class in docarray.array.mixins.parallel)": [[41, "docarray.array.mixins.parallel.ParallelMixin"]], "apply() (docarray.array.mixins.parallel.parallelmixin method)": [[41, "docarray.array.mixins.parallel.ParallelMixin.apply"]], "apply_batch() (docarray.array.mixins.parallel.parallelmixin method)": [[41, "docarray.array.mixins.parallel.ParallelMixin.apply_batch"]], "docarray.array.mixins.parallel": [[41, "module-docarray.array.mixins.parallel"]], "map() (docarray.array.mixins.parallel.parallelmixin method)": [[41, "docarray.array.mixins.parallel.ParallelMixin.map"]], "map_batch() (docarray.array.mixins.parallel.parallelmixin method)": [[41, "docarray.array.mixins.parallel.ParallelMixin.map_batch"]], "plotmixin (class in docarray.array.mixins.plot)": [[42, "docarray.array.mixins.plot.PlotMixin"]], "docarray.array.mixins.plot": [[42, "module-docarray.array.mixins.plot"]], "plot_embeddings() (docarray.array.mixins.plot.plotmixin method)": [[42, "docarray.array.mixins.plot.PlotMixin.plot_embeddings"]], "plot_image_sprites() (docarray.array.mixins.plot.plotmixin method)": [[42, "docarray.array.mixins.plot.PlotMixin.plot_image_sprites"]], "summary() (docarray.array.mixins.plot.plotmixin method)": [[42, "docarray.array.mixins.plot.PlotMixin.summary"]], "postmixin (class in docarray.array.mixins.post)": [[43, "docarray.array.mixins.post.PostMixin"]], "docarray.array.mixins.post": [[43, "module-docarray.array.mixins.post"]], "post() (docarray.array.mixins.post.postmixin method)": [[43, "docarray.array.mixins.post.PostMixin.post"]], "pydanticmixin (class in docarray.array.mixins.pydantic)": [[44, "docarray.array.mixins.pydantic.PydanticMixin"]], "docarray.array.mixins.pydantic": [[44, "module-docarray.array.mixins.pydantic"]], "from_pydantic_model() (docarray.array.mixins.pydantic.pydanticmixin class method)": [[44, "docarray.array.mixins.pydantic.PydanticMixin.from_pydantic_model"]], "get_json_schema() (docarray.array.mixins.pydantic.pydanticmixin class method)": [[44, "docarray.array.mixins.pydantic.PydanticMixin.get_json_schema"]], "to_pydantic_model() (docarray.array.mixins.pydantic.pydanticmixin method)": [[44, "docarray.array.mixins.pydantic.PydanticMixin.to_pydantic_model"]], "reducemixin (class in docarray.array.mixins.reduce)": [[45, "docarray.array.mixins.reduce.ReduceMixin"]], "docarray.array.mixins.reduce": [[45, "module-docarray.array.mixins.reduce"]], "reduce() (docarray.array.mixins.reduce.reducemixin method)": [[45, "docarray.array.mixins.reduce.ReduceMixin.reduce"]], "reduce_all() (docarray.array.mixins.reduce.reducemixin method)": [[45, "docarray.array.mixins.reduce.ReduceMixin.reduce_all"]], "samplemixin (class in docarray.array.mixins.sample)": [[46, "docarray.array.mixins.sample.SampleMixin"]], "docarray.array.mixins.sample": [[46, "module-docarray.array.mixins.sample"]], "sample() (docarray.array.mixins.sample.samplemixin method)": [[46, "docarray.array.mixins.sample.SampleMixin.sample"]], "shuffle() (docarray.array.mixins.sample.samplemixin method)": [[46, "docarray.array.mixins.sample.SampleMixin.shuffle"]], "setitemmixin (class in docarray.array.mixins.setitem)": [[47, "docarray.array.mixins.setitem.SetItemMixin"]], "docarray.array.mixins.setitem": [[47, "module-docarray.array.mixins.setitem"]], "strawberrymixin (class in docarray.array.mixins.strawberry)": [[48, "docarray.array.mixins.strawberry.StrawberryMixin"]], "docarray.array.mixins.strawberry": [[48, "module-docarray.array.mixins.strawberry"]], "from_strawberry_type() (docarray.array.mixins.strawberry.strawberrymixin class method)": [[48, "docarray.array.mixins.strawberry.StrawberryMixin.from_strawberry_type"]], "to_strawberry_type() (docarray.array.mixins.strawberry.strawberrymixin method)": [[48, "docarray.array.mixins.strawberry.StrawberryMixin.to_strawberry_type"]], "texttoolsmixin (class in docarray.array.mixins.text)": [[49, "docarray.array.mixins.text.TextToolsMixin"]], "docarray.array.mixins.text": [[49, "module-docarray.array.mixins.text"]], "get_vocabulary() (docarray.array.mixins.text.texttoolsmixin method)": [[49, "docarray.array.mixins.text.TextToolsMixin.get_vocabulary"]], "traversemixin (class in docarray.array.mixins.traverse)": [[50, "docarray.array.mixins.traverse.TraverseMixin"]], "docarray.array.mixins.traverse": [[50, "module-docarray.array.mixins.traverse"]], "flatten() (docarray.array.mixins.traverse.traversemixin method)": [[50, "docarray.array.mixins.traverse.TraverseMixin.flatten"]], "traverse() (docarray.array.mixins.traverse.traversemixin method)": [[50, "docarray.array.mixins.traverse.TraverseMixin.traverse"]], "traverse_flat() (docarray.array.mixins.traverse.traversemixin method)": [[50, "docarray.array.mixins.traverse.TraverseMixin.traverse_flat"]], "traverse_flat_per_path() (docarray.array.mixins.traverse.traversemixin method)": [[50, "docarray.array.mixins.traverse.TraverseMixin.traverse_flat_per_path"]], "documentarrayqdrant (class in docarray.array.qdrant)": [[51, "docarray.array.qdrant.DocumentArrayQdrant"]], "qdrantconfig (class in docarray.array.qdrant)": [[51, "docarray.array.qdrant.QdrantConfig"]], "collection_name (docarray.array.qdrant.qdrantconfig attribute)": [[51, "docarray.array.qdrant.QdrantConfig.collection_name"]], "distance (docarray.array.qdrant.qdrantconfig attribute)": [[51, "docarray.array.qdrant.QdrantConfig.distance"]], "docarray.array.qdrant": [[51, "module-docarray.array.qdrant"]], "ef_construct (docarray.array.qdrant.qdrantconfig attribute)": [[51, "docarray.array.qdrant.QdrantConfig.ef_construct"]], "full_scan_threshold (docarray.array.qdrant.qdrantconfig attribute)": [[51, "docarray.array.qdrant.QdrantConfig.full_scan_threshold"]], "host (docarray.array.qdrant.qdrantconfig attribute)": [[51, "docarray.array.qdrant.QdrantConfig.host"]], "m (docarray.array.qdrant.qdrantconfig attribute)": [[51, "docarray.array.qdrant.QdrantConfig.m"]], "n_dim (docarray.array.qdrant.qdrantconfig attribute)": [[51, "docarray.array.qdrant.QdrantConfig.n_dim"]], "port (docarray.array.qdrant.qdrantconfig attribute)": [[51, "docarray.array.qdrant.QdrantConfig.port"]], "scroll_batch_size (docarray.array.qdrant.qdrantconfig attribute)": [[51, "docarray.array.qdrant.QdrantConfig.scroll_batch_size"]], "serialize_config (docarray.array.qdrant.qdrantconfig attribute)": [[51, "docarray.array.qdrant.QdrantConfig.serialize_config"]], "docarray.array.queryset": [[52, "module-docarray.array.queryset"]], "lookupleaf (class in docarray.array.queryset.lookup)": [[53, "docarray.array.queryset.lookup.LookupLeaf"]], "lookupnode (class in docarray.array.queryset.lookup)": [[53, "docarray.array.queryset.lookup.LookupNode"]], "lookuptreeelem (class in docarray.array.queryset.lookup)": [[53, "docarray.array.queryset.lookup.LookupTreeElem"]], "lookupyerror": [[53, "docarray.array.queryset.lookup.LookupyError"]], "q (in module docarray.array.queryset.lookup)": [[53, "docarray.array.queryset.lookup.Q"]], "add_child() (docarray.array.queryset.lookup.lookupnode method)": [[53, "docarray.array.queryset.lookup.LookupNode.add_child"]], "docarray.array.queryset.lookup": [[53, "module-docarray.array.queryset.lookup"]], "dunder_partition() (in module docarray.array.queryset.lookup)": [[53, "docarray.array.queryset.lookup.dunder_partition"]], "evaluate() (docarray.array.queryset.lookup.lookupleaf method)": [[53, "docarray.array.queryset.lookup.LookupLeaf.evaluate"]], "evaluate() (docarray.array.queryset.lookup.lookupnode method)": [[53, "docarray.array.queryset.lookup.LookupNode.evaluate"]], "evaluate() (docarray.array.queryset.lookup.lookuptreeelem method)": [[53, "docarray.array.queryset.lookup.LookupTreeElem.evaluate"]], "guard_q() (in module docarray.array.queryset.lookup)": [[53, "docarray.array.queryset.lookup.guard_Q"]], "guard_iter() (in module docarray.array.queryset.lookup)": [[53, "docarray.array.queryset.lookup.guard_iter"]], "guard_list() (in module docarray.array.queryset.lookup)": [[53, "docarray.array.queryset.lookup.guard_list"]], "guard_str() (in module docarray.array.queryset.lookup)": [[53, "docarray.array.queryset.lookup.guard_str"]], "guard_type() (in module docarray.array.queryset.lookup)": [[53, "docarray.array.queryset.lookup.guard_type"]], "iff() (in module docarray.array.queryset.lookup)": [[53, "docarray.array.queryset.lookup.iff"]], "iff_not_none() (in module docarray.array.queryset.lookup)": [[53, "docarray.array.queryset.lookup.iff_not_none"]], "lookup() (in module docarray.array.queryset.lookup)": [[53, "docarray.array.queryset.lookup.lookup"]], "queryparser (class in docarray.array.queryset.parser)": [[54, "docarray.array.queryset.parser.QueryParser"]], "docarray.array.queryset.parser": [[54, "module-docarray.array.queryset.parser"]], "evaluate() (docarray.array.queryset.parser.queryparser method)": [[54, "docarray.array.queryset.parser.QueryParser.evaluate"]], "documentarraysqlite (class in docarray.array.sqlite)": [[55, "docarray.array.sqlite.DocumentArraySqlite"]], "sqliteconfig (class in docarray.array.sqlite)": [[55, "docarray.array.sqlite.SqliteConfig"]], "conn_config (docarray.array.sqlite.sqliteconfig attribute)": [[55, "docarray.array.sqlite.SqliteConfig.conn_config"]], "connection (docarray.array.sqlite.sqliteconfig attribute)": [[55, "docarray.array.sqlite.SqliteConfig.connection"]], "docarray.array.sqlite": [[55, "module-docarray.array.sqlite"]], "journal_mode (docarray.array.sqlite.sqliteconfig attribute)": [[55, "docarray.array.sqlite.SqliteConfig.journal_mode"]], "serialize_config (docarray.array.sqlite.sqliteconfig attribute)": [[55, "docarray.array.sqlite.SqliteConfig.serialize_config"]], "synchronous (docarray.array.sqlite.sqliteconfig attribute)": [[55, "docarray.array.sqlite.SqliteConfig.synchronous"]], "table_name (docarray.array.sqlite.sqliteconfig attribute)": [[55, "docarray.array.sqlite.SqliteConfig.table_name"]], "docarray.array.storage": [[56, "module-docarray.array.storage"]], "annliteconfig (class in docarray.array.storage.annlite)": [[57, "docarray.array.storage.annlite.AnnliteConfig"]], "storagemixins (class in docarray.array.storage.annlite)": [[57, "docarray.array.storage.annlite.StorageMixins"]], "data_path (docarray.array.storage.annlite.annliteconfig attribute)": [[57, "docarray.array.storage.annlite.AnnliteConfig.data_path"]], "docarray.array.storage.annlite": [[57, "module-docarray.array.storage.annlite"]], "ef_construction (docarray.array.storage.annlite.annliteconfig attribute)": [[57, "docarray.array.storage.annlite.AnnliteConfig.ef_construction"]], "ef_search (docarray.array.storage.annlite.annliteconfig attribute)": [[57, "docarray.array.storage.annlite.AnnliteConfig.ef_search"]], "max_connection (docarray.array.storage.annlite.annliteconfig attribute)": [[57, "docarray.array.storage.annlite.AnnliteConfig.max_connection"]], "metric (docarray.array.storage.annlite.annliteconfig attribute)": [[57, "docarray.array.storage.annlite.AnnliteConfig.metric"]], "n_dim (docarray.array.storage.annlite.annliteconfig attribute)": [[57, "docarray.array.storage.annlite.AnnliteConfig.n_dim"]], "serialize_config (docarray.array.storage.annlite.annliteconfig attribute)": [[57, "docarray.array.storage.annlite.AnnliteConfig.serialize_config"]], "annliteconfig (class in docarray.array.storage.annlite.backend)": [[58, "docarray.array.storage.annlite.backend.AnnliteConfig"]], "backendmixin (class in docarray.array.storage.annlite.backend)": [[58, "docarray.array.storage.annlite.backend.BackendMixin"]], "data_path (docarray.array.storage.annlite.backend.annliteconfig attribute)": [[58, "docarray.array.storage.annlite.backend.AnnliteConfig.data_path"]], "docarray.array.storage.annlite.backend": [[58, "module-docarray.array.storage.annlite.backend"]], "ef_construction (docarray.array.storage.annlite.backend.annliteconfig attribute)": [[58, "docarray.array.storage.annlite.backend.AnnliteConfig.ef_construction"]], "ef_search (docarray.array.storage.annlite.backend.annliteconfig attribute)": [[58, "docarray.array.storage.annlite.backend.AnnliteConfig.ef_search"]], "max_connection (docarray.array.storage.annlite.backend.annliteconfig attribute)": [[58, "docarray.array.storage.annlite.backend.AnnliteConfig.max_connection"]], "metric (docarray.array.storage.annlite.backend.annliteconfig attribute)": [[58, "docarray.array.storage.annlite.backend.AnnliteConfig.metric"]], "n_dim (docarray.array.storage.annlite.backend.annliteconfig attribute)": [[58, "docarray.array.storage.annlite.backend.AnnliteConfig.n_dim"]], "serialize_config (docarray.array.storage.annlite.backend.annliteconfig attribute)": [[58, "docarray.array.storage.annlite.backend.AnnliteConfig.serialize_config"]], "findmixin (class in docarray.array.storage.annlite.find)": [[59, "docarray.array.storage.annlite.find.FindMixin"]], "docarray.array.storage.annlite.find": [[59, "module-docarray.array.storage.annlite.find"]], "getsetdelmixin (class in docarray.array.storage.annlite.getsetdel)": [[60, "docarray.array.storage.annlite.getsetdel.GetSetDelMixin"]], "docarray.array.storage.annlite.getsetdel": [[60, "module-docarray.array.storage.annlite.getsetdel"]], "offsetmapping (class in docarray.array.storage.annlite.helper)": [[61, "docarray.array.storage.annlite.helper.OffsetMapping"]], "clear() (docarray.array.storage.annlite.helper.offsetmapping method)": [[61, "docarray.array.storage.annlite.helper.OffsetMapping.clear"]], "close() (docarray.array.storage.annlite.helper.offsetmapping method)": [[61, "docarray.array.storage.annlite.helper.OffsetMapping.close"]], "create_table() (docarray.array.storage.annlite.helper.offsetmapping method)": [[61, "docarray.array.storage.annlite.helper.OffsetMapping.create_table"]], "del_at_offset() (docarray.array.storage.annlite.helper.offsetmapping method)": [[61, "docarray.array.storage.annlite.helper.OffsetMapping.del_at_offset"]], "del_at_offsets() (docarray.array.storage.annlite.helper.offsetmapping method)": [[61, "docarray.array.storage.annlite.helper.OffsetMapping.del_at_offsets"]], "docarray.array.storage.annlite.helper": [[61, "module-docarray.array.storage.annlite.helper"]], "drop() (docarray.array.storage.annlite.helper.offsetmapping method)": [[61, "docarray.array.storage.annlite.helper.OffsetMapping.drop"]], "extend_doc_ids() (docarray.array.storage.annlite.helper.offsetmapping method)": [[61, "docarray.array.storage.annlite.helper.OffsetMapping.extend_doc_ids"]], "get_all_ids() (docarray.array.storage.annlite.helper.offsetmapping method)": [[61, "docarray.array.storage.annlite.helper.OffsetMapping.get_all_ids"]], "get_id_by_offset() (docarray.array.storage.annlite.helper.offsetmapping method)": [[61, "docarray.array.storage.annlite.helper.OffsetMapping.get_id_by_offset"]], "get_ids_by_offsets() (docarray.array.storage.annlite.helper.offsetmapping method)": [[61, "docarray.array.storage.annlite.helper.OffsetMapping.get_ids_by_offsets"]], "get_offset_by_id() (docarray.array.storage.annlite.helper.offsetmapping method)": [[61, "docarray.array.storage.annlite.helper.OffsetMapping.get_offset_by_id"]], "get_offsets_by_ids() (docarray.array.storage.annlite.helper.offsetmapping method)": [[61, "docarray.array.storage.annlite.helper.OffsetMapping.get_offsets_by_ids"]], "insert_at_offset() (docarray.array.storage.annlite.helper.offsetmapping method)": [[61, "docarray.array.storage.annlite.helper.OffsetMapping.insert_at_offset"]], "set_at_offset() (docarray.array.storage.annlite.helper.offsetmapping method)": [[61, "docarray.array.storage.annlite.helper.OffsetMapping.set_at_offset"]], "shift_offset() (docarray.array.storage.annlite.helper.offsetmapping method)": [[61, "docarray.array.storage.annlite.helper.OffsetMapping.shift_offset"]], "size (docarray.array.storage.annlite.helper.offsetmapping property)": [[61, "docarray.array.storage.annlite.helper.OffsetMapping.size"]], "sequencelikemixin (class in docarray.array.storage.annlite.seqlike)": [[62, "docarray.array.storage.annlite.seqlike.SequenceLikeMixin"]], "docarray.array.storage.annlite.seqlike": [[62, "module-docarray.array.storage.annlite.seqlike"]], "extend() (docarray.array.storage.annlite.seqlike.sequencelikemixin method)": [[62, "docarray.array.storage.annlite.seqlike.SequenceLikeMixin.extend"]], "docarray.array.storage.base": [[63, "module-docarray.array.storage.base"]], "basebackendmixin (class in docarray.array.storage.base.backend)": [[64, "docarray.array.storage.base.backend.BaseBackendMixin"]], "docarray.array.storage.base.backend": [[64, "module-docarray.array.storage.base.backend"]], "basegetsetdelmixin (class in docarray.array.storage.base.getsetdel)": [[65, "docarray.array.storage.base.getsetdel.BaseGetSetDelMixin"]], "docarray.array.storage.base.getsetdel": [[65, "module-docarray.array.storage.base.getsetdel"]], "offset2id (class in docarray.array.storage.base.helper)": [[66, "docarray.array.storage.base.helper.Offset2ID"]], "append() (docarray.array.storage.base.helper.offset2id method)": [[66, "docarray.array.storage.base.helper.Offset2ID.append"]], "clear() (docarray.array.storage.base.helper.offset2id method)": [[66, "docarray.array.storage.base.helper.Offset2ID.clear"]], "delete_by_id() (docarray.array.storage.base.helper.offset2id method)": [[66, "docarray.array.storage.base.helper.Offset2ID.delete_by_id"]], "delete_by_ids() (docarray.array.storage.base.helper.offset2id method)": [[66, "docarray.array.storage.base.helper.Offset2ID.delete_by_ids"]], "delete_by_offset() (docarray.array.storage.base.helper.offset2id method)": [[66, "docarray.array.storage.base.helper.Offset2ID.delete_by_offset"]], "docarray.array.storage.base.helper": [[66, "module-docarray.array.storage.base.helper"]], "extend() (docarray.array.storage.base.helper.offset2id method)": [[66, "docarray.array.storage.base.helper.Offset2ID.extend"]], "get_id() (docarray.array.storage.base.helper.offset2id method)": [[66, "docarray.array.storage.base.helper.Offset2ID.get_id"]], "index() (docarray.array.storage.base.helper.offset2id method)": [[66, "docarray.array.storage.base.helper.Offset2ID.index"]], "insert() (docarray.array.storage.base.helper.offset2id method)": [[66, "docarray.array.storage.base.helper.Offset2ID.insert"]], "load() (docarray.array.storage.base.helper.offset2id method)": [[66, "docarray.array.storage.base.helper.Offset2ID.load"]], "save() (docarray.array.storage.base.helper.offset2id method)": [[66, "docarray.array.storage.base.helper.Offset2ID.save"]], "update() (docarray.array.storage.base.helper.offset2id method)": [[66, "docarray.array.storage.base.helper.Offset2ID.update"]], "update_ids() (docarray.array.storage.base.helper.offset2id method)": [[66, "docarray.array.storage.base.helper.Offset2ID.update_ids"]], "basesequencelikemixin (class in docarray.array.storage.base.seqlike)": [[67, "docarray.array.storage.base.seqlike.BaseSequenceLikeMixin"]], "append() (docarray.array.storage.base.seqlike.basesequencelikemixin method)": [[67, "docarray.array.storage.base.seqlike.BaseSequenceLikeMixin.append"]], "clear() (docarray.array.storage.base.seqlike.basesequencelikemixin method)": [[67, "docarray.array.storage.base.seqlike.BaseSequenceLikeMixin.clear"]], "docarray.array.storage.base.seqlike": [[67, "module-docarray.array.storage.base.seqlike"]], "extend() (docarray.array.storage.base.seqlike.basesequencelikemixin method)": [[67, "docarray.array.storage.base.seqlike.BaseSequenceLikeMixin.extend"]], "insert() (docarray.array.storage.base.seqlike.basesequencelikemixin method)": [[67, "docarray.array.storage.base.seqlike.BaseSequenceLikeMixin.insert"]], "elasticconfig (class in docarray.array.storage.elastic)": [[68, "docarray.array.storage.elastic.ElasticConfig"]], "storagemixins (class in docarray.array.storage.elastic)": [[68, "docarray.array.storage.elastic.StorageMixins"]], "batch_size (docarray.array.storage.elastic.elasticconfig attribute)": [[68, "docarray.array.storage.elastic.ElasticConfig.batch_size"]], "distance (docarray.array.storage.elastic.elasticconfig attribute)": [[68, "docarray.array.storage.elastic.ElasticConfig.distance"]], "docarray.array.storage.elastic": [[68, "module-docarray.array.storage.elastic"]], "ef_construction (docarray.array.storage.elastic.elasticconfig attribute)": [[68, "docarray.array.storage.elastic.ElasticConfig.ef_construction"]], "es_config (docarray.array.storage.elastic.elasticconfig attribute)": [[68, "docarray.array.storage.elastic.ElasticConfig.es_config"]], "hosts (docarray.array.storage.elastic.elasticconfig attribute)": [[68, "docarray.array.storage.elastic.ElasticConfig.hosts"]], "index_name (docarray.array.storage.elastic.elasticconfig attribute)": [[68, "docarray.array.storage.elastic.ElasticConfig.index_name"]], "index_text (docarray.array.storage.elastic.elasticconfig attribute)": [[68, "docarray.array.storage.elastic.ElasticConfig.index_text"]], "m (docarray.array.storage.elastic.elasticconfig attribute)": [[68, "docarray.array.storage.elastic.ElasticConfig.m"]], "n_dim (docarray.array.storage.elastic.elasticconfig attribute)": [[68, "docarray.array.storage.elastic.ElasticConfig.n_dim"]], "tag_indices (docarray.array.storage.elastic.elasticconfig attribute)": [[68, "docarray.array.storage.elastic.ElasticConfig.tag_indices"]], "backendmixin (class in docarray.array.storage.elastic.backend)": [[69, "docarray.array.storage.elastic.backend.BackendMixin"]], "elasticconfig (class in docarray.array.storage.elastic.backend)": [[69, "docarray.array.storage.elastic.backend.ElasticConfig"]], "batch_size (docarray.array.storage.elastic.backend.elasticconfig attribute)": [[69, "docarray.array.storage.elastic.backend.ElasticConfig.batch_size"]], "distance (docarray.array.storage.elastic.backend.elasticconfig attribute)": [[69, "docarray.array.storage.elastic.backend.ElasticConfig.distance"]], "docarray.array.storage.elastic.backend": [[69, "module-docarray.array.storage.elastic.backend"]], "ef_construction (docarray.array.storage.elastic.backend.elasticconfig attribute)": [[69, "docarray.array.storage.elastic.backend.ElasticConfig.ef_construction"]], "es_config (docarray.array.storage.elastic.backend.elasticconfig attribute)": [[69, "docarray.array.storage.elastic.backend.ElasticConfig.es_config"]], "hosts (docarray.array.storage.elastic.backend.elasticconfig attribute)": [[69, "docarray.array.storage.elastic.backend.ElasticConfig.hosts"]], "index_name (docarray.array.storage.elastic.backend.elasticconfig attribute)": [[69, "docarray.array.storage.elastic.backend.ElasticConfig.index_name"]], "index_text (docarray.array.storage.elastic.backend.elasticconfig attribute)": [[69, "docarray.array.storage.elastic.backend.ElasticConfig.index_text"]], "m (docarray.array.storage.elastic.backend.elasticconfig attribute)": [[69, "docarray.array.storage.elastic.backend.ElasticConfig.m"]], "n_dim (docarray.array.storage.elastic.backend.elasticconfig attribute)": [[69, "docarray.array.storage.elastic.backend.ElasticConfig.n_dim"]], "tag_indices (docarray.array.storage.elastic.backend.elasticconfig attribute)": [[69, "docarray.array.storage.elastic.backend.ElasticConfig.tag_indices"]], "findmixin (class in docarray.array.storage.elastic.find)": [[70, "docarray.array.storage.elastic.find.FindMixin"]], "docarray.array.storage.elastic.find": [[70, "module-docarray.array.storage.elastic.find"]], "getsetdelmixin (class in docarray.array.storage.elastic.getsetdel)": [[71, "docarray.array.storage.elastic.getsetdel.GetSetDelMixin"]], "docarray.array.storage.elastic.getsetdel": [[71, "module-docarray.array.storage.elastic.getsetdel"]], "sequencelikemixin (class in docarray.array.storage.elastic.seqlike)": [[72, "docarray.array.storage.elastic.seqlike.SequenceLikeMixin"]], "docarray.array.storage.elastic.seqlike": [[72, "module-docarray.array.storage.elastic.seqlike"]], "extend() (docarray.array.storage.elastic.seqlike.sequencelikemixin method)": [[72, "docarray.array.storage.elastic.seqlike.SequenceLikeMixin.extend"]], "storagemixins (class in docarray.array.storage.memory)": [[73, "docarray.array.storage.memory.StorageMixins"]], "docarray.array.storage.memory": [[73, "module-docarray.array.storage.memory"]], "backendmixin (class in docarray.array.storage.memory.backend)": [[74, "docarray.array.storage.memory.backend.BackendMixin"]], "docarray.array.storage.memory.backend": [[74, "module-docarray.array.storage.memory.backend"]], "needs_id2offset_rebuild() (in module docarray.array.storage.memory.backend)": [[74, "docarray.array.storage.memory.backend.needs_id2offset_rebuild"]], "findmixin (class in docarray.array.storage.memory.find)": [[75, "docarray.array.storage.memory.find.FindMixin"]], "docarray.array.storage.memory.find": [[75, "module-docarray.array.storage.memory.find"]], "getsetdelmixin (class in docarray.array.storage.memory.getsetdel)": [[76, "docarray.array.storage.memory.getsetdel.GetSetDelMixin"]], "docarray.array.storage.memory.getsetdel": [[76, "module-docarray.array.storage.memory.getsetdel"]], "sequencelikemixin (class in docarray.array.storage.memory.seqlike)": [[77, "docarray.array.storage.memory.seqlike.SequenceLikeMixin"]], "append() (docarray.array.storage.memory.seqlike.sequencelikemixin method)": [[77, "docarray.array.storage.memory.seqlike.SequenceLikeMixin.append"]], "docarray.array.storage.memory.seqlike": [[77, "module-docarray.array.storage.memory.seqlike"]], "extend() (docarray.array.storage.memory.seqlike.sequencelikemixin method)": [[77, "docarray.array.storage.memory.seqlike.SequenceLikeMixin.extend"]], "insert() (docarray.array.storage.memory.seqlike.sequencelikemixin method)": [[77, "docarray.array.storage.memory.seqlike.SequenceLikeMixin.insert"]], "qdrantconfig (class in docarray.array.storage.qdrant)": [[78, "docarray.array.storage.qdrant.QdrantConfig"]], "storagemixins (class in docarray.array.storage.qdrant)": [[78, "docarray.array.storage.qdrant.StorageMixins"]], "client (docarray.array.storage.qdrant.storagemixins property)": [[78, "docarray.array.storage.qdrant.StorageMixins.client"]], "collection_name (docarray.array.storage.qdrant.qdrantconfig attribute)": [[78, "docarray.array.storage.qdrant.QdrantConfig.collection_name"]], "collection_name (docarray.array.storage.qdrant.storagemixins property)": [[78, "docarray.array.storage.qdrant.StorageMixins.collection_name"]], "collection_name_meta (docarray.array.storage.qdrant.storagemixins property)": [[78, "docarray.array.storage.qdrant.StorageMixins.collection_name_meta"]], "config (docarray.array.storage.qdrant.storagemixins property)": [[78, "docarray.array.storage.qdrant.StorageMixins.config"]], "distance (docarray.array.storage.qdrant.qdrantconfig attribute)": [[78, "docarray.array.storage.qdrant.QdrantConfig.distance"]], "distance (docarray.array.storage.qdrant.storagemixins property)": [[78, "docarray.array.storage.qdrant.StorageMixins.distance"]], "docarray.array.storage.qdrant": [[78, "module-docarray.array.storage.qdrant"]], "ef_construct (docarray.array.storage.qdrant.qdrantconfig attribute)": [[78, "docarray.array.storage.qdrant.QdrantConfig.ef_construct"]], "full_scan_threshold (docarray.array.storage.qdrant.qdrantconfig attribute)": [[78, "docarray.array.storage.qdrant.QdrantConfig.full_scan_threshold"]], "host (docarray.array.storage.qdrant.qdrantconfig attribute)": [[78, "docarray.array.storage.qdrant.QdrantConfig.host"]], "m (docarray.array.storage.qdrant.qdrantconfig attribute)": [[78, "docarray.array.storage.qdrant.QdrantConfig.m"]], "n_dim (docarray.array.storage.qdrant.qdrantconfig attribute)": [[78, "docarray.array.storage.qdrant.QdrantConfig.n_dim"]], "n_dim (docarray.array.storage.qdrant.storagemixins property)": [[78, "docarray.array.storage.qdrant.StorageMixins.n_dim"]], "port (docarray.array.storage.qdrant.qdrantconfig attribute)": [[78, "docarray.array.storage.qdrant.QdrantConfig.port"]], "scroll_batch_size (docarray.array.storage.qdrant.qdrantconfig attribute)": [[78, "docarray.array.storage.qdrant.QdrantConfig.scroll_batch_size"]], "scroll_batch_size (docarray.array.storage.qdrant.storagemixins property)": [[78, "docarray.array.storage.qdrant.StorageMixins.scroll_batch_size"]], "serialization_config (docarray.array.storage.qdrant.storagemixins property)": [[78, "docarray.array.storage.qdrant.StorageMixins.serialization_config"]], "serialize_config (docarray.array.storage.qdrant.qdrantconfig attribute)": [[78, "docarray.array.storage.qdrant.QdrantConfig.serialize_config"]], "serialize_config (docarray.array.storage.qdrant.storagemixins property)": [[78, "docarray.array.storage.qdrant.StorageMixins.serialize_config"]], "backendmixin (class in docarray.array.storage.qdrant.backend)": [[79, "docarray.array.storage.qdrant.backend.BackendMixin"]], "qdrantconfig (class in docarray.array.storage.qdrant.backend)": [[79, "docarray.array.storage.qdrant.backend.QdrantConfig"]], "collection_name (docarray.array.storage.qdrant.backend.qdrantconfig attribute)": [[79, "docarray.array.storage.qdrant.backend.QdrantConfig.collection_name"]], "distance (docarray.array.storage.qdrant.backend.qdrantconfig attribute)": [[79, "docarray.array.storage.qdrant.backend.QdrantConfig.distance"]], "docarray.array.storage.qdrant.backend": [[79, "module-docarray.array.storage.qdrant.backend"]], "ef_construct (docarray.array.storage.qdrant.backend.qdrantconfig attribute)": [[79, "docarray.array.storage.qdrant.backend.QdrantConfig.ef_construct"]], "full_scan_threshold (docarray.array.storage.qdrant.backend.qdrantconfig attribute)": [[79, "docarray.array.storage.qdrant.backend.QdrantConfig.full_scan_threshold"]], "host (docarray.array.storage.qdrant.backend.qdrantconfig attribute)": [[79, "docarray.array.storage.qdrant.backend.QdrantConfig.host"]], "m (docarray.array.storage.qdrant.backend.qdrantconfig attribute)": [[79, "docarray.array.storage.qdrant.backend.QdrantConfig.m"]], "n_dim (docarray.array.storage.qdrant.backend.qdrantconfig attribute)": [[79, "docarray.array.storage.qdrant.backend.QdrantConfig.n_dim"]], "port (docarray.array.storage.qdrant.backend.qdrantconfig attribute)": [[79, "docarray.array.storage.qdrant.backend.QdrantConfig.port"]], "scroll_batch_size (docarray.array.storage.qdrant.backend.qdrantconfig attribute)": [[79, "docarray.array.storage.qdrant.backend.QdrantConfig.scroll_batch_size"]], "serialize_config (docarray.array.storage.qdrant.backend.qdrantconfig attribute)": [[79, "docarray.array.storage.qdrant.backend.QdrantConfig.serialize_config"]], "findmixin (class in docarray.array.storage.qdrant.find)": [[80, "docarray.array.storage.qdrant.find.FindMixin"]], "client (docarray.array.storage.qdrant.find.findmixin property)": [[80, "docarray.array.storage.qdrant.find.FindMixin.client"]], "collection_name (docarray.array.storage.qdrant.find.findmixin property)": [[80, "docarray.array.storage.qdrant.find.FindMixin.collection_name"]], "distance (docarray.array.storage.qdrant.find.findmixin property)": [[80, "docarray.array.storage.qdrant.find.FindMixin.distance"]], "docarray.array.storage.qdrant.find": [[80, "module-docarray.array.storage.qdrant.find"]], "serialize_config (docarray.array.storage.qdrant.find.findmixin property)": [[80, "docarray.array.storage.qdrant.find.FindMixin.serialize_config"]], "getsetdelmixin (class in docarray.array.storage.qdrant.getsetdel)": [[81, "docarray.array.storage.qdrant.getsetdel.GetSetDelMixin"]], "client (docarray.array.storage.qdrant.getsetdel.getsetdelmixin property)": [[81, "docarray.array.storage.qdrant.getsetdel.GetSetDelMixin.client"]], "collection_name (docarray.array.storage.qdrant.getsetdel.getsetdelmixin property)": [[81, "docarray.array.storage.qdrant.getsetdel.GetSetDelMixin.collection_name"]], "docarray.array.storage.qdrant.getsetdel": [[81, "module-docarray.array.storage.qdrant.getsetdel"]], "n_dim (docarray.array.storage.qdrant.getsetdel.getsetdelmixin property)": [[81, "docarray.array.storage.qdrant.getsetdel.GetSetDelMixin.n_dim"]], "scan() (docarray.array.storage.qdrant.getsetdel.getsetdelmixin method)": [[81, "docarray.array.storage.qdrant.getsetdel.GetSetDelMixin.scan"]], "scroll_batch_size (docarray.array.storage.qdrant.getsetdel.getsetdelmixin property)": [[81, "docarray.array.storage.qdrant.getsetdel.GetSetDelMixin.scroll_batch_size"]], "serialization_config (docarray.array.storage.qdrant.getsetdel.getsetdelmixin property)": [[81, "docarray.array.storage.qdrant.getsetdel.GetSetDelMixin.serialization_config"]], "docarray.array.storage.qdrant.helper": [[82, "module-docarray.array.storage.qdrant.helper"]], "sequencelikemixin (class in docarray.array.storage.qdrant.seqlike)": [[83, "docarray.array.storage.qdrant.seqlike.SequenceLikeMixin"]], "client (docarray.array.storage.qdrant.seqlike.sequencelikemixin property)": [[83, "docarray.array.storage.qdrant.seqlike.SequenceLikeMixin.client"]], "collection_name (docarray.array.storage.qdrant.seqlike.sequencelikemixin property)": [[83, "docarray.array.storage.qdrant.seqlike.SequenceLikeMixin.collection_name"]], "config (docarray.array.storage.qdrant.seqlike.sequencelikemixin property)": [[83, "docarray.array.storage.qdrant.seqlike.SequenceLikeMixin.config"]], "docarray.array.storage.qdrant.seqlike": [[83, "module-docarray.array.storage.qdrant.seqlike"]], "extend() (docarray.array.storage.qdrant.seqlike.sequencelikemixin method)": [[83, "docarray.array.storage.qdrant.seqlike.SequenceLikeMixin.extend"]], "docarray.array.storage.registry": [[84, "module-docarray.array.storage.registry"]], "sqliteconfig (class in docarray.array.storage.sqlite)": [[85, "docarray.array.storage.sqlite.SqliteConfig"]], "storagemixins (class in docarray.array.storage.sqlite)": [[85, "docarray.array.storage.sqlite.StorageMixins"]], "conn_config (docarray.array.storage.sqlite.sqliteconfig attribute)": [[85, "docarray.array.storage.sqlite.SqliteConfig.conn_config"]], "connection (docarray.array.storage.sqlite.sqliteconfig attribute)": [[85, "docarray.array.storage.sqlite.SqliteConfig.connection"]], "docarray.array.storage.sqlite": [[85, "module-docarray.array.storage.sqlite"]], "journal_mode (docarray.array.storage.sqlite.sqliteconfig attribute)": [[85, "docarray.array.storage.sqlite.SqliteConfig.journal_mode"]], "serialize_config (docarray.array.storage.sqlite.sqliteconfig attribute)": [[85, "docarray.array.storage.sqlite.SqliteConfig.serialize_config"]], "synchronous (docarray.array.storage.sqlite.sqliteconfig attribute)": [[85, "docarray.array.storage.sqlite.SqliteConfig.synchronous"]], "table_name (docarray.array.storage.sqlite.sqliteconfig attribute)": [[85, "docarray.array.storage.sqlite.SqliteConfig.table_name"]], "backendmixin (class in docarray.array.storage.sqlite.backend)": [[86, "docarray.array.storage.sqlite.backend.BackendMixin"]], "sqliteconfig (class in docarray.array.storage.sqlite.backend)": [[86, "docarray.array.storage.sqlite.backend.SqliteConfig"]], "conn_config (docarray.array.storage.sqlite.backend.sqliteconfig attribute)": [[86, "docarray.array.storage.sqlite.backend.SqliteConfig.conn_config"]], "connection (docarray.array.storage.sqlite.backend.sqliteconfig attribute)": [[86, "docarray.array.storage.sqlite.backend.SqliteConfig.connection"]], "docarray.array.storage.sqlite.backend": [[86, "module-docarray.array.storage.sqlite.backend"]], "journal_mode (docarray.array.storage.sqlite.backend.sqliteconfig attribute)": [[86, "docarray.array.storage.sqlite.backend.SqliteConfig.journal_mode"]], "schema_version (docarray.array.storage.sqlite.backend.backendmixin attribute)": [[86, "docarray.array.storage.sqlite.backend.BackendMixin.schema_version"]], "serialize_config (docarray.array.storage.sqlite.backend.sqliteconfig attribute)": [[86, "docarray.array.storage.sqlite.backend.SqliteConfig.serialize_config"]], "synchronous (docarray.array.storage.sqlite.backend.sqliteconfig attribute)": [[86, "docarray.array.storage.sqlite.backend.SqliteConfig.synchronous"]], "table_name (docarray.array.storage.sqlite.backend.sqliteconfig attribute)": [[86, "docarray.array.storage.sqlite.backend.SqliteConfig.table_name"]], "getsetdelmixin (class in docarray.array.storage.sqlite.getsetdel)": [[87, "docarray.array.storage.sqlite.getsetdel.GetSetDelMixin"]], "docarray.array.storage.sqlite.getsetdel": [[87, "module-docarray.array.storage.sqlite.getsetdel"]], "docarray.array.storage.sqlite.helper": [[88, "module-docarray.array.storage.sqlite.helper"]], "initialize_table() (in module docarray.array.storage.sqlite.helper)": [[88, "docarray.array.storage.sqlite.helper.initialize_table"]], "sequencelikemixin (class in docarray.array.storage.sqlite.seqlike)": [[89, "docarray.array.storage.sqlite.seqlike.SequenceLikeMixin"]], "append() (docarray.array.storage.sqlite.seqlike.sequencelikemixin method)": [[89, "docarray.array.storage.sqlite.seqlike.SequenceLikeMixin.append"]], "docarray.array.storage.sqlite.seqlike": [[89, "module-docarray.array.storage.sqlite.seqlike"]], "insert() (docarray.array.storage.sqlite.seqlike.sequencelikemixin method)": [[89, "docarray.array.storage.sqlite.seqlike.SequenceLikeMixin.insert"]], "storagemixins (class in docarray.array.storage.weaviate)": [[90, "docarray.array.storage.weaviate.StorageMixins"]], "weaviateconfig (class in docarray.array.storage.weaviate)": [[90, "docarray.array.storage.weaviate.WeaviateConfig"]], "docarray.array.storage.weaviate": [[90, "module-docarray.array.storage.weaviate"]], "ef (docarray.array.storage.weaviate.weaviateconfig attribute)": [[90, "docarray.array.storage.weaviate.WeaviateConfig.ef"]], "ef_construction (docarray.array.storage.weaviate.weaviateconfig attribute)": [[90, "docarray.array.storage.weaviate.WeaviateConfig.ef_construction"]], "host (docarray.array.storage.weaviate.weaviateconfig attribute)": [[90, "docarray.array.storage.weaviate.WeaviateConfig.host"]], "max_connections (docarray.array.storage.weaviate.weaviateconfig attribute)": [[90, "docarray.array.storage.weaviate.WeaviateConfig.max_connections"]], "n_dim (docarray.array.storage.weaviate.weaviateconfig attribute)": [[90, "docarray.array.storage.weaviate.WeaviateConfig.n_dim"]], "name (docarray.array.storage.weaviate.weaviateconfig attribute)": [[90, "docarray.array.storage.weaviate.WeaviateConfig.name"]], "port (docarray.array.storage.weaviate.weaviateconfig attribute)": [[90, "docarray.array.storage.weaviate.WeaviateConfig.port"]], "protocol (docarray.array.storage.weaviate.weaviateconfig attribute)": [[90, "docarray.array.storage.weaviate.WeaviateConfig.protocol"]], "serialize_config (docarray.array.storage.weaviate.weaviateconfig attribute)": [[90, "docarray.array.storage.weaviate.WeaviateConfig.serialize_config"]], "timeout_config (docarray.array.storage.weaviate.weaviateconfig attribute)": [[90, "docarray.array.storage.weaviate.WeaviateConfig.timeout_config"]], "backendmixin (class in docarray.array.storage.weaviate.backend)": [[91, "docarray.array.storage.weaviate.backend.BackendMixin"]], "weaviateconfig (class in docarray.array.storage.weaviate.backend)": [[91, "docarray.array.storage.weaviate.backend.WeaviateConfig"]], "docarray.array.storage.weaviate.backend": [[91, "module-docarray.array.storage.weaviate.backend"]], "ef (docarray.array.storage.weaviate.backend.weaviateconfig attribute)": [[91, "docarray.array.storage.weaviate.backend.WeaviateConfig.ef"]], "ef_construction (docarray.array.storage.weaviate.backend.weaviateconfig attribute)": [[91, "docarray.array.storage.weaviate.backend.WeaviateConfig.ef_construction"]], "host (docarray.array.storage.weaviate.backend.weaviateconfig attribute)": [[91, "docarray.array.storage.weaviate.backend.WeaviateConfig.host"]], "max_connections (docarray.array.storage.weaviate.backend.weaviateconfig attribute)": [[91, "docarray.array.storage.weaviate.backend.WeaviateConfig.max_connections"]], "n_dim (docarray.array.storage.weaviate.backend.weaviateconfig attribute)": [[91, "docarray.array.storage.weaviate.backend.WeaviateConfig.n_dim"]], "name (docarray.array.storage.weaviate.backend.backendmixin property)": [[91, "docarray.array.storage.weaviate.backend.BackendMixin.name"]], "name (docarray.array.storage.weaviate.backend.weaviateconfig attribute)": [[91, "docarray.array.storage.weaviate.backend.WeaviateConfig.name"]], "port (docarray.array.storage.weaviate.backend.weaviateconfig attribute)": [[91, "docarray.array.storage.weaviate.backend.WeaviateConfig.port"]], "protocol (docarray.array.storage.weaviate.backend.weaviateconfig attribute)": [[91, "docarray.array.storage.weaviate.backend.WeaviateConfig.protocol"]], "serialize_config (docarray.array.storage.weaviate.backend.weaviateconfig attribute)": [[91, "docarray.array.storage.weaviate.backend.WeaviateConfig.serialize_config"]], "timeout_config (docarray.array.storage.weaviate.backend.weaviateconfig attribute)": [[91, "docarray.array.storage.weaviate.backend.WeaviateConfig.timeout_config"]], "findmixin (class in docarray.array.storage.weaviate.find)": [[92, "docarray.array.storage.weaviate.find.FindMixin"]], "docarray.array.storage.weaviate.find": [[92, "module-docarray.array.storage.weaviate.find"]], "getsetdelmixin (class in docarray.array.storage.weaviate.getsetdel)": [[93, "docarray.array.storage.weaviate.getsetdel.GetSetDelMixin"]], "docarray.array.storage.weaviate.getsetdel": [[93, "module-docarray.array.storage.weaviate.getsetdel"]], "sequencelikemixin (class in docarray.array.storage.weaviate.seqlike)": [[94, "docarray.array.storage.weaviate.seqlike.SequenceLikeMixin"]], "docarray.array.storage.weaviate.seqlike": [[94, "module-docarray.array.storage.weaviate.seqlike"]], "extend() (docarray.array.storage.weaviate.seqlike.sequencelikemixin method)": [[94, "docarray.array.storage.weaviate.seqlike.SequenceLikeMixin.extend"]], "documentarrayweaviate (class in docarray.array.weaviate)": [[95, "docarray.array.weaviate.DocumentArrayWeaviate"]], "weaviateconfig (class in docarray.array.weaviate)": [[95, "docarray.array.weaviate.WeaviateConfig"]], "docarray.array.weaviate": [[95, "module-docarray.array.weaviate"]], "ef (docarray.array.weaviate.weaviateconfig attribute)": [[95, "docarray.array.weaviate.WeaviateConfig.ef"]], "ef_construction (docarray.array.weaviate.weaviateconfig attribute)": [[95, "docarray.array.weaviate.WeaviateConfig.ef_construction"]], "host (docarray.array.weaviate.weaviateconfig attribute)": [[95, "docarray.array.weaviate.WeaviateConfig.host"]], "max_connections (docarray.array.weaviate.weaviateconfig attribute)": [[95, "docarray.array.weaviate.WeaviateConfig.max_connections"]], "n_dim (docarray.array.weaviate.weaviateconfig attribute)": [[95, "docarray.array.weaviate.WeaviateConfig.n_dim"]], "name (docarray.array.weaviate.weaviateconfig attribute)": [[95, "docarray.array.weaviate.WeaviateConfig.name"]], "port (docarray.array.weaviate.weaviateconfig attribute)": [[95, "docarray.array.weaviate.WeaviateConfig.port"]], "protocol (docarray.array.weaviate.weaviateconfig attribute)": [[95, "docarray.array.weaviate.WeaviateConfig.protocol"]], "serialize_config (docarray.array.weaviate.weaviateconfig attribute)": [[95, "docarray.array.weaviate.WeaviateConfig.serialize_config"]], "timeout_config (docarray.array.weaviate.weaviateconfig attribute)": [[95, "docarray.array.weaviate.WeaviateConfig.timeout_config"]], "basedctype (class in docarray.base)": [[96, "docarray.base.BaseDCType"]], "clear() (docarray.base.basedctype method)": [[96, "docarray.base.BaseDCType.clear"]], "copy_from() (docarray.base.basedctype method)": [[96, "docarray.base.BaseDCType.copy_from"]], "docarray.base": [[96, "module-docarray.base"]], "nbytes (docarray.base.basedctype property)": [[96, "docarray.base.BaseDCType.nbytes"]], "non_empty_fields (docarray.base.basedctype property)": [[96, "docarray.base.BaseDCType.non_empty_fields"]], "pop() (docarray.base.basedctype method)": [[96, "docarray.base.BaseDCType.pop"]], "docarray.dataclasses": [[97, "module-docarray.dataclasses"]], "audio_getter() (in module docarray.dataclasses.getter)": [[98, "docarray.dataclasses.getter.audio_getter"]], "blob_getter() (in module docarray.dataclasses.getter)": [[98, "docarray.dataclasses.getter.blob_getter"]], "docarray.dataclasses.getter": [[98, "module-docarray.dataclasses.getter"]], "image_getter() (in module docarray.dataclasses.getter)": [[98, "docarray.dataclasses.getter.image_getter"]], "json_getter() (in module docarray.dataclasses.getter)": [[98, "docarray.dataclasses.getter.json_getter"]], "mesh_getter() (in module docarray.dataclasses.getter)": [[98, "docarray.dataclasses.getter.mesh_getter"]], "tabular_getter() (in module docarray.dataclasses.getter)": [[98, "docarray.dataclasses.getter.tabular_getter"]], "text_getter() (in module docarray.dataclasses.getter)": [[98, "docarray.dataclasses.getter.text_getter"]], "video_getter() (in module docarray.dataclasses.getter)": [[98, "docarray.dataclasses.getter.video_getter"]], "audio_setter() (in module docarray.dataclasses.setter)": [[99, "docarray.dataclasses.setter.audio_setter"]], "blob_setter() (in module docarray.dataclasses.setter)": [[99, "docarray.dataclasses.setter.blob_setter"]], "docarray.dataclasses.setter": [[99, "module-docarray.dataclasses.setter"]], "image_setter() (in module docarray.dataclasses.setter)": [[99, "docarray.dataclasses.setter.image_setter"]], "json_setter() (in module docarray.dataclasses.setter)": [[99, "docarray.dataclasses.setter.json_setter"]], "mesh_setter() (in module docarray.dataclasses.setter)": [[99, "docarray.dataclasses.setter.mesh_setter"]], "tabular_setter() (in module docarray.dataclasses.setter)": [[99, "docarray.dataclasses.setter.tabular_setter"]], "text_setter() (in module docarray.dataclasses.setter)": [[99, "docarray.dataclasses.setter.text_setter"]], "video_setter() (in module docarray.dataclasses.setter)": [[99, "docarray.dataclasses.setter.video_setter"]], "dataclass() (in module docarray.dataclasses.types)": [[100, "docarray.dataclasses.types.dataclass"]], "docarray.dataclasses.types": [[100, "module-docarray.dataclasses.types"]], "field() (in module docarray.dataclasses.types)": [[100, "docarray.dataclasses.types.field"]], "is_multimodal() (in module docarray.dataclasses.types)": [[100, "docarray.dataclasses.types.is_multimodal"]], "document (class in docarray.document)": [[101, "docarray.document.Document"]], "docarray.document": [[101, "module-docarray.document"]], "documentdata (class in docarray.document.data)": [[102, "docarray.document.data.DocumentData"]], "adjacency (docarray.document.data.documentdata attribute)": [[102, "docarray.document.data.DocumentData.adjacency"]], "blob (docarray.document.data.documentdata attribute)": [[102, "docarray.document.data.DocumentData.blob"]], "chunks (docarray.document.data.documentdata attribute)": [[102, "docarray.document.data.DocumentData.chunks"]], "content (docarray.document.data.documentdata attribute)": [[102, "docarray.document.data.DocumentData.content"]], "docarray.document.data": [[102, "module-docarray.document.data"]], "embedding (docarray.document.data.documentdata attribute)": [[102, "docarray.document.data.DocumentData.embedding"]], "evaluations (docarray.document.data.documentdata attribute)": [[102, "docarray.document.data.DocumentData.evaluations"]], "granularity (docarray.document.data.documentdata attribute)": [[102, "docarray.document.data.DocumentData.granularity"]], "id (docarray.document.data.documentdata attribute)": [[102, "docarray.document.data.DocumentData.id"]], "location (docarray.document.data.documentdata attribute)": [[102, "docarray.document.data.DocumentData.location"]], "matches (docarray.document.data.documentdata attribute)": [[102, "docarray.document.data.DocumentData.matches"]], "mime_type (docarray.document.data.documentdata attribute)": [[102, "docarray.document.data.DocumentData.mime_type"]], "modality (docarray.document.data.documentdata attribute)": [[102, "docarray.document.data.DocumentData.modality"]], "offset (docarray.document.data.documentdata attribute)": [[102, "docarray.document.data.DocumentData.offset"]], "parent_id (docarray.document.data.documentdata attribute)": [[102, "docarray.document.data.DocumentData.parent_id"]], "scores (docarray.document.data.documentdata attribute)": [[102, "docarray.document.data.DocumentData.scores"]], "tags (docarray.document.data.documentdata attribute)": [[102, "docarray.document.data.DocumentData.tags"]], "tensor (docarray.document.data.documentdata attribute)": [[102, "docarray.document.data.DocumentData.tensor"]], "text (docarray.document.data.documentdata attribute)": [[102, "docarray.document.data.DocumentData.text"]], "uri (docarray.document.data.documentdata attribute)": [[102, "docarray.document.data.DocumentData.uri"]], "weight (docarray.document.data.documentdata attribute)": [[102, "docarray.document.data.DocumentData.weight"]], "docarray.document.generators": [[103, "module-docarray.document.generators"]], "from_csv() (in module docarray.document.generators)": [[103, "docarray.document.generators.from_csv"]], "from_files() (in module docarray.document.generators)": [[103, "docarray.document.generators.from_files"]], "from_huggingface_datasets() (in module docarray.document.generators)": [[103, "docarray.document.generators.from_huggingface_datasets"]], "from_lines() (in module docarray.document.generators)": [[103, "docarray.document.generators.from_lines"]], "from_ndarray() (in module docarray.document.generators)": [[103, "docarray.document.generators.from_ndarray"]], "from_ndjson() (in module docarray.document.generators)": [[103, "docarray.document.generators.from_ndjson"]], "allmixins (class in docarray.document.mixins)": [[104, "docarray.document.mixins.AllMixins"]], "docarray.document.mixins": [[104, "module-docarray.document.mixins"]], "getattributesmixin (class in docarray.document.mixins.attribute)": [[105, "docarray.document.mixins.attribute.GetAttributesMixin"]], "docarray.document.mixins.attribute": [[105, "module-docarray.document.mixins.attribute"]], "audiodatamixin (class in docarray.document.mixins.audio)": [[106, "docarray.document.mixins.audio.AudioDataMixin"]], "docarray.document.mixins.audio": [[106, "module-docarray.document.mixins.audio"]], "load_uri_to_audio_tensor() (docarray.document.mixins.audio.audiodatamixin method)": [[106, "docarray.document.mixins.audio.AudioDataMixin.load_uri_to_audio_tensor"]], "save_audio_tensor_to_file() (docarray.document.mixins.audio.audiodatamixin method)": [[106, "docarray.document.mixins.audio.AudioDataMixin.save_audio_tensor_to_file"]], "blobdatamixin (class in docarray.document.mixins.blob)": [[107, "docarray.document.mixins.blob.BlobDataMixin"]], "convert_blob_to_datauri() (docarray.document.mixins.blob.blobdatamixin method)": [[107, "docarray.document.mixins.blob.BlobDataMixin.convert_blob_to_datauri"]], "docarray.document.mixins.blob": [[107, "module-docarray.document.mixins.blob"]], "load_uri_to_blob() (docarray.document.mixins.blob.blobdatamixin method)": [[107, "docarray.document.mixins.blob.BlobDataMixin.load_uri_to_blob"]], "save_blob_to_file() (docarray.document.mixins.blob.blobdatamixin method)": [[107, "docarray.document.mixins.blob.BlobDataMixin.save_blob_to_file"]], "contentpropertymixin (class in docarray.document.mixins.content)": [[108, "docarray.document.mixins.content.ContentPropertyMixin"]], "content_hash (docarray.document.mixins.content.contentpropertymixin property)": [[108, "docarray.document.mixins.content.ContentPropertyMixin.content_hash"]], "convert_content_to_datauri() (docarray.document.mixins.content.contentpropertymixin method)": [[108, "docarray.document.mixins.content.ContentPropertyMixin.convert_content_to_datauri"]], "docarray.document.mixins.content": [[108, "module-docarray.document.mixins.content"]], "convertmixin (class in docarray.document.mixins.convert)": [[109, "docarray.document.mixins.convert.ConvertMixin"]], "convert_blob_to_tensor() (docarray.document.mixins.convert.convertmixin method)": [[109, "docarray.document.mixins.convert.ConvertMixin.convert_blob_to_tensor"]], "convert_tensor_to_blob() (docarray.document.mixins.convert.convertmixin method)": [[109, "docarray.document.mixins.convert.ConvertMixin.convert_tensor_to_blob"]], "convert_uri_to_datauri() (docarray.document.mixins.convert.convertmixin method)": [[109, "docarray.document.mixins.convert.ConvertMixin.convert_uri_to_datauri"]], "docarray.document.mixins.convert": [[109, "module-docarray.document.mixins.convert"]], "urifilemixin (class in docarray.document.mixins.dump)": [[110, "docarray.document.mixins.dump.UriFileMixin"]], "docarray.document.mixins.dump": [[110, "module-docarray.document.mixins.dump"]], "save_uri_to_file() (docarray.document.mixins.dump.urifilemixin method)": [[110, "docarray.document.mixins.dump.UriFileMixin.save_uri_to_file"]], "featurehashmixin (class in docarray.document.mixins.featurehash)": [[111, "docarray.document.mixins.featurehash.FeatureHashMixin"]], "docarray.document.mixins.featurehash": [[111, "module-docarray.document.mixins.featurehash"]], "embed_feature_hashing() (docarray.document.mixins.featurehash.featurehashmixin method)": [[111, "docarray.document.mixins.featurehash.FeatureHashMixin.embed_feature_hashing"]], "docarray.document.mixins.helper": [[112, "module-docarray.document.mixins.helper"]], "imagedatamixin (class in docarray.document.mixins.image)": [[113, "docarray.document.mixins.image.ImageDataMixin"]], "convert_blob_to_image_tensor() (docarray.document.mixins.image.imagedatamixin method)": [[113, "docarray.document.mixins.image.ImageDataMixin.convert_blob_to_image_tensor"]], "convert_image_tensor_to_blob() (docarray.document.mixins.image.imagedatamixin method)": [[113, "docarray.document.mixins.image.ImageDataMixin.convert_image_tensor_to_blob"]], "convert_image_tensor_to_sliding_windows() (docarray.document.mixins.image.imagedatamixin method)": [[113, "docarray.document.mixins.image.ImageDataMixin.convert_image_tensor_to_sliding_windows"]], "convert_image_tensor_to_uri() (docarray.document.mixins.image.imagedatamixin method)": [[113, "docarray.document.mixins.image.ImageDataMixin.convert_image_tensor_to_uri"]], "docarray.document.mixins.image": [[113, "module-docarray.document.mixins.image"]], "load_uri_to_image_tensor() (docarray.document.mixins.image.imagedatamixin method)": [[113, "docarray.document.mixins.image.ImageDataMixin.load_uri_to_image_tensor"]], "save_image_tensor_to_file() (docarray.document.mixins.image.imagedatamixin method)": [[113, "docarray.document.mixins.image.ImageDataMixin.save_image_tensor_to_file"]], "set_image_tensor_channel_axis() (docarray.document.mixins.image.imagedatamixin method)": [[113, "docarray.document.mixins.image.ImageDataMixin.set_image_tensor_channel_axis"]], "set_image_tensor_inv_normalization() (docarray.document.mixins.image.imagedatamixin method)": [[113, "docarray.document.mixins.image.ImageDataMixin.set_image_tensor_inv_normalization"]], "set_image_tensor_normalization() (docarray.document.mixins.image.imagedatamixin method)": [[113, "docarray.document.mixins.image.ImageDataMixin.set_image_tensor_normalization"]], "set_image_tensor_shape() (docarray.document.mixins.image.imagedatamixin method)": [[113, "docarray.document.mixins.image.ImageDataMixin.set_image_tensor_shape"]], "meshdatamixin (class in docarray.document.mixins.mesh)": [[114, "docarray.document.mixins.mesh.MeshDataMixin"]], "docarray.document.mixins.mesh": [[114, "module-docarray.document.mixins.mesh"]], "load_uri_to_point_cloud_tensor() (docarray.document.mixins.mesh.meshdatamixin method)": [[114, "docarray.document.mixins.mesh.MeshDataMixin.load_uri_to_point_cloud_tensor"]], "multimodalmixin (class in docarray.document.mixins.multimodal)": [[115, "docarray.document.mixins.multimodal.MultiModalMixin"]], "docarray.document.mixins.multimodal": [[115, "module-docarray.document.mixins.multimodal"]], "get_multi_modal_attribute() (docarray.document.mixins.multimodal.multimodalmixin method)": [[115, "docarray.document.mixins.multimodal.MultiModalMixin.get_multi_modal_attribute"]], "is_multimodal (docarray.document.mixins.multimodal.multimodalmixin property)": [[115, "docarray.document.mixins.multimodal.MultiModalMixin.is_multimodal"]], "plotmixin (class in docarray.document.mixins.plot)": [[116, "docarray.document.mixins.plot.PlotMixin"]], "display() (docarray.document.mixins.plot.plotmixin method)": [[116, "docarray.document.mixins.plot.PlotMixin.display"]], "docarray.document.mixins.plot": [[116, "module-docarray.document.mixins.plot"]], "plot() (docarray.document.mixins.plot.plotmixin method)": [[116, "docarray.document.mixins.plot.PlotMixin.plot"]], "plot_matches_sprites() (docarray.document.mixins.plot.plotmixin method)": [[116, "docarray.document.mixins.plot.PlotMixin.plot_matches_sprites"]], "summary() (docarray.document.mixins.plot.plotmixin method)": [[116, "docarray.document.mixins.plot.PlotMixin.summary"]], "portingmixin (class in docarray.document.mixins.porting)": [[117, "docarray.document.mixins.porting.PortingMixin"]], "docarray.document.mixins.porting": [[117, "module-docarray.document.mixins.porting"]], "from_base64() (docarray.document.mixins.porting.portingmixin class method)": [[117, "docarray.document.mixins.porting.PortingMixin.from_base64"]], "from_bytes() (docarray.document.mixins.porting.portingmixin class method)": [[117, "docarray.document.mixins.porting.PortingMixin.from_bytes"]], "from_dict() (docarray.document.mixins.porting.portingmixin class method)": [[117, "docarray.document.mixins.porting.PortingMixin.from_dict"]], "from_json() (docarray.document.mixins.porting.portingmixin class method)": [[117, "docarray.document.mixins.porting.PortingMixin.from_json"]], "to_base64() (docarray.document.mixins.porting.portingmixin method)": [[117, "docarray.document.mixins.porting.PortingMixin.to_base64"]], "to_bytes() (docarray.document.mixins.porting.portingmixin method)": [[117, "docarray.document.mixins.porting.PortingMixin.to_bytes"]], "to_dict() (docarray.document.mixins.porting.portingmixin method)": [[117, "docarray.document.mixins.porting.PortingMixin.to_dict"]], "to_json() (docarray.document.mixins.porting.portingmixin method)": [[117, "docarray.document.mixins.porting.PortingMixin.to_json"]], "propertymixin (class in docarray.document.mixins.property)": [[118, "docarray.document.mixins.property.PropertyMixin"]], "blob (docarray.document.mixins.property.propertymixin property)": [[118, "docarray.document.mixins.property.PropertyMixin.blob"]], "chunks (docarray.document.mixins.property.propertymixin property)": [[118, "docarray.document.mixins.property.PropertyMixin.chunks"]], "content (docarray.document.mixins.property.propertymixin property)": [[118, "docarray.document.mixins.property.PropertyMixin.content"]], "content_type (docarray.document.mixins.property.propertymixin property)": [[118, "docarray.document.mixins.property.PropertyMixin.content_type"]], "docarray.document.mixins.property": [[118, "module-docarray.document.mixins.property"]], "matches (docarray.document.mixins.property.propertymixin property)": [[118, "docarray.document.mixins.property.PropertyMixin.matches"]], "mime_type (docarray.document.mixins.property.propertymixin property)": [[118, "docarray.document.mixins.property.PropertyMixin.mime_type"]], "tensor (docarray.document.mixins.property.propertymixin property)": [[118, "docarray.document.mixins.property.PropertyMixin.tensor"]], "text (docarray.document.mixins.property.propertymixin property)": [[118, "docarray.document.mixins.property.PropertyMixin.text"]], "uri (docarray.document.mixins.property.propertymixin property)": [[118, "docarray.document.mixins.property.PropertyMixin.uri"]], "protobufmixin (class in docarray.document.mixins.protobuf)": [[119, "docarray.document.mixins.protobuf.ProtobufMixin"]], "docarray.document.mixins.protobuf": [[119, "module-docarray.document.mixins.protobuf"]], "from_protobuf() (docarray.document.mixins.protobuf.protobufmixin class method)": [[119, "docarray.document.mixins.protobuf.ProtobufMixin.from_protobuf"]], "to_protobuf() (docarray.document.mixins.protobuf.protobufmixin method)": [[119, "docarray.document.mixins.protobuf.ProtobufMixin.to_protobuf"]], "pydanticmixin (class in docarray.document.mixins.pydantic)": [[120, "docarray.document.mixins.pydantic.PydanticMixin"]], "docarray.document.mixins.pydantic": [[120, "module-docarray.document.mixins.pydantic"]], "from_pydantic_model() (docarray.document.mixins.pydantic.pydanticmixin class method)": [[120, "docarray.document.mixins.pydantic.PydanticMixin.from_pydantic_model"]], "get_json_schema() (docarray.document.mixins.pydantic.pydanticmixin class method)": [[120, "docarray.document.mixins.pydantic.PydanticMixin.get_json_schema"]], "to_pydantic_model() (docarray.document.mixins.pydantic.pydanticmixin method)": [[120, "docarray.document.mixins.pydantic.PydanticMixin.to_pydantic_model"]], "colorboxembedding (class in docarray.document.mixins.rich_embedding)": [[121, "docarray.document.mixins.rich_embedding.ColorBoxEmbedding"]], "docarray.document.mixins.rich_embedding": [[121, "module-docarray.document.mixins.rich_embedding"]], "strawberrymixin (class in docarray.document.mixins.strawberry)": [[122, "docarray.document.mixins.strawberry.StrawberryMixin"]], "docarray.document.mixins.strawberry": [[122, "module-docarray.document.mixins.strawberry"]], "from_strawberry_type() (docarray.document.mixins.strawberry.strawberrymixin class method)": [[122, "docarray.document.mixins.strawberry.StrawberryMixin.from_strawberry_type"]], "to_strawberry_type() (docarray.document.mixins.strawberry.strawberrymixin method)": [[122, "docarray.document.mixins.strawberry.StrawberryMixin.to_strawberry_type"]], "singletonsugarmixin (class in docarray.document.mixins.sugar)": [[123, "docarray.document.mixins.sugar.SingletonSugarMixin"]], "docarray.document.mixins.sugar": [[123, "module-docarray.document.mixins.sugar"]], "embed() (docarray.document.mixins.sugar.singletonsugarmixin method)": [[123, "docarray.document.mixins.sugar.SingletonSugarMixin.embed"]], "match() (docarray.document.mixins.sugar.singletonsugarmixin method)": [[123, "docarray.document.mixins.sugar.SingletonSugarMixin.match"]], "post() (docarray.document.mixins.sugar.singletonsugarmixin method)": [[123, "docarray.document.mixins.sugar.SingletonSugarMixin.post"]], "textdatamixin (class in docarray.document.mixins.text)": [[124, "docarray.document.mixins.text.TextDataMixin"]], "convert_tensor_to_text() (docarray.document.mixins.text.textdatamixin method)": [[124, "docarray.document.mixins.text.TextDataMixin.convert_tensor_to_text"]], "convert_text_to_datauri() (docarray.document.mixins.text.textdatamixin method)": [[124, "docarray.document.mixins.text.TextDataMixin.convert_text_to_datauri"]], "convert_text_to_tensor() (docarray.document.mixins.text.textdatamixin method)": [[124, "docarray.document.mixins.text.TextDataMixin.convert_text_to_tensor"]], "docarray.document.mixins.text": [[124, "module-docarray.document.mixins.text"]], "get_vocabulary() (docarray.document.mixins.text.textdatamixin method)": [[124, "docarray.document.mixins.text.TextDataMixin.get_vocabulary"]], "load_uri_to_text() (docarray.document.mixins.text.textdatamixin method)": [[124, "docarray.document.mixins.text.TextDataMixin.load_uri_to_text"]], "videodatamixin (class in docarray.document.mixins.video)": [[125, "docarray.document.mixins.video.VideoDataMixin"]], "docarray.document.mixins.video": [[125, "module-docarray.document.mixins.video"]], "load_uri_to_video_tensor() (docarray.document.mixins.video.videodatamixin method)": [[125, "docarray.document.mixins.video.VideoDataMixin.load_uri_to_video_tensor"]], "save_video_tensor_to_file() (docarray.document.mixins.video.videodatamixin method)": [[125, "docarray.document.mixins.video.VideoDataMixin.save_video_tensor_to_file"]], "pydanticdocument (class in docarray.document.pydantic_model)": [[126, "docarray.document.pydantic_model.PydanticDocument"]], "pydanticdocument.config (class in docarray.document.pydantic_model)": [[126, "docarray.document.pydantic_model.PydanticDocument.Config"]], "adjacency (docarray.document.pydantic_model.pydanticdocument attribute)": [[126, "docarray.document.pydantic_model.PydanticDocument.adjacency"]], "blob (docarray.document.pydantic_model.pydanticdocument attribute)": [[126, "docarray.document.pydantic_model.PydanticDocument.blob"]], "chunks (docarray.document.pydantic_model.pydanticdocument attribute)": [[126, "docarray.document.pydantic_model.PydanticDocument.chunks"]], "docarray.document.pydantic_model": [[126, "module-docarray.document.pydantic_model"]], "embedding (docarray.document.pydantic_model.pydanticdocument attribute)": [[126, "docarray.document.pydantic_model.PydanticDocument.embedding"]], "evaluations (docarray.document.pydantic_model.pydanticdocument attribute)": [[126, "docarray.document.pydantic_model.PydanticDocument.evaluations"]], "granularity (docarray.document.pydantic_model.pydanticdocument attribute)": [[126, "docarray.document.pydantic_model.PydanticDocument.granularity"]], "id (docarray.document.pydantic_model.pydanticdocument attribute)": [[126, "docarray.document.pydantic_model.PydanticDocument.id"]], "location (docarray.document.pydantic_model.pydanticdocument attribute)": [[126, "docarray.document.pydantic_model.PydanticDocument.location"]], "matches (docarray.document.pydantic_model.pydanticdocument attribute)": [[126, "docarray.document.pydantic_model.PydanticDocument.matches"]], "mime_type (docarray.document.pydantic_model.pydanticdocument attribute)": [[126, "docarray.document.pydantic_model.PydanticDocument.mime_type"]], "modality (docarray.document.pydantic_model.pydanticdocument attribute)": [[126, "docarray.document.pydantic_model.PydanticDocument.modality"]], "offset (docarray.document.pydantic_model.pydanticdocument attribute)": [[126, "docarray.document.pydantic_model.PydanticDocument.offset"]], "parent_id (docarray.document.pydantic_model.pydanticdocument attribute)": [[126, "docarray.document.pydantic_model.PydanticDocument.parent_id"]], "scores (docarray.document.pydantic_model.pydanticdocument attribute)": [[126, "docarray.document.pydantic_model.PydanticDocument.scores"]], "smart_union (docarray.document.pydantic_model.pydanticdocument.config attribute)": [[126, "docarray.document.pydantic_model.PydanticDocument.Config.smart_union"]], "tags (docarray.document.pydantic_model.pydanticdocument attribute)": [[126, "docarray.document.pydantic_model.PydanticDocument.tags"]], "tensor (docarray.document.pydantic_model.pydanticdocument attribute)": [[126, "docarray.document.pydantic_model.PydanticDocument.tensor"]], "text (docarray.document.pydantic_model.pydanticdocument attribute)": [[126, "docarray.document.pydantic_model.PydanticDocument.text"]], "uri (docarray.document.pydantic_model.pydanticdocument attribute)": [[126, "docarray.document.pydantic_model.PydanticDocument.uri"]], "weight (docarray.document.pydantic_model.pydanticdocument attribute)": [[126, "docarray.document.pydantic_model.PydanticDocument.weight"]], "add_protocol_and_compress_to_file_path() (in module docarray.helper)": [[128, "docarray.helper.add_protocol_and_compress_to_file_path"]], "cached_property (class in docarray.helper)": [[128, "docarray.helper.cached_property"]], "compress_bytes() (in module docarray.helper)": [[128, "docarray.helper.compress_bytes"]], "dataclass_from_dict() (in module docarray.helper)": [[128, "docarray.helper.dataclass_from_dict"]], "decompress_bytes() (in module docarray.helper)": [[128, "docarray.helper.decompress_bytes"]], "deprecate_by() (in module docarray.helper)": [[128, "docarray.helper.deprecate_by"]], "docarray.helper": [[128, "module-docarray.helper"]], "download_mermaid_url() (in module docarray.helper)": [[128, "docarray.helper.download_mermaid_url"]], "dunder_get() (in module docarray.helper)": [[128, "docarray.helper.dunder_get"]], "filter_dict() (in module docarray.helper)": [[128, "docarray.helper.filter_dict"]], "get_ci_vendor() (in module docarray.helper)": [[128, "docarray.helper.get_ci_vendor"]], "get_compress_ctx() (in module docarray.helper)": [[128, "docarray.helper.get_compress_ctx"]], "get_full_version() (in module docarray.helper)": [[128, "docarray.helper.get_full_version"]], "get_request_header() (in module docarray.helper)": [[128, "docarray.helper.get_request_header"]], "protocol_and_compress_from_file_path() (in module docarray.helper)": [[128, "docarray.helper.protocol_and_compress_from_file_path"]], "random_identity() (in module docarray.helper)": [[128, "docarray.helper.random_identity"]], "random_port() (in module docarray.helper)": [[128, "docarray.helper.random_port"]], "random_uuid() (in module docarray.helper)": [[128, "docarray.helper.random_uuid"]], "reset_ports() (in module docarray.helper)": [[128, "docarray.helper.reset_ports"]], "typename() (in module docarray.helper)": [[128, "docarray.helper.typename"]], "docarray.math": [[129, "module-docarray.math"]], "cdist() (in module docarray.math.distance)": [[130, "docarray.math.distance.cdist"]], "docarray.math.distance": [[130, "module-docarray.math.distance"]], "pdist() (in module docarray.math.distance)": [[130, "docarray.math.distance.pdist"]], "cosine() (in module docarray.math.distance.numpy)": [[131, "docarray.math.distance.numpy.cosine"]], "docarray.math.distance.numpy": [[131, "module-docarray.math.distance.numpy"]], "euclidean() (in module docarray.math.distance.numpy)": [[131, "docarray.math.distance.numpy.euclidean"]], "sparse_cosine() (in module docarray.math.distance.numpy)": [[131, "docarray.math.distance.numpy.sparse_cosine"]], "sparse_euclidean() (in module docarray.math.distance.numpy)": [[131, "docarray.math.distance.numpy.sparse_euclidean"]], "sparse_sqeuclidean() (in module docarray.math.distance.numpy)": [[131, "docarray.math.distance.numpy.sparse_sqeuclidean"]], "sqeuclidean() (in module docarray.math.distance.numpy)": [[131, "docarray.math.distance.numpy.sqeuclidean"]], "cosine() (in module docarray.math.distance.tensorflow)": [[133, "docarray.math.distance.tensorflow.cosine"]], "docarray.math.distance.tensorflow": [[133, "module-docarray.math.distance.tensorflow"]], "euclidean() (in module docarray.math.distance.tensorflow)": [[133, "docarray.math.distance.tensorflow.euclidean"]], "sqeuclidean() (in module docarray.math.distance.tensorflow)": [[133, "docarray.math.distance.tensorflow.sqeuclidean"]], "cosine() (in module docarray.math.distance.torch)": [[134, "docarray.math.distance.torch.cosine"]], "docarray.math.distance.torch": [[134, "module-docarray.math.distance.torch"]], "euclidean() (in module docarray.math.distance.torch)": [[134, "docarray.math.distance.torch.euclidean"]], "sqeuclidean() (in module docarray.math.distance.torch)": [[134, "docarray.math.distance.torch.sqeuclidean"]], "average_precision() (in module docarray.math.evaluation)": [[135, "docarray.math.evaluation.average_precision"]], "dcg_at_k() (in module docarray.math.evaluation)": [[135, "docarray.math.evaluation.dcg_at_k"]], "docarray.math.evaluation": [[135, "module-docarray.math.evaluation"]], "f1_score_at_k() (in module docarray.math.evaluation)": [[135, "docarray.math.evaluation.f1_score_at_k"]], "hit_at_k() (in module docarray.math.evaluation)": [[135, "docarray.math.evaluation.hit_at_k"]], "ndcg_at_k() (in module docarray.math.evaluation)": [[135, "docarray.math.evaluation.ndcg_at_k"]], "precision_at_k() (in module docarray.math.evaluation)": [[135, "docarray.math.evaluation.precision_at_k"]], "r_precision() (in module docarray.math.evaluation)": [[135, "docarray.math.evaluation.r_precision"]], "recall_at_k() (in module docarray.math.evaluation)": [[135, "docarray.math.evaluation.recall_at_k"]], "reciprocal_rank() (in module docarray.math.evaluation)": [[135, "docarray.math.evaluation.reciprocal_rank"]], "docarray.math.helper": [[136, "module-docarray.math.helper"]], "minmax_normalize() (in module docarray.math.helper)": [[136, "docarray.math.helper.minmax_normalize"]], "top_k() (in module docarray.math.helper)": [[136, "docarray.math.helper.top_k"]], "update_rows_x_mat_best() (in module docarray.math.helper)": [[136, "docarray.math.helper.update_rows_x_mat_best"]], "check_arraylike_equality() (in module docarray.math.ndarray)": [[137, "docarray.math.ndarray.check_arraylike_equality"]], "detach_tensor_if_present() (in module docarray.math.ndarray)": [[137, "docarray.math.ndarray.detach_tensor_if_present"]], "docarray.math.ndarray": [[137, "module-docarray.math.ndarray"]], "get_array_rows() (in module docarray.math.ndarray)": [[137, "docarray.math.ndarray.get_array_rows"]], "get_array_type() (in module docarray.math.ndarray)": [[137, "docarray.math.ndarray.get_array_type"]], "ravel() (in module docarray.math.ndarray)": [[137, "docarray.math.ndarray.ravel"]], "to_list() (in module docarray.math.ndarray)": [[137, "docarray.math.ndarray.to_list"]], "to_numpy_array() (in module docarray.math.ndarray)": [[137, "docarray.math.ndarray.to_numpy_array"]], "unravel() (in module docarray.math.ndarray)": [[137, "docarray.math.ndarray.unravel"]], "docarray.proto": [[138, "module-docarray.proto"]], "docarray.proto.docarray_pb2": [[139, "module-docarray.proto.docarray_pb2"]], "docarray.proto.io": [[140, "module-docarray.proto.io"]], "flush_proto() (in module docarray.proto.io)": [[140, "docarray.proto.io.flush_proto"]], "parse_proto() (in module docarray.proto.io)": [[140, "docarray.proto.io.parse_proto"]], "docarray.proto.io.ndarray": [[141, "module-docarray.proto.io.ndarray"]], "flush_ndarray() (in module docarray.proto.io.ndarray)": [[141, "docarray.proto.io.ndarray.flush_ndarray"]], "read_ndarray() (in module docarray.proto.io.ndarray)": [[141, "docarray.proto.io.ndarray.read_ndarray"]], "namedscore (class in docarray.score)": [[142, "docarray.score.NamedScore"]], "docarray.score": [[142, "module-docarray.score"]], "namedscoredata (class in docarray.score.data)": [[143, "docarray.score.data.NamedScoreData"]], "description (docarray.score.data.namedscoredata attribute)": [[143, "docarray.score.data.NamedScoreData.description"]], "docarray.score.data": [[143, "module-docarray.score.data"]], "op_name (docarray.score.data.namedscoredata attribute)": [[143, "docarray.score.data.NamedScoreData.op_name"]], "ref_id (docarray.score.data.namedscoredata attribute)": [[143, "docarray.score.data.NamedScoreData.ref_id"]], "value (docarray.score.data.namedscoredata attribute)": [[143, "docarray.score.data.NamedScoreData.value"]], "allmixins (class in docarray.score.mixins)": [[144, "docarray.score.mixins.AllMixins"]], "docarray.score.mixins": [[144, "module-docarray.score.mixins"]], "propertymixin (class in docarray.score.mixins.property)": [[145, "docarray.score.mixins.property.PropertyMixin"]], "description (docarray.score.mixins.property.propertymixin property)": [[145, "docarray.score.mixins.property.PropertyMixin.description"]], "docarray.score.mixins.property": [[145, "module-docarray.score.mixins.property"]], "op_name (docarray.score.mixins.property.propertymixin property)": [[145, "docarray.score.mixins.property.PropertyMixin.op_name"]], "ref_id (docarray.score.mixins.property.propertymixin property)": [[145, "docarray.score.mixins.property.PropertyMixin.ref_id"]], "value (docarray.score.mixins.property.propertymixin property)": [[145, "docarray.score.mixins.property.PropertyMixin.value"]], "representmixin (class in docarray.score.mixins.representer)": [[146, "docarray.score.mixins.representer.RepresentMixin"]], "docarray.score.mixins.representer": [[146, "module-docarray.score.mixins.representer"]], "to_dict() (docarray.score.mixins.representer.representmixin method)": [[146, "docarray.score.mixins.representer.RepresentMixin.to_dict"]], "docarray.typing": [[147, "module-docarray.typing"]]}})